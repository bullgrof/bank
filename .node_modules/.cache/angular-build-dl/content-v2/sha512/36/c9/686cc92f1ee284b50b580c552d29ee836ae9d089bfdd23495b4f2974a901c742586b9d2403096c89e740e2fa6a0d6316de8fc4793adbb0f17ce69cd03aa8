{"version":3,"sources":["src/app/pages/releases/releases.page.html","src/app/pages/releases/releases.module.ts","src/app/pages/releases/releases.page.scss","src/app/pages/releases/releases.page.ts","src/app/services/releases.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qoBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,2CAAA,CAAA,cAAA;AAFb,KADqB,CAAvB;;AAgBA,QAAa,kBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAT9B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CAAC,2CAAA,CAAA,cAAA,CAAD;AAPN,KAAT,CAS8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACzBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,YAAb;AAAA;AAAA;AAGE,4BAAqB,cAArB,EAAqD;AAAA;;AAAhC,aAAA,cAAA,GAAA,cAAA;AAAsC;;AAH7D;AAAA;AAAA,mCAKU;AAAA;;AAEN,eAAK,cAAL,CAAoB,WAApB,GAAkC,SAAlC,CAA4C,UAAA,QAAQ,EAAG;AACrD,YAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAiC,QAAjC;AACA,YAAA,KAAI,CAAC,QAAL,GAAgB,QAAQ,CAAC,OAAzB;AACD,WAHD;AAKD;AAZH;;AAAA;AAAA,OAAA;;;;cAGwC,8DAAA,CAAA,iBAAA;;;;AAH3B,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,yFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKwB,E,uEAGe,8DAAA,CAAA,iBAAA,C,EAHf,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAM,GAAG,GAAG,yDAAA,CAAA,aAAA,CAAA,CAAY,GAAxB;;AAKA,QAAa,eAAb;AAAA;AAAA;AAGE,+BAAqB,IAArB,EAAqC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAAsB;;AAH7C;AAAA;AAAA,sCAMa;AACT,iBAAO,KAAK,IAAL,CAAU,GAAV,WAA+B,GAA/B,mBAAP;AACD;AARH;;AAAA;AAAA,OAAA;;;;cAG6B,iDAAA,CAAA,YAAA;;;;AAHhB,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG2B,E,uEAGC,iDAAA,CAAA,YAAA,C,EAHD,CAAA,EAAf,eAAe,CAAf","sourcesContent":["export default \"<ion-header >\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/contacts\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Comunicados</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card *ngFor=\\\"let release of releases\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>{{release.create_at}}</ion-card-subtitle>\\r\\n      <ion-card-title>{{release.title}}</ion-card-title>\\r\\n    </ion-card-header>  \\r\\n    <ion-card-content>\\r\\n     {{release.release}}\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ReleasesPage } from './releases.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReleasesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ReleasesPage]\r\n})\r\nexport class ReleasesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlbGVhc2VzL3JlbGVhc2VzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ReleasesService } from 'src/app/services/releases.service';\r\n\r\n@Component({\r\n  selector: 'app-releases',\r\n  templateUrl: './releases.page.html',\r\n  styleUrls: ['./releases.page.scss'],\r\n})\r\nexport class ReleasesPage implements OnInit {\r\n  releases : any;\r\n\r\n  constructor( private releaseService : ReleasesService ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.releaseService.getReleases().subscribe(response =>{\r\n      console.log('Respuesta Releases',response);\r\n      this.releases = response.release;\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RespRelease } from '../interfaces/releases';\r\n\r\n\r\n\r\nconst URL = environment.url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReleasesService {\r\n  \r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n\r\n  getReleases(){\r\n    return this.http.get<RespRelease>(`${ URL }/releases/get`);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-releases-releases-module-es5.js"}