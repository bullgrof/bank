{"version":3,"sources":["src/app/pages/add-user/add-user.page.html","src/app/pages/contacts/contacts.page.html","src/app/pages/add-user/add-user.module.ts","src/app/pages/add-user/add-user.page.scss","src/app/pages/add-user/add-user.page.ts","src/app/pages/contacts/contacts.module.ts","src/app/pages/contacts/contacts.page.scss","src/app/pages/contacts/contacts.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>   \\r\\n    <ion-title>Agregar Contacto</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content> \\r\\n\\r\\n  <ion-segment [(ngModel)]='elementType' color=\\\"warning\\\">\\r\\n    <ion-segment-button value=\\\"SekretId\\\" selected>\\r\\n      <ion-label>Mi Sekret Id</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"AddUser\\\">\\r\\n      <ion-label>Agregar Contacto</ion-label>\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n\\r\\n  <ion-card *ngIf=\\\"elementType === 'SekretId'\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle class=\\\"text-cender\\\" > Mi Sekret ID</ion-card-subtitle>\\r\\n      <ngx-qrcode \\r\\n        [qrc-element-type]=\\\"element-type\\\"\\r\\n        [qrc-value] = \\\"sekretid\\\">\\r\\n      </ngx-qrcode>\\r\\n      <ion-card-title class=\\\"text-cender\\\">{{sekretid}}</ion-card-title>\\r\\n    </ion-card-header>\\r\\n  \\r\\n    <ion-card-content>\\r\\n    \\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n \\r\\n\\r\\n<ion-card *ngIf=\\\"elementType === 'AddUser'\\\" class=\\\"text-center\\\">  \\r\\n  <ion-card-content>\\r\\n    <ion-button expand=\\\"block\\\" (click)=\\\"scanSekretId()\\\" color=\\\"success\\\">\\r\\n      <ion-icon name=\\\"qr-scanner\\\"></ion-icon>\\r\\n      Escanear C&oacute;digo\\r\\n    </ion-button>\\r\\n    <ion-item>\\r\\n      <label for=\\\"\\\">Codigo Escanneado: {{scannedCode}}</label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-input placeholder=\\\"SekretId\\\" [(ngModel)]=\\\"contact.sidcontact\\\"></ion-input>\\r\\n      \\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-input placeholder=\\\"Alias\\\" [(ngModel)]=\\\"contact.alias\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-textarea placeholder=\\\"Dile a tu contacto quien eres\\\" [(ngModel)]=\\\"contact.message\\\"></ion-textarea>\\r\\n    </ion-item>\\r\\n    <ion-button expand=\\\"full\\\"\\r\\n                color=\\\"warning\\\"\\r\\n                (click)=\\\"addContact()\\\"\\r\\n                [disabled]=\\\"contact.sidcontact.length < 1\\\">\\r\\n      Agregar contacto\\r\\n    </ion-button>    \\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-button expand=\\\"full\\\" fill=\\\"clear\\\" color=\\\"light\\\" (click)=\\\"closeModal()\\\">\\r\\n      Cerrar\\r\\n    </ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\"","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-title>Contactos ({{ numberContacts }})</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" color=\\\"warning\\\">\\r\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-buttons>\\r\\n    <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"primary\\\">\\r\\n        <ion-button (click)=\\\"openModal()\\\">\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"person-add\\\" color=\\\"warning\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-buttons>\\r\\n      <ion-toolbar >\\r\\n        <ion-searchbar (ionChange)=\\\"filter($event)\\\" \\r\\n                        animated \\r\\n                        placeholder=\\\"Buscar contacto\\\"></ion-searchbar>\\r\\n      </ion-toolbar>\\r\\n    </ion-toolbar>\\r\\n  </ion-buttons>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-list>\\r\\n    <ion-item-sliding *ngFor=\\\"let contact of contacts\\\" >\\r\\n      <ion-item class=\\\"itemheight\\\" [routerLink]=\\\"['/chat', contact.sidcontact]\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"../../../assets/avatars/defaultavatar.png\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-label class=\\\"sc-ion-label-ios-h sc-ion-label-ios-s ios hydrated\\\">\\r\\n          <h3>{{ contact.alias }}</h3>\\r\\n          <p>Ultimo mensaje</p>\\r\\n          <h4 slot=\\\"end\\\">date</h4>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"primary\\\" (click)=\\\"copySid(contact.sidcontact)\\\">\\r\\n         <P>{{ contact.sidcontact }}</P>           \\r\\n        </ion-item-option>\\r\\n        <ion-item-option [routerLink]=\\\"['/edit-contact', contact.siduser, contact.sidcontact]\\\" color=\\\"warning\\\">\\r\\n         <p  class=\\\"textorange\\\">pro</p>   <ion-icon name=\\\"person\\\" class=\\\"iconwhite\\\"></ion-icon><p  class=\\\"textorange\\\">file</p>\\r\\n        </ion-item-option>\\r\\n        <ion-item-option (click)=\\\"deleteContact( contact.siduser, contact.sidcontact)\\\" class=\\\"colorDelete\\\" >\\r\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddUserPage } from './add-user.page';\r\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\r\n \r\n@NgModule({\r\n\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NgxQRCodeModule\r\n  ],\r\n  declarations: [AddUserPage,AddUserPage],\r\n  exports: []\r\n})\r\nexport class AddUserPageModule {}\r\n","export default \".text-cender {\\n  text-align: center;\\n  font-size: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWRkLXVzZXIvQzpcXFVzZXJzXFxOZW1lc3Npc1xcRGVza3RvcFxccHYyXFxmcm9udFxcY29yZVxcZnN1L3NyY1xcYXBwXFxwYWdlc1xcYWRkLXVzZXJcXGFkZC11c2VyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtFQUNsQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hZGQtdXNlci9hZGQtdXNlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGV4dC1jZW5kZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NavParams, ModalController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\r\nimport { Base64ToGallery } from '@ionic-native/base64-to-gallery/ngx';\r\nimport { ContactsService } from 'src/app/services/contacts.service';\r\nimport { ContactsPageModule } from '../contacts/contacts.module';\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.page.html',\r\n  styleUrls: ['./add-user.page.scss'],\r\n})\r\nexport class AddUserPage implements OnInit {\r\n  passedId = null;\r\n  @Input() sekretid;\r\n\r\n  scannedCode = null;\r\n  elementType: 'SekretId' | 'AddUser';\r\n\r\n  contact = {\r\n    siduser: '',\r\n    sidcontact: '',\r\n    alias: '',\r\n    message: ''\r\n  }\r\n\r\n\r\n  constructor( private modalController: ModalController,\r\n               private barcodeScanner: BarcodeScanner,\r\n               private base64ToGallery: Base64ToGallery,\r\n               private ContactService: ContactsService) { }\r\n \r\n  ngOnInit() {\r\n    //this.passedId = this.navParams.get('custom_id');\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  scanSekretId(){\r\n    this.barcodeScanner.scan().then(\r\n      barcodeData =>{\r\n        this.scannedCode = barcodeData\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadQR(){\r\n    const AddUser = document.querySelector('AddUser') as HTMLCanvasElement;\r\n    const imageData = AddUser.toDataURL('image/jpeg').toString();\r\n    console.log('data: ',imageData);\r\n  }\r\n\r\n  addContact(){\r\n    this.contact.siduser = this.sekretid;\r\n    this.ContactService.AddContact(this.contact);\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ContactsPage } from './contacts.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { AddUserPage } from '../add-user/add-user.page';\r\nimport { AddUserPageModule } from '../add-user/add-user.module';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  entryComponents: [AddUserPage],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule,\r\n    AddUserPageModule\r\n  ],\r\n  \r\n  declarations: [ContactsPage]\r\n})\r\nexport class ContactsPageModule {\r\n\r\n  unread(item){\r\n    \r\n  }\r\n}\r\n","export default \".exitapp {\\n  background-color: red;\\n  border-radius: 0.1;\\n  border-color: white; }\\n\\n.textorange {\\n  color: #fe5302; }\\n\\n.iconwhite {\\n  color: white; }\\n\\n.colorDelete {\\n  background-color: #006dad;\\n  width: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY29udGFjdHMvQzpcXFVzZXJzXFxOZW1lc3Npc1xcRGVza3RvcFxccHYyXFxmcm9udFxcY29yZVxcZnN1L3NyY1xcYXBwXFxwYWdlc1xcY29udGFjdHNcXGNvbnRhY3RzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFxQjtFQUNyQixrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksY0FBYyxFQUFBOztBQUlsQjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSx5QkFBeUI7RUFDekIsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY29udGFjdHMvY29udGFjdHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4aXRhcHB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjE7XHJcbiAgICBib3JkZXItY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4udGV4dG9yYW5nZXtcclxuICAgIGNvbG9yOiAjZmU1MzAyO1xyXG59XHJcblxyXG5cclxuLmljb253aGl0ZXtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmNvbG9yRGVsZXRle1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNmRhZDtcclxuICAgIHdpZHRoOiA2MHB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ContactsService } from 'src/app/services/contacts.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { contactsCard } from '../../interfaces/contactsInterfaces';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { filter } from 'minimatch';\r\nimport { ClassGetter } from '@angular/compiler/src/output/output_ast';\r\nimport { ModalController, NavController, Platform } from '@ionic/angular';\r\nimport { AddUserPage } from '../../pages/add-user/add-user.page';\r\nimport { ComponentMenu, User } from 'src/app/interfaces/userinterface';\r\nimport {  MenuController } from '@ionic/angular';\r\nimport { Clipboard } from '@ionic-native/clipboard/ngx';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.page.html',\r\n  styleUrls: ['./contacts.page.scss'],\r\n})\r\nexport class ContactsPage implements OnInit {\r\n  \r\n  args = null;\r\n  usernameStorage = '';\r\n  sekretidrec= '';\r\n  sekretid;\r\n  contacts: contactsCard[] = [];\r\n  numberContacts : number;\r\n  value : contactsCard[] = [];\r\n  idcontacts = '';\r\n  data: [] = [];\r\n  responseContacts : contactsCard[] = [];\r\n  usernameContact = '';\r\n  user: any[] = [];\r\n  sid = '';\r\n  //components\r\n  components: ComponentMenu[] = [];\r\n  contactName;\r\n  jsonData:any=[];\r\n  receivername: string;\r\n  deleteContacts = {\r\n    siduser : '',\r\n    sidcontact :'' \r\n  };\r\n\r\n  constructor(private contactsService: ContactsService,\r\n              private activeRoute: ActivatedRoute,\r\n              private storage: Storage,\r\n              private userService: UsersService,\r\n              private router: Router,\r\n              private modalController: ModalController,\r\n              private nav: NavController,\r\n              public menuCtrl: MenuController,\r\n              private clipboard: Clipboard,\r\n              private toastCtrl: ToastController,\r\n              public alertController: AlertController,\r\n              private platform: Platform ) {                \r\n\r\n\r\n     \r\n\r\n  } // END CONSTRUCTOR\r\n\r\n  ngOnInit() {  \r\n\r\n    this.inspectStatus();\r\n\r\n    this.args = this.storage.get('username').then((result)=>{\r\n      this.usernameStorage = result;\r\n      \r\n      this.userService.getSekretId(this.usernameStorage).subscribe( response=>{  \r\n          \r\n          this.sekretidrec = response.user[0].sekretid;        \r\n          this.sid = response.user[0].sekretid;\r\n          this.contactsService.getContacts(this.sekretidrec).subscribe(responseContacts=>{\r\n          console.log('Contactos', responseContacts);\r\n          \r\n          this.contacts.push(...responseContacts.contacts); //exprect operator\r\n          //this.contactName = responseContacts.contacts.sekretid;        //PENDIENTE POR REVISAR  \r\n          this.numberContacts = responseContacts.conteo;\r\n         });\r\n      });\r\n    })\r\n   \r\n  } // end ngOnInit\r\n\r\n\r\n  inspectStatus(){\r\n    this.platform.ready().then(() => {    \r\n      this.platform.pause.subscribe(() => {\r\n        console.log(\"kicking user\");    \r\n      //  this.router.navigate(['/home']);\r\n      });\r\n      this.platform.resume.subscribe(() => {\r\n          console.log('[INFO] App resumed');\r\n      });      \r\n  });\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.menuCtrl.enable(true);\r\n  }\r\n\r\n  filter(ev:any){    \r\n      const val = ev.target.value;\r\n      console.log('el valor es',val);  \r\n\r\n  }\r\n  \r\n  async openModal() {\r\n    const modal = await this.modalController.create({\r\n      component: AddUserPage,\r\n      componentProps: {\r\n        sekretid : this.sekretidrec\r\n      }\r\n    });\r\n    await modal.present();\r\n  }\r\n\r\n  doRefresh(event) {\r\n    setTimeout(() => {\r\n      this.contactsService.getContacts(this.sekretidrec).subscribe(responseContacts=>{\r\n        this.contacts = responseContacts.contacts;\r\n      })\r\n      event.target.complete();\r\n    }, 1000);\r\n  }\r\n\r\n\r\n  copySid(contact){   \r\n    this.clipboard.copy(contact);\r\n    this.presentToast('Se ha copiado el SekretId' );\r\n  }\r\n\r\n  deleteContact(sidUser, sidContact){    \r\n    this.presentAlertConfirm(sidUser, sidContact);\r\n  }\r\n\r\n  confirmDeleteContact(sidUser, sidContact){\r\n    console.log('user agree delete user');\r\n    console.log('User', sidUser);\r\n    console.log('Contact', sidContact);\r\n    this.deleteContacts = {\r\n      siduser : sidUser,\r\n      sidcontact :sidContact \r\n    };\r\n\r\n    this.contactsService.deleteContacts(this.deleteContacts).subscribe(response => {\r\n      console.log(response);\r\n    });\r\n    this.presentToast('El contacto se ha eliminado');\r\n  }\r\n\r\n  editUsername(){\r\n    this.router.navigate(['/edit-contact', ])\r\n  }\r\n\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 2000,\r\n      position: 'top'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async presentAlertConfirm(sidUser, sidContact) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Atención!',\r\n      message: 'Esta <strong>Seguro </strong>que desea eliminar el contacto?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: (blah) => {\r\n            console.log('Confirm Cancel: blah');\r\n          }\r\n        }, {\r\n          text: 'Si',\r\n          handler: () => {\r\n            console.log('Confirm Okay');\r\n            this.confirmDeleteContact(sidUser, sidContact)\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n \r\n \r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-contacts-contacts-module-es5.js"}