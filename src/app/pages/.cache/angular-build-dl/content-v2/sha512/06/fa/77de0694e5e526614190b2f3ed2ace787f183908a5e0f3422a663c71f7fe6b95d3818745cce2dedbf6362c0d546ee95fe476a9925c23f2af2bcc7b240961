(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-chat-new-chat-new-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/chat-new/chat-new.page.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/chat-new/chat-new.page.html ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header class=\"headera\">\n  <ion-toolbar color=\"warning\">\n    <ion-buttons slot=\"start\" class=\"backarrow\">\n      <ion-button (click)=\"goToContacts()\">\n        <ion-icon src=\"assets/icons/arrow-back.svg\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n\n    <ion-buttons class=\"\">\n      <ion-avatar slot=\"\" color=\"warning\">\n        <img src=\"../../../assets/avatars/{{avatarUser}}\" class=\"avatar\">\n      </ion-avatar>\n      <label class=\"username\">{{usernameContact}} ({{nameContact}}) | {{message}}</label>\n    </ion-buttons>\n\n    <ion-buttons slot=\"primary\" class=\"powerbutton\">\n      <ion-button (click)=\"logout()\">\n        <ion-icon slot=\"end\" src=\"/assets/icons/power.svg\" class=\"icon-logout\"></ion-icon>\n      </ion-button>\n\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content #content class=\"ion-padding2 contentt\" [scrollEvents]=\"true\" fullscreen  id=\"myContent\" overflow-scroll=\"true\">\n  <ion-fab horizontal=\"end\" vertical=\"top\" slot=\"fixed\" color=\"warning\">\n    <ion-fab-button class=\"ios ion-activatable ion-focusable hydrated\" color=\"warning\">\n      <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n\n    <ion-fab-list side=\"\">\n      <ion-fab-button color=\"warning\" data-desc=\"Camara\" (click)=\"captureImage()\"\n        *ngIf=\"planActive  === 'Plan Plus' || planActive === 'Plan Promocional'\">\n        <ion-icon name=\"camera\" role=\"img\" class=\"ios hydrated\" aria-label=\"logo facebook\"></ion-icon>\n      </ion-fab-button>\n\n      <ion-fab-button color=\"warning\" data-desc=\"Galería\" (click)=\"imageGallery()\"\n        *ngIf=\"planActive  === 'Plan Plus' || planActive === 'Plan Promocional'\">\n        <ion-icon name=\"image\" role=\"img\" class=\"ios hydrated\" aria-label=\"logo twitter\"></ion-icon>\n      </ion-fab-button>\n\n      <ion-fab-button color=\"warning\" data-desc=\"Enviar al Baúl\" (click)=\"sendTrunk()\"\n        *ngIf=\"planActive  === 'Plan Plus' || planActive === 'Plan Promocional'\">\n        <ion-icon src=\"/assets/icons/lock-closed.svg\" class=\"\"></ion-icon>\n      </ion-fab-button>\n\n      <ion-fab-button color=\"warning\" data-desc=\"Eliminar mensajes\" (click)=\"deleteMeessages()\">\n        <ion-icon name=\"trash\" role=\"img\" class=\"ios hydrated\" ></ion-icon>\n      </ion-fab-button>\n\n      <ion-fab-button color=\"warning\" data-desc=\"Mensaje de voz\" (click)=\"showRecorder()\"\n        *ngIf=\"planActive  === 'Plan Plus' || planActive === 'Plan Promocional'\">\n        <ion-icon src=\"/assets/icons/mic-circle.svg\" role=\"img\" class=\"ios hydrated\" class=\"iconfav\"></ion-icon>\n      </ion-fab-button>\n\n    </ion-fab-list>\n  </ion-fab>\n\n  <div class=\"messages-container\">\n    <!--space to menu lateral rigth-->\n\n\n\n    <div class=\"\" fullscreen=\"true\">\n      <ion-grid>\n\n        <ion-infinite-scroll position=\"top\" threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n          <ion-infinite-scroll-content loadingSpinner=\"bubbles\" loadingText=\"Cargando mensajes...\">\n          </ion-infinite-scroll-content>\n        </ion-infinite-scroll>\n        <div class=\"messages-container\">\n          <ion-row radio-group *ngFor=\"let message of messages; let i = index\">\n\n\n            <ion-col size=\"9\">\n              <div\n                *ngIf=\"message.senderId !== currentUser && message.type === '1' && currentUser !== message.deleteAlpha\">\n\n                <div class=\"bubble me\" *ngIf=\"currentUser !== message.deletebetha\">\n                  <div class=\"user\">\n\n                    <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                      value=\"message._id\">\n                    </ion-radio>\n                    <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                    <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                      *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                    {{ nameContact }} <br>\n                  </div>\n                  <div class=\"msg\">\n                    {{ decrypt(message.body)}}\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n\n            <ion-col offset=\"3\" size=\"9\"\n              *ngIf=\"message.senderId === currentUser && message.type === '1' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubble you\">\n                  <div class=\"user\">\n                    <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                      value=\"message._id\">\n                    </ion-radio>\n                    <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                    <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                      *ngIf=\"arrowControl === 'off'\">\n                    </ion-icon>\n                    {{ myUsername }}<br>\n                  </div>\n                  <div class=\"msg2\">\n                    {{ decrypt(message.body)}}\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Encoded {{message.createAt | date:'short'}}</div>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\">\n                    </ion-icon>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-done-outline.svg\"\n                      *ngIf=\"message.isread === '1'\">\n                    </ion-icon>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <!--Ressend-->\n            <ion-col offset=\"3\" size=\"9\"\n              *ngIf=\"message.senderId === currentUser && message.type === '11' && currentUser !== message.deleteAlpha \">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubbleorange you\">\n                  <div class=\"user\">\n                    <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                      value=\"message._id\"></ion-radio>\n                    <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                    <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                      *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                    {{ myUsername }}<br>\n                  </div>\n                  <div class=\"msg2\">\n                    {{ decrypt(message.body)}}\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\">\n                    </ion-icon>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-done-outline.svg\"\n                      *ngIf=\"message.isread === '1'\">\n                    </ion-icon>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col size=\"9\"\n              *ngIf=\"message.senderId !== currentUser && message.type === '11' && currentUser !== message.deleteAlpha \">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubbleorange me\">\n                  <div class=\"user\">\n                    <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                      value=\"message._id\"></ion-radio>\n                    <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                    <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                      *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                    {{ nameContact }} <br>\n                  </div>\n                  <div class=\"msg\">\n                    {{ decrypt(message.body)}}\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <!--Resend Images-->\n            <ion-col size=\"10\" offset=\"2\"\n              *ngIf=\"message.senderId === currentUser && message.type === '22' && currentUser !== message.deleteAlpha \">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubbleorange you\">\n                  <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                    value=\"message._id\">\n                  </ion-radio>\n                  <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                  <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                    *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                  {{ myUsername }} <br>\n                  <div class=\"msg2\">\n                    <img [src]=\"message.body | image\" (click)=\"openGallery(message.body)\">\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Encoded {{message.createAt | date:'short'}}</div>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\">\n                    </ion-icon>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-done-outline.svg\"\n                      *ngIf=\"message.isread === '1'\">\n                    </ion-icon>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col size=\"10\"\n              *ngIf=\"message.senderId !== currentUser && message.type === '22' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubbleorange me\">\n                  <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                    value=\"message._id\">\n                  </ion-radio>\n                  <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                  <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                    *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                  {{ nameContact }} <br>\n                  <div class=\"msg2\">\n                    <img [src]=\"message.body | image\" (click)=\"openGallery(message.body)\">\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\">\n                    </ion-icon>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-done-outline.svg\"\n                      *ngIf=\"message.isread === '1'\">\n                    </ion-icon>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <!--End Resend Images-->\n\n\n            <!--end Resend-->\n            <ion-col size=\"10\" offset=\"2\"\n              *ngIf=\"message.senderId === currentUser && message.type === '2' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubble you\">\n                  <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                    value=\"message._id\">\n                  </ion-radio>\n                  <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                  <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                    *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                  {{ myUsername }} <br>\n                  <div class=\"msg2\">\n                    <img [src]=\"message.body | image\" (click)=\"openGallery(message.body)\">\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\">\n                    </ion-icon>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-done-outline.svg\"\n                      *ngIf=\"message.isread === '1'\">\n                    </ion-icon>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col size=\"10\"\n              *ngIf=\"message.senderId !== currentUser && message.type === '2' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubble me\">\n                  <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                    value=\"message._id\">\n                  </ion-radio>\n                  <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                  <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                    *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                  {{ nameContact }} <br>\n                  <div class=\"msg2\">\n                    <img [src]=\"message.body | image\" (click)=\"openGallery(message.body)\">\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\">\n                    </ion-icon>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-done-outline.svg\"\n                      *ngIf=\"message.isread === '1'\">\n                    </ion-icon>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col size=\"10\"\n              *ngIf=\"message.senderId !== currentUser && message.type === '3' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubble me\">\n                  {{nameContact}}\n                  <div class=\"pl\">               \n                    <ion-icon  class=\"newIcons\" name=\"play\" (click)=\"start(message.audioFile)\" *ngIf=\"playing === '1'\"></ion-icon>\n                    <ion-icon  class=\"newIcons\" name=\"pause\" (click)=\"sto(message.audioFile)\"  *ngIf=\"playing === '0'\"></ion-icon>     \n                  </div>\n                  <div class=\"datePlayer\">Decoded {{message.createAt | date:'short'}}</div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col size=\"10\" offset=\"2\"\n              *ngIf=\"message.senderId === currentUser && message.type === '3' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubble you\">\n                    {{myUsername}}\n                  <div class=\"pl\">               \n                    <ion-icon  class=\"newIcons\" name=\"play\" (click)=\"start(message.audioFile)\" *ngIf=\"playing === '1'\"></ion-icon>\n                    <ion-icon  class=\"newIcons\" name=\"pause\" (click)=\"sto(message.audioFile)\"  *ngIf=\"playing === '0'\"></ion-icon>     \n                  </div>\n                  <div class=\"datePlayer\">Encoded {{message.createAt | date:'short'}}</div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col offset=\"3\" size=\"9\"\n              *ngIf=\"message.senderId === currentUser && message.type === '44' && currentUser !== message.deleteAlpha \">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubbleorange2 you\">\n                  <div class=\"user3\">\n                    <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                      value=\"message._id\"></ion-radio>\n                    <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                    <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                      *ngIf=\"arrowControl === 'off'\"></ion-icon>\n                    {{ myUsername }} <ion-icon src=\"/assets/icons/lock-closed.svg\" slot=\"end\" class=\"block\"></ion-icon> <br>\n                    \n                  </div>\n                  <div class=\"msg2\">\n                    {{ decrypt(message.body)}}\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\">\n                    </ion-icon>\n                    <ion-icon class=\"check\" src=\"assets/icons/checkmark-done-outline.svg\"\n                      *ngIf=\"message.isread === '1'\">\n                    </ion-icon>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col size=\"9\">\n              <div *ngIf=\"message.senderId !== currentUser && message.type === '44' && currentUser !== message.deleteAlpha \">\n                <div class=\"bubbleorange2 me\" *ngIf=\"currentUser !== message.deletebetha\">\n                  <div class=\"user3\">\n                    <ion-radio slot=\"start\" *ngIf=\"checks === 'on'\" (click)=\"addSelectResend(message)\"\n                      value=\"message._id\">\n                    </ion-radio>\n                    <ion-radio slot=\"start\" *ngIf=\"trunkChecks === 'on'\" (click)=\"addTrunk(message)\"></ion-radio>\n                    <!--ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentSelect()\"\n                      *ngIf=\"arrowControl === 'off'\"></ion-icon-->\n                    {{ nameContact }} <ion-icon src=\"/assets/icons/lock-closed.svg\" slot=\"end\" class=\"block\"></ion-icon> <br>\n                  </div>\n                  <div class=\"msg2\">\n                    {{ decrypt(message.body)}}\n                  </div>\n                  <div class=\"footer-bubble\">\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                  </div>\n                </div>\n              </div>\n            </ion-col>\n\n\n            <!--ion-col size=\"10\"\n              *ngIf=\"message.senderId !== currentUser && message.type === '3' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubble me\">\n                  <div> {{ nameContact }}</div>                  \n                    <div class=\"playermessage\">\n                      <div>\n                        <ion-icon  class=\"iconsplayer\" name=\"play\" (click)=\"start(message.audioFile)\" *ngIf=\"playing === '1'\"></ion-icon>\n                        \n                        <ion-icon  class=\"iconsplayer\" name=\"pause\" (click)=\"sto(message.audioFile)\"  *ngIf=\"playing === '0'\"></ion-icon>                        \n                      </div>\n                      <div>\n                        \n                          <ion-row>\n                            <ion-col size=\"8\" class=\"ion-text-center\"></ion-col>\n                          </ion-row>\n                        \n                      </div>\n                  </div>\n                  <div class=\"encodeplayer text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                </div>\n              </div>\n            </ion-col>\n\n            <ion-col size=\"10\" offset=\"2\"\n              *ngIf=\"message.senderId === currentUser && message.type === '3' && currentUser !== message.deleteAlpha\">\n              <div *ngIf=\"currentUser !== message.deletebetha\">\n                <div class=\"bubble you\">\n                  <div> {{myUsername}} </div>\n                  <div class=\"playermessage\">\n                    <div>\n                        <ion-icon  class=\"iconsplayer\" name=\"play\" (click)=\"start(message.audioFile)\" *ngIf=\"playing === '1'\"></ion-icon>\n                        <ion-icon  class=\"iconsplayer\" name=\"pause\" (click)=\"sto(message.audioFile)\"  *ngIf=\"playing === '0'\"></ion-icon>                        \n                      </div>\n                    </div>\n                  <div class=\"encodeplayer text-right\">Encode {{message.createAt | date:'short'}}</div>\n                </div>\n              </div>\n            </ion-col-->\n\n\n\n            <!--ion-col size=\"9\" *ngIf=\"message.senderId !== currentUser && message.type === '1' \"\n                class=\"message other-message\">\n                <div *ngIf=\"currentUser  !== message.deleteAlpha || currentUser === message.deletebetha\">\n                  <div *ngIf=\"currentUser !== message.deletebetha\">\n                    <div class=\"user\" >\n                      <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentMenuBar(message.body, message.receiverId)\"></ion-icon> \n                      {{ nameContact }} <br>\n                    </div>\n                    <span>{{ decrypt(message.body)}}</span>\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Decoded {{message.createAt | date:'short'}}</div>\n                  </div>\n                </div>\n              </ion-col-->\n\n            <!--ion-col offset=\"3\" size=\"9\" *ngIf=\"message.senderId === currentUser && message.type === '1' && currentUser !== message.deleteAlpha\"\n                class=\"message my-message\">\n                <div *ngIf=\"currentUser  !== message.deleteAlpha || currentUser === message.deletebetha\">\n                  <div *ngIf=\"currentUser !== message.deletebetha\">\n                    <div class=\"user\">\n                      <ion-icon src=\"/assets/icons/redo.svg\" class=\"icon-app\" (click)=\"presentMenuBar(message.body, message.receiverId)\"></ion-icon>\n                      {{ myUsername }}<br>\n                    </div>\n                    <span>{{ decrypt(message.body) }}</span>\n                    <div class=\"mess text-right\">{{ message.createdAt}}</div>\n                    <div class=\"decode text-right\">Encoded {{message.createAt | date:'short' }}</div>\n                    <ion-icon src=\"assets/icons/checkmark-outline.svg\" *ngIf=\"message.isread === '0'\"></ion-icon>\n                    <ion-icon src=\"assets/icons/checkmark-done-outline.svg\" *ngIf=\"message.isread === '1'\"></ion-icon>\n                  </div>\n                </div>\n              </ion-col-->\n\n          </ion-row>\n        </div>\n      </ion-grid>\n    </div>\n  </div>\n  \n  \n</ion-content>\n\n<ion-footer color=\"warning\">\n\n  <ion-card *ngIf=\"hidde1\" >\n    <ion-card-header>\n      <ion-icon name=\"close\" class=\"closeButton\" (click)=\"closeRecord()\"></ion-icon>\n      <ion-card-title> {{status}}</ion-card-title>      \n    </ion-card-header>\n  \n    <ion-card-content>\n      <img src=\"../../../assets/espetro.gif\" class=\"wave\">\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"6\">\n            <div>            \n              <ion-button color=\"medium\" (click)=\"recordAudio()\" class=\"btnPlayer\" disabled=\"{{recordButton}}\">\n                <ion-icon name=\"mic-circle-outline\"  class=\"botonsAudioRecord\" ></ion-icon>\n                Grabar\n              </ion-button>           \n            </div>\n          </ion-col>\n          <ion-col size=\"6\">\n            <div>\n              <ion-button  (click)=\"stopRecording()\" color=\"medium\" class=\"btnPlayer\">\n                <ion-icon name=\"stop-circle-outline\"  class=\"botonsAudioStop\" slot=\"start\"></ion-icon>\n                Detener\n              </ion-button>              \n            </div>\n          </ion-col>\n          <ion-col>\n            <div>\n              <ion-button expand=\"full\" color=\"medium\" (click)=\"sendAudio(file)\" class=\"btnPlayer\" disabled=\"{{sendAudioButton}}\">\n                <ion-icon  src=\"assets/icons/send.svg\" slot=\"icon-only\"></ion-icon>\n              </ion-button>\n            </div>\n          </ion-col>\n        </ion-row>\n      </ion-grid>      \n    </ion-card-content>\n  </ion-card>\n\n\n\n\n  <!--ion-card *ngIf=\"hidde1\">\n    <ion-item class=\"ion-activated\">\n      <ion-label slot=\"start\"> </ion-label>\n        <ion-card-content>\n          \n        </ion-card-content>\n      <ion-label>\n     \n      </ion-label>\n      <ion-icon name=\"mic-circle-outline\" (click)=\"recordAudio()\" class=\"botonsAudioRecord\"></ion-icon>\n      <ion-icon name=\"stop-circle-outline\" (click)=\"stopRecording()\" class=\"botonsAudioStop\"></ion-icon>\n      <ion-button expand=\"block\" fill=\"clear\" color=\"warning\"  class=\"msg-btn\"\n          (click)=\"sendAudio(audioFile)\">\n          <ion-icon name=\"send-outline\" slot=\"icon-only\" class=\"boton-send\"></ion-icon>\n        </ion-button>\n    </ion-item>\n  </ion-card-->\n\n\n  <ion-toolbar color=\"light\" *ngIf=\"checks === 'on'\">\n    <ion-button expand=\"block\" (click)=\"resendMessage()\"\n      class=\"ios button button-block button-solid ion-activatable ion-focusable hydrated\" color=\"warning\">Seleccionar\n      contacto</ion-button>\n    <ion-button expand=\"block\" (click)=\"canelResend()\"\n      class=\"ios button button-block button-solid ion-activatable ion-focusable hydrated\" color=\"danger\">Cancelar\n    </ion-button>\n  </ion-toolbar>\n  <ion-toolbar color=\"light\" *ngIf=\"trunkChecks === 'on'\">\n    <ion-input type=\"text\" [(ngModel)]=\"nameTrunk\" placeholder=\"Asignar nombre\" required=\"true\">\n    </ion-input>\n\n    <ion-button expand=\"block\" (click)=\"sendtoTrunk()\"\n      class=\"ios button button-block button-solid ion-activatable ion-focusable hydrated\" color=\"warning\">Enviar al Baúl\n    </ion-button>\n    <ion-button expand=\"block\" (click)=\"canelResend()\"\n      class=\"ios button button-block button-solid ion-activatable ion-focusable hydrated\" color=\"danger\">Cancelar\n    </ion-button>\n  </ion-toolbar>\n  <ion-toolbar color=\"light\" *ngIf=\"checks === 'off' \">\n    <ion-row class=\"align-items-center\" class=\"ion-no-padding\">\n      <!--ion-col size=\"1\">       \n        <ion-icon name=\"ellipsis-vertical-outline\"\n                  (click)=\"presentFooterMenu()\"\n                  class=\"btnmenufooter\">\n        </ion-icon>\n      \n    </ion-col-->\n    <ion-col size=\"10\">\n      <textarea autosize maxRows=\"4\" [(ngModel)]=\"message\" class=\"message-input\" ></textarea>\n    </ion-col>\n    <ion-col size=\"2\">\n      <ion-button expand=\"block\" fill=\"clear\" color=\"warning\" [disabled]=\"message === '' \" class=\"msg-btn\"\n        (click)=\"sendMessage()\">\n        <ion-icon src=\"assets/icons/send.svg\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-col>\n  </ion-row>\n</ion-toolbar>\n</ion-footer>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/modalrecord/modalrecord.page.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/modalrecord/modalrecord.page.html ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n<ion-content class=\"content\">  \n\n  <ion-card>\n    <ion-card-header>\n      <ion-icon src=\"assets/icons/close.svg\" class=\"closeButton\" (click)=\"exitWithOutArguments()\"></ion-icon>\n      <ion-card-title class=\"ion-text-center\"> {{status}}</ion-card-title>      \n    </ion-card-header>\n  \n    <ion-card-content>      \n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"6\">\n            <div>            \n              <ion-button color=\"medium\" (click)=\"recordAudio()\" class=\"btnPlayer\" disabled=\"{{btcRecord}}\">\n                <ion-icon src=\"assets/icons/mic.svg\"  class=\"botonsAudioRecord\" ></ion-icon>\n                Grabar\n              </ion-button>           \n            </div>\n          </ion-col>\n          <ion-col size=\"6\">\n            <div>\n              <ion-button  (click)=\"stopRecording()\" color=\"medium\" class=\"btnPlayer\" disabled=\"{{btnStopRecord}}\">\n                <ion-icon src=\"assets/icons/stop.svg\"  class=\"botonsAudioStop\" slot=\"start\"></ion-icon>\n                Detener\n              </ion-button>              \n            </div>\n          </ion-col>\n          <ion-col>\n            <div>\n              <ion-button expand=\"full\" color=\"medium\" (click)=\"sendAudio(file)\" class=\"btnPlayer\" disabled=\"{{btnSendAudio}}\">\n                <ion-icon  src=\"assets/icons/send.svg\" slot=\"icon-only\"></ion-icon>\n              </ion-button>\n            </div>\n          </ion-col>\n        </ion-row>\n      </ion-grid>      \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n");

/***/ }),

/***/ "./src/app/pages/chat-new/chat-new.module.ts":
/*!***************************************************!*\
  !*** ./src/app/pages/chat-new/chat-new.module.ts ***!
  \***************************************************/
/*! exports provided: ChatNewPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChatNewPageModule", function() { return ChatNewPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _chat_new_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chat-new.page */ "./src/app/pages/chat-new/chat-new.page.ts");
/* harmony import */ var ngx_autosize__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-autosize */ "./node_modules/ngx-autosize/fesm2015/ngx-autosize.js");
/* harmony import */ var _modal_contacts_modal_contacts_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../modal-contacts/modal-contacts.page */ "./src/app/pages/modal-contacts/modal-contacts.page.ts");
/* harmony import */ var _modal_contacts_modal_contacts_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../modal-contacts/modal-contacts.module */ "./src/app/pages/modal-contacts/modal-contacts.module.ts");
/* harmony import */ var src_app_pipes_pipes_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/pipes/pipes.module */ "./src/app/pipes/pipes.module.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _modalrecord_modalrecord_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../modalrecord/modalrecord.page */ "./src/app/pages/modalrecord/modalrecord.page.ts");
/* harmony import */ var _modalrecord_modalrecord_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../modalrecord/modalrecord.module */ "./src/app/pages/modalrecord/modalrecord.module.ts");














const routes = [
    {
        path: '',
        component: _chat_new_page__WEBPACK_IMPORTED_MODULE_6__["ChatNewPage"]
    }
];
let ChatNewPageModule = class ChatNewPageModule {
};
ChatNewPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        entryComponents: [
            _modal_contacts_modal_contacts_page__WEBPACK_IMPORTED_MODULE_8__["ModalContactsPage"],
            _modalrecord_modalrecord_page__WEBPACK_IMPORTED_MODULE_12__["ModalrecordPage"]
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["IonicModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild(routes),
            ngx_autosize__WEBPACK_IMPORTED_MODULE_7__["AutosizeModule"],
            _modal_contacts_modal_contacts_module__WEBPACK_IMPORTED_MODULE_9__["ModalContactsPageModule"],
            src_app_pipes_pipes_module__WEBPACK_IMPORTED_MODULE_10__["PipesModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_11__["TranslateModule"],
            _modalrecord_modalrecord_module__WEBPACK_IMPORTED_MODULE_13__["ModalrecordPageModule"]
        ],
        declarations: [_chat_new_page__WEBPACK_IMPORTED_MODULE_6__["ChatNewPage"]]
    })
], ChatNewPageModule);



/***/ }),

/***/ "./src/app/pages/chat-new/chat-new.page.scss":
/*!***************************************************!*\
  !*** ./src/app/pages/chat-new/chat-new.page.scss ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("@charset \"UTF-8\";\n.avatar {\n  width: 60%;\n  height: 60%;\n  margin-top: 8%;\n}\n.username {\n  font-size: 13px;\n  margin-top: -5%;\n}\n.backarrow {\n  margin-top: -4%;\n}\n.powerbutton {\n  margin-top: -3%;\n}\n.icon-logout {\n  font-size: 20px;\n  background: #f19936;\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  line-height: 50px;\n  text-align: center;\n  color: #000000;\n}\n.message-input {\n  width: 100%;\n  border: 1px solid var(--ion-color-medium);\n  border-radius: 10px;\n  background: #fff;\n  resize: none;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n.msg-btn {\n  --padding-start: 0.5em;\n  --padding-end: 0.5em;\n}\n/*Messages*/\n.message {\n  border-radius: 10px;\n  margin-bottom: 4px;\n  white-space: pre-wrap;\n}\n.other-message {\n  background: #ffffff;\n  color: #000000;\n  border-color: #c0c0c0;\n  border-width: thin;\n  border-style: solid;\n}\n.my-message {\n  background: #dddbdb;\n  color: #000000;\n  border-color: #c0c0c0;\n  border-width: thin;\n  border-style: solid;\n}\n.user {\n  font-weight: bold;\n  font-size: 18px;\n  color: #3B3B3B;\n}\n.user2 {\n  font-weight: bold;\n  font-size: 18px;\n  color: #ffffff;\n}\n.user2 {\n  font-weight: bold;\n  font-size: 18px;\n  color: #3B3B3B;\n  margin-top: -19px;\n}\n.bubble {\n  background-color: #F2F2F2;\n  border-radius: 5px;\n  box-shadow: 0 0 6px #B2B2B2;\n  display: inline-block;\n  padding: 10px 18px;\n  position: relative;\n  vertical-align: top;\n  width: 100%;\n}\n.bubble::before {\n  background-color: #F2F2F2;\n  content: \" \";\n  display: block;\n  height: 16px;\n  position: absolute;\n  top: 11px;\n  transform: rotate(29deg) skew(-35deg);\n  -moz-transform: rotate(29deg) skew(-35deg);\n  -ms-transform: rotate(29deg) skew(-35deg);\n  -o-transform: rotate(29deg) skew(-35deg);\n  -webkit-transform: rotate(29deg) skew(-35deg);\n  width: 20px;\n}\n.me {\n  float: left;\n  margin: -6px 5px 5px 20px;\n}\n.me::before {\n  box-shadow: -2px 2px 2px 0 rgba(178, 178, 178, 0.4);\n  left: -9px;\n}\n.you {\n  float: right;\n  margin: -6px 20px 5px 45px;\n  background-color: #dddbdb;\n}\n.you::before {\n  box-shadow: 2px -2px 2px 0 #dddbdb;\n  background-color: #dddbdb;\n  right: -9px;\n}\n.footer-bubble {\n  margin-top: 5px;\n  font-size: 11px;\n}\n.msg {\n  font-size: 18px;\n  text-align: left;\n  white-space: pre-wrap !important;\n}\n.msg2 {\n  font-size: 18px;\n  text-align: left;\n  white-space: pre-wrap !important;\n}\n.check {\n  font-size: 16px;\n}\n.ion-padding2 {\n  padding: 5px;\n}\n.contentt {\n  height: auto;\n}\n/*END MESSAGEs*/\nion-input[placeholder] {\n  text-align: center;\n}\nion-fab-button[data-desc] {\n  position: relative;\n}\nion-fab-button[data-desc]::after {\n  position: absolute;\n  content: attr(data-desc);\n  z-index: 1;\n  right: 55px;\n  bottom: 4px;\n  background-color: var(--ion-color-dark);\n  padding: 9px;\n  border-radius: 15px;\n  color: white;\n  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\n}\n.bubbleorange {\n  background-color: #f6a03f;\n  border-radius: 5px;\n  box-shadow: 0 0 6px #000000;\n  display: inline-block;\n  padding: 10px 18px;\n  position: relative;\n  vertical-align: top;\n  width: 100%;\n}\n.bubbleorange {\n  background-color: #f6a03f;\n  border-radius: 5px;\n  box-shadow: 0 0 6px #000000;\n  display: inline-block;\n  padding: 10px 18px;\n  position: relative;\n  vertical-align: top;\n  width: 100%;\n  color: #ffffff;\n}\n.bubbleorange::before {\n  background-color: #f6a03f;\n  content: \" \";\n  display: block;\n  height: 16px;\n  position: absolute;\n  top: 11px;\n  transform: rotate(29deg) skew(-35deg);\n  -moz-transform: rotate(29deg) skew(-35deg);\n  -ms-transform: rotate(29deg) skew(-35deg);\n  -o-transform: rotate(29deg) skew(-35deg);\n  -webkit-transform: rotate(29deg) skew(-35deg);\n  width: 20px;\n}\n.messages-container {\n  position: relative;\n  overflow: hidden;\n  margin: 0 auto;\n}\nion-header ion-toolbar {\n  height: 50px;\n}\n.btnmenufooter {\n  color: #f6a03f;\n  font-size: 28px;\n  margin-top: 7px;\n}\n.messages-container {\n  position: relative;\n  overflow: hidden;\n  margin: 0 auto;\n}\n.botonsAudioRecord {\n  font-size: 36px;\n  color: red;\n}\n.botonsAudioStop {\n  font-size: 36px;\n  color: #0012E8;\n}\nion-card {\n  background: #000000;\n  color: #3B3B3B;\n}\n.wave {\n  height: 120px;\n}\n.btnPlayer {\n  width: 100%;\n  font-size: 12px;\n}\n.closeButton {\n  font-size: 36px;\n}\nion-card-title {\n  text-align: center;\n  color: #dddbdb;\n}\n.playermessage {\n  border-radius: 4px;\n  color: #dddbdb;\n  align-items: center;\n  text-align: center;\n  font-size: 35px;\n}\n.iconsplayer {\n  margin-top: 15px;\n  margin-bottom: 10px;\n  color: #000;\n}\n.imh {\n  background: url('espetro.gif');\n  height: 90px;\n}\n.imh {\n  height: 90px;\n}\n.encodeplayer {\n  font-size: 11px;\n}\n.iconfav {\n  color: #fff;\n  font-size: 24px;\n}\n.wavea {\n  background: url('wave.png');\n  z-index: 3;\n}\n.newIcons {\n  color: #000;\n  font-size: 35px;\n  text-align: center;\n  align-items: center;\n}\n.pl {\n  text-align: center;\n  align-items: center;\n}\n.datePlayer {\n  font-size: 10px;\n}\n.bubbleorange2 {\n  background-color: #000000;\n  border-radius: 5px;\n  box-shadow: 0 0 6px #000000;\n  display: inline-block;\n  padding: 10px 18px;\n  position: relative;\n  vertical-align: top;\n  width: 100%;\n  color: #ffffff;\n}\n.bubbleorange2::before {\n  background-color: #000000;\n  content: \" \";\n  display: block;\n  height: 16px;\n  position: absolute;\n  top: 11px;\n  transform: rotate(29deg) skew(-35deg);\n  -moz-transform: rotate(29deg) skew(-35deg);\n  -ms-transform: rotate(29deg) skew(-35deg);\n  -o-transform: rotate(29deg) skew(-35deg);\n  -webkit-transform: rotate(29deg) skew(-35deg);\n  width: 20px;\n}\n.block {\n  color: #ffffff;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/pages/chat-new/chat-new.page.ts":
/*!*************************************************!*\
  !*** ./src/app/pages/chat-new/chat-new.page.ts ***!
  \*************************************************/
/*! exports provided: ChatNewPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChatNewPage", function() { return ChatNewPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ionic_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/storage */ "./node_modules/@ionic/storage/fesm2015/ionic-storage.js");
/* harmony import */ var src_app_services_users_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/users.service */ "./src/app/services/users.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_contacts_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/contacts.service */ "./src/app/services/contacts.service.ts");
/* harmony import */ var src_app_services_chat_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/chat.service */ "./src/app/services/chat.service.ts");
/* harmony import */ var crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! crypto-js/enc-utf8 */ "./node_modules/crypto-js/enc-utf8.js");
/* harmony import */ var crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var crypto_js_aes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! crypto-js/aes */ "./node_modules/crypto-js/aes.js");
/* harmony import */ var crypto_js_aes__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(crypto_js_aes__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _ionic_native_aes_256_ngx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ionic-native/aes-256/ngx */ "./node_modules/@ionic-native/aes-256/ngx/index.js");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var src_app_services_push_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/services/push.service */ "./src/app/services/push.service.ts");
/* harmony import */ var ngx_socket_io__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-socket-io */ "./node_modules/ngx-socket-io/fesm2015/ngx-socket-io.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _modal_contacts_modal_contacts_page__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../modal-contacts/modal-contacts.page */ "./src/app/pages/modal-contacts/modal-contacts.page.ts");
/* harmony import */ var _ionic_native_camera_ngx__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ionic-native/camera/ngx */ "./node_modules/@ionic-native/camera/ngx/index.js");
/* harmony import */ var _ionic_native_File_ngx__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ionic-native/File/ngx */ "./node_modules/@ionic-native/File/ngx/index.js");
/* harmony import */ var _image_modal_image_modal_page__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../image-modal/image-modal.page */ "./src/app/pages/image-modal/image-modal.page.ts");
/* harmony import */ var _ionic_native_ionic_webview_ngx__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ionic-native/ionic-webview/ngx */ "./node_modules/@ionic-native/ionic-webview/ngx/index.js");
/* harmony import */ var src_app_services_trunk_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/services/trunk.service */ "./src/app/services/trunk.service.ts");
/* harmony import */ var src_app_services_data_service_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/app/services/data-service.service */ "./src/app/services/data-service.service.ts");
/* harmony import */ var src_app_services_events_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/app/services/events.service */ "./src/app/services/events.service.ts");
/* harmony import */ var _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @ionic-native/android-permissions/ngx */ "./node_modules/@ionic-native/android-permissions/ngx/index.js");
/* harmony import */ var src_app_services_closeapp_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! src/app/services/closeapp.service */ "./src/app/services/closeapp.service.ts");
/* harmony import */ var howler__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! howler */ "./node_modules/howler/dist/howler.js");
/* harmony import */ var howler__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(howler__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var _ionic_native_media_ngx__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @ionic-native/media/ngx */ "./node_modules/@ionic-native/media/ngx/index.js");
/* harmony import */ var _ionic_native_media_capture_ngx__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ionic-native/media-capture/ngx */ "./node_modules/@ionic-native/media-capture/ngx/index.js");
/* harmony import */ var _modalrecord_modalrecord_page__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../modalrecord/modalrecord.page */ "./src/app/pages/modalrecord/modalrecord.page.ts");





















//import {VideoProvider} from '../../providers/video';






const STORAGE_KEY = 'my_images';


const MEDIA_FOLDER_NAME = 'my_media';
const MEDIA_FILES_KEY = 'mediaFiles';
let ChatNewPage = class ChatNewPage {
    /* END AUDIO VARS */
    constructor(storage, userService, activatedRoute, contactsService, router, chatService, aes256, pushService, socket, actionSheetController, modalCtrl, toastCtrl, cameranew, file, webview, navCtrl, trunkService, 
    //public videoProvider: VideoProvider,
    dataService, events, androidPermissions, closeApp, media, platform, mediaCapture) {
        this.storage = storage;
        this.userService = userService;
        this.activatedRoute = activatedRoute;
        this.contactsService = contactsService;
        this.router = router;
        this.chatService = chatService;
        this.aes256 = aes256;
        this.pushService = pushService;
        this.socket = socket;
        this.actionSheetController = actionSheetController;
        this.modalCtrl = modalCtrl;
        this.toastCtrl = toastCtrl;
        this.cameranew = cameranew;
        this.file = file;
        this.webview = webview;
        this.navCtrl = navCtrl;
        this.trunkService = trunkService;
        this.dataService = dataService;
        this.events = events;
        this.androidPermissions = androidPermissions;
        this.closeApp = closeApp;
        this.media = media;
        this.platform = platform;
        this.mediaCapture = mediaCapture;
        //vars not
        this.notificate = {
            apid: '',
            notid: ''
        };
        //varsMessages
        this.page = 0;
        this.allMessages = {
            sender: '',
            receiver: '',
        };
        this.part = {
            senderId: '',
            receiverId: ''
        };
        this.sconect = {
            senderId: '',
            receiverId: ''
        };
        this.messages = [];
        this.message = '';
        this.cipherMessage = '';
        this.cipher = '';
        this.key1 = '123456789abcdefghijklmnopqrstuuvwxyz';
        this.decodedMessage = '';
        this.skey = src_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].sekretKey;
        this.messageBody = {
            message: '',
            receiverid: '',
            senderid: '',
            type: '',
            image: '',
            secureKey: '',
            secureIv: '',
            createAt: Date.now(),
        };
        this.toSocket = {
            convId: '',
            msg: '',
            type: '',
            senderId: '',
            receiverId: '',
            audioFile: ''
        };
        this.m = [];
        this.toResend = [];
        this.toResendContacts = [];
        this.checks = 'off';
        this.trunkChecks = 'off';
        this.arrowControl = 'off';
        this.messageTrunk = {
            owner: '',
            senderId: '',
            receiverId: '',
            create: '',
            receiverName: '',
            messages: []
        };
        this.nameTrunk = '';
        this.dataResFiles = [];
        this.images = [];
        this.stateCamera = 0;
        /* AUDIO */
        this.hidde1 = false;
        this.hiddeAll = false;
        this.isrecord = false;
        this.status = "Pulse para grabar";
        this.pathaudio = {};
        this.participants = {
            senderId: '',
            receiverId: ''
        };
        this.skem = {
            convId: '',
            msg: '',
            type: '',
            senderId: '',
            receiverId: '',
            audioFile: ''
        };
        this.position = 0;
        this.base = src_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].url;
        this.waves = 'off';
        this.recordButton = false;
        this.sendAudioButton = true;
        this.files = [];
        this.mediaFiles = [];
        this.audioPath = '';
        this.playing = '1';
        this.d2Duration = -5;
        this.durationCnt2 = 0;
        this.player = null;
        this.isPlaying = false;
        this.progress = 0;
        this.closeApp.comproveStateApp();
        this.platform.pause.subscribe(() => tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            if (this.playing === '0') {
                this.player.stop();
            }
        }));
    }
    ngOnInit() {
        this.socket.connect();
        this.comproveState(this.stateCamera);
        this.closeApp.comproveStateApp();
        this.platform.ready().then(() => {
            let path = this.file.dataDirectory;
            this.file.checkDir(path, MEDIA_FOLDER_NAME).then(() => {
                this.loadFiles();
            }, err => {
                this.file.createDir(path, MEDIA_FOLDER_NAME, false);
            });
        });
        /* PRe ION WILL ENTER */
        this.canelResend();
        this.sidContact = this.activatedRoute.snapshot.paramMap.get('hash');
        this.socket.fromEvent('user-connected').subscribe(resls => {
        });
        /*  this.socket.fromEvent('joined').subscribe(resls => {
            console.log('+0+0+00+0+0+0+0+0+', resls);
          })
         */
        this.storage.get('username').then((result) => {
            this.userService.getSekretId(result).subscribe(responseUser => {
                this.mySid = responseUser.user[0].sekretid;
                this.myId = responseUser.user[0]._id;
                this.currentUser = this.myId;
                this.myUsername = responseUser.user[0].username;
                this.planActive = responseUser.user[0].plan;
                // For more vars  
                //Get Vars Contact User
                this.userService.getUserNameBySekretId(this.sidContact).subscribe(responseContact => {
                    //console.log('99999999999999999', responseContact.user );
                    this.arrayContact = responseContact.user[0];
                    this.idContact = this.arrayContact._id;
                    this.usernameContact = this.arrayContact.username;
                    this.notiIdContact = this.arrayContact.notificationId;
                    this.appid = this.arrayContact.appidn;
                    // console.log('AAAAAHHHHHAAA', this.appid);
                    this.avatarUser = this.arrayContact.avatar;
                    console.log('=== AVATAR ===', this.avatarUser);
                    //  console.log('HHHHHHHHHHH',this.usernameContact)
                    this.userService.getSekretId(this.usernameContact).subscribe(rsCon2 => {
                        //console.log('1000000010000',rsCon2);
                    });
                    this.notificate = {
                        apid: this.appid,
                        notid: this.notiIdContact
                    };
                    // for more vars
                    this.generateSecureKeyAndIV();
                    this.sconect = {
                        senderId: this.myId,
                        receiverId: this.idContact
                    };
                    this.chatService.getCoversationid(this.sconect).subscribe(resConvId => {
                        console.log('===== ID DE LA CONVERSACION =====', resConvId.idConver);
                        this.toSocket = {
                            convId: resConvId.idConver,
                            msg: '',
                            type: '',
                            senderId: this.myId,
                            receiverId: this.idContact,
                            audioFile: ''
                        };
                        this.socket.emit('send-message', { msg: this.toSocket });
                    });
                    this.getRename();
                    this.loadData();
                    this.establishConnection();
                    this.scrollToBottomInChat();
                    this.updateChecks();
                    this.updateBadgeRead();
                    // this.socket.fromEvent('messageP').subscribe()
                }); //end userService Contact  
            }); //end userService My Current user      
        });
        /* END ION WILL ENTER */
    } //end on init
    // AUDIO START
    establishConnection() {
        console.log('establecer conexion');
    }
    sto() {
        this.playing = '1';
        this.player.stop();
    }
    start(track) {
        this.playing = '0';
        if (this.player) {
            this.player.stop();
        }
        let pathVoice = this.base + '/image/infrahell/' + track;
        this.player = new howler__WEBPACK_IMPORTED_MODULE_24__["Howl"]({
            src: [pathVoice],
            onplay: () => {
                this.isPlaying = true;
                this.activeTrack = track;
            },
            onend: () => {
                console.log('OnEnd');
                this.playing = '1';
            }
        });
        this.player.play();
    }
    togglePlayer(pause) {
        this.isPlaying = !pause;
        if (pause) {
            this.player.pause();
        }
        else {
            this.player.play();
        }
    }
    next() {
    }
    prev() {
    }
    seek() {
    }
    updateProgress() {
    }
    activeTape() {
        this.hidde1 = !this.hidde1;
        this.checkActiveButton();
    }
    checkActiveButton() {
        if (this.hidde1) {
            this.hiddeAll = true;
        }
        else if (!this.hidde1) {
            this.hiddeAll = false;
        }
    }
    stopRecording() {
        this.recordButton = false;
        this.sendAudioButton = false;
        this.isrecord = false;
        this.audioFile.stopRecord();
        this.status = "Detenido";
    }
    showRecorder() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            if (this.playing === '0') {
                this.player.stop();
                const modal = yield this.modalCtrl.create({
                    component: _modalrecord_modalrecord_page__WEBPACK_IMPORTED_MODULE_27__["ModalrecordPage"],
                    cssClass: 'modalRecord',
                    componentProps: {
                        idContact: this.idContact,
                        myId: this.myId,
                        notificate: this.notificate,
                        mySid: this.mySid,
                        sidContact: this.sidContact
                    }
                });
                modal.onDidDismiss().then(() => {
                    console.log('+++ + + + + + + +  + + + + + + + + + + + +  + + + + +');
                    this.ngOnInit();
                });
                return yield modal.present();
            }
            else {
                const modal = yield this.modalCtrl.create({
                    component: _modalrecord_modalrecord_page__WEBPACK_IMPORTED_MODULE_27__["ModalrecordPage"],
                    cssClass: 'modalRecord',
                    componentProps: {
                        idContact: this.idContact,
                        myId: this.myId,
                        notificate: this.notificate,
                        mySid: this.mySid,
                        sidContact: this.sidContact
                    }
                });
                modal.onDidDismiss().then(() => {
                    console.log('+++ + + + + + + +  + + + + + + + + + + + +  + + + + +');
                    this.ngOnInit();
                });
                return yield modal.present();
            }
        });
    }
    recordAudio() {
        this.stateCamera = 1;
        //this.pause();
        this.fileA.stop();
        this.userService.saveStateCamera(this.stateCamera);
        this.recordButton = true;
        this.sendAudioButton = true;
        this.isrecord = true;
        this.audioFile = this.media.create(this.file.externalRootDirectory + 'nalapm.mp3');
        this.audioFile.startRecord();
        this.status = "Grabando...";
    }
    copyFileToLocalDira(fullPath) {
        let myPath = fullPath;
        console.log('[332] MY PATH', myPath);
        // Make sure we copy from the right location
        if (fullPath.indexOf('file://') < 0) {
            myPath = 'file://' + fullPath;
        }
        console.log('[337] ALL PATH', myPath);
        const ext = myPath.split('.').pop();
        const d = Date.now();
        const newName = `${d}.${ext}`;
        console.log('[341] newName', newName);
        const name = myPath.substr(myPath.lastIndexOf('/') + 1);
        const copyFrom = myPath.substr(0, myPath.lastIndexOf('/') + 1);
        const copyTo = this.file.dataDirectory + MEDIA_FOLDER_NAME;
        console.log('[345] copuFrom', copyFrom);
        console.log('[346] copyTo', copyTo);
        console.log('[347] name', name);
        this.file.copyFile(copyFrom, name, copyTo, newName).then(success => {
            this.loadFiles();
        }, error => {
            console.log('error: ', error);
        });
    }
    loadFiles() {
        this.file.listDir(this.file.dataDirectory, MEDIA_FOLDER_NAME).then(res => {
            this.files = res;
            console.log('AUDIO GUARDADO', this.files);
        }, err => console.log('error loading files: ', err));
    }
    sendAudio(fileAudio) {
        this.recordButton = false;
        this.sendAudioButton = true;
        this.pathaudio = fileAudio.MediaObject;
        let path = {};
        let nameAudio;
        //path = 'file:///storage/emulated/0/audioFile.mp3';
        path = 'file:///storage/emulated/0/nalapm.mp3';
        nameAudio = this.uploadAudio(path);
    }
    uploadAudio(file) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.stateCamera = 1;
            this.userService.saveStateCamera(this.stateCamera);
            let resultAudioSender;
            let nameFileAudio = '';
            if (file != null) {
                //send message was Adudio         
                resultAudioSender = yield this.chatService.uploadAudio(file);
                nameFileAudio = resultAudioSender.name;
            }
            else {
                this.showToast('se ha encontrado algun error');
            }
            let messageBodyA = {
                message: nameFileAudio,
                receiverid: this.idContact,
                senderid: this.myId,
                type: '3',
                image: '',
                audioFile: nameFileAudio,
                secureKey: this.secureKEY,
                secureIv: this.secureIV,
                createAt: Date.now()
            };
            this.chatService.send(messageBodyA).subscribe(data => {
                console.log('===== RESPUESTA  AUDIO DE SUBIDA', data);
            });
            this.chatService.getCoversationid(this.part).subscribe(resConvId => {
                this.toSocket = {
                    convId: resConvId.idConver,
                    msg: nameFileAudio,
                    type: '3',
                    senderId: this.myId,
                    receiverId: this.idContact,
                    audioFile: nameFileAudio
                };
                this.socket.emit('send-message', { msg: this.toSocket });
            });
            this.pushService.sendPushNotificacionNew(this.notificate).subscribe(resnoti => {
                console.log('*****************', resnoti);
            });
            this.contactsService.getContactsId(this.mySid, this.sidContact).subscribe(res => {
                this.idContacts = res;
                this.idDef1 = this.idContacts.idDef;
                let idde = this.idContacts.idDef2;
                this.contactsService.updatebadgeTalk(idde).subscribe(start => {
                    console.log('RESPONSE START ', start);
                });
                console.log('----------idDef1----------', this.idDef1);
                this.contactsService.updateBadge(this.idDef1).subscribe(test => {
                    console.log('--------------------', this.idDef1);
                });
            });
            this.file.removeFile('file:///storage/emulated/0', 'nalapm.mp3');
            this.hidde1 = !this.hidde1;
            // this.checkActiveButton();  
            //  this.socket.emit('send-message-audio', { text: messageBodyA });
            this.message = '';
            // return resultAudioSender;
        });
    }
    play(audioFile) {
        this.changeplay();
        this.d2Cnt = 0;
        console.log('[446] PLAYING ', this.playing);
        let pathVoice = this.base + '/image/infrahell/' + audioFile;
        this.fileA = this.media.create(pathVoice);
        this.getDuration2(this.fileA);
        console.log('[447]TRACK DURATION');
        this.fileA.play();
    }
    getDuration2(a) {
        this.f2 = a;
        setTimeout(() => {
            this.d2Cnt = this.d2Cnt + 1;
            if (this.d2Cnt > 8) {
                return;
            }
            this.d2Duration = this.f2.getDuration();
            this.timer(this.d2Duration, a);
            console.log("checkDuration  duration = ", this.d2Duration, "d2Cnt = ", this.d2Cnt);
            if (this.d2Duration > 0)
                return;
            this.getDuration2(this.f2);
        }, 1000);
    }
    timer(duration, a) {
        let count = 0;
        let durationFinal = Math.round(duration);
        let milliseconds = (durationFinal * 1000) + 1000;
        console.log('++ ++ MILISEGUNDOS ++ ++ ', milliseconds);
        /* let intervalo = setInterval(()=>{
           this.tett();
           console.log('INTERVALO', intervalo);
          clearInterval(intervalo);
         },milliseconds );
       */
        setTimeout(() => {
            this.fileA.stop();
            this.playing = '1';
        }, milliseconds);
    }
    tett() {
        console.log('PASO A LA NUEVA FUNCION');
        this.fileA.stop();
        //file.pause();
        this.playing = '1';
    }
    changeplay() {
        if (this.playing === '1') {
            this.playing = '0';
        }
        else {
            this.playing = '1';
        }
    }
    pause(audioFile) {
        console.log('++ ++ ++ ++ ++ ++ ++ +', audioFile, '++ ++ ++ ++ ++ ++ ++ ++ ++ audio file');
        let pathVoice = this.base + '/image/infrahell/' + audioFile;
        //const file: MediaObject = this.media.create(pathVoice);
        this.fileA.stop();
        //file.pause();
        this.playing = '1';
    }
    closeRecord() {
        this.hidde1 = !this.hidde1;
        this.recordButton = false;
        this.sendAudioButton = true;
    }
    // AUDIO END
    comproveState(param) {
        console.log('00 00 00 000 000 000 000 000 00', param);
        if (this.stateCamera === 0) {
            this.closeApp.comproveStateApp();
        }
    }
    ionViewWillLeave() {
        console.log('SOCKET DESCONECTADO');
        this.socket.disconnect();
        this.sto();
    }
    ionViewDidLoad() {
        console.log('[494] IONVIEW DID LOAD');
        this.storage.get(MEDIA_FILES_KEY).then(res => {
            this.mediaFiles = JSON.parse(res) || [];
        });
    }
    storeMediaFiles(files) {
        this.storage.get(MEDIA_FILES_KEY).then(res => {
            if (res) {
                let arr = JSON.parse(res);
                let tam = arr.length;
                tam = tam - 1;
                console.log('[507] Response', arr, 'TAM ', tam);
                this.uploadAudio(arr[tam].fullPath);
                arr = arr.concat(files);
                this.storage.set(MEDIA_FILES_KEY, JSON.stringify(arr));
            }
            else {
                this.storage.set(MEDIA_FILES_KEY, JSON.stringify(files));
            }
            this.mediaFiles = this.mediaFiles.concat(files);
        });
    }
    //ionViewDidEnter() {
    ionViewWillEnter() {
        this.storage.get(MEDIA_FILES_KEY).then(res => {
            this.mediaFiles = JSON.parse(res) || [];
        });
        this.socket.fromEvent('message').subscribe(resmessage => {
            console.log('socket recibido');
            this.messageInSocket = resmessage;
            if (this.messageInSocket.msg !== '') {
                if (this.myId === this.messageInSocket.receiverId || this.myId === this.messageInSocket.senderId) {
                    this.messages.push({
                        body: this.messageInSocket.msg,
                        createAt: Date.now(),
                        image: "",
                        isread: '0',
                        receiverid: this.messageInSocket.receiverId,
                        secureIv: "",
                        secureKey: "",
                        senderId: this.messageInSocket.senderId,
                        type: this.messageInSocket.type,
                        audioFile: this.messageInSocket.audioFile
                    });
                    this.updateChecks();
                    this.scrollToBottomInChat();
                }
            }
        });
        // let element = document.getElementById("myContent");
        this.content.scrollToBottom(0);
    }
    loadData(ev) {
        this.page++;
        let mmsg;
        this.allMessages = {
            sender: this.myId,
            receiver: this.idContact,
        };
        this.part = {
            senderId: this.myId,
            receiverId: this.idContact
        };
        this.chatService.getCoversationid(this.part).subscribe(resConvId => {
            this.toSocket = {
                convId: resConvId.idConver,
                msg: '',
                type: '',
                senderId: '',
                receiverId: '',
                audioFile: ''
            };
            //  this.socket.emit('send-message', { msg: this.toSocket });
            this.updateChecks();
        });
        this.chatService.getMessagesNew(this.allMessages, this.page).subscribe(responseChat => {
            mmsg = responseChat.response;
            mmsg.map(elem => {
                this.messages.unshift(elem.message);
            });
            console.log('????????', this.messages);
            if (ev) {
                ev.target.complete();
                if (responseChat.response.length === 0) {
                    ev.target.disabled = true;
                    this.page = 0;
                }
            }
            this.updateChecks();
        });
    }
    sendMessage(formChat) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            // alert(this.message)
            let messageInput = this.message;
            this.cipherMessage = yield this.encrypt(messageInput);
            this.messageBody = {
                message: this.cipherMessage,
                receiverid: this.idContact,
                senderid: this.myId,
                type: '1',
                image: '',
                secureKey: this.secureKEY,
                secureIv: this.secureIV,
                createAt: Date.now(),
            };
            this.chatService.getCoversationid(this.part).subscribe(resConvId => {
                console.log('===== ID DE LA CONVERSACION =====', resConvId.idConver);
                this.toSocket = {
                    convId: resConvId.idConver,
                    msg: this.cipherMessage,
                    type: this.messageBody.type,
                    senderId: this.myId,
                    receiverId: this.idContact,
                    audioFile: ''
                };
                this.socket.emit('send-message', { msg: this.toSocket });
                this.contactsService.getContactsId(this.mySid, this.sidContact).subscribe(res => {
                    this.idContacts = res;
                    this.idDef1 = this.idContacts.idDef;
                    let idde = this.idContacts.idDef2;
                    this.contactsService.updatebadgeTalk(idde).subscribe(start => {
                        //console.log('RESPONSE START ', start);
                    });
                    // console.log('----------idDef1----------',this.idDef1)
                    this.contactsService.updateBadge(this.idDef1).subscribe(test => {
                        //console.log('--------------------',this.idDef1)
                    });
                });
            });
            //sendMessage
            this.chatService.send(this.messageBody).subscribe(responseSendMessage => {
                console.log('¿¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡ ', responseSendMessage);
            });
            this.updateChecks();
            //console.log('================== THIS NOTIFICATE =============', this.notificate, '+++++',this.appid);
            /*  this.userService.getUserNameBySekretId(this.sidContact).subscribe(rsCont => {
                let arContact = rsCont.user[0];
                console.log('##$$$$####$$$$###$$$$###$$$$###$$$', arContact);
                this.notificate = {
                  apid: rsCont.appidn ,
                  notid: rsCont.notificationId
                }
                console.log('¡?¡?¡?¡?¡?¡?¡?NOTIFGICAION ?¡?¡?¡?¡?¡?¡?¡?¡?¡?', this.notificate);
              })*/
            this.pushService.sendPushNotificacionNew(this.notificate).subscribe(resnoti => {
                console.log('*****************', resnoti);
            });
            this.message = '';
        });
    } //end Send Message
    encrypt(data) {
        const dat2 = data.toString();
        this.cipher = crypto_js_aes__WEBPACK_IMPORTED_MODULE_8__["encrypt"](JSON.stringify(data), this.key1).toString();
        return this.cipher;
    }
    decrypt(encryptedData) {
        this.decodedMessage = crypto_js_aes__WEBPACK_IMPORTED_MODULE_8__["decrypt"](encryptedData, this.key1).toString(crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_7__);
        let obj = JSON.parse(this.decodedMessage.toString());
        return obj;
    }
    generateSecureKeyAndIV() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.secureKEY = yield this.aes256.generateSecureKey(this.skey); // Returns a 32 bytes string
            this.secureIV = yield this.aes256.generateSecureIV(this.skey); // Returns a 16 bytes string
        });
    }
    getRename() {
        let contacts = {
            sidUser: this.mySid,
            sidcontact: this.sidContact
        };
        this.contactsService.getAliasContact(contacts).subscribe(responseContacts => {
            this.nameContact = responseContacts.alias;
        });
    }
    goToContacts() {
        this.toResend = [];
        this.checks = 'off';
        this.socket.disconnect();
        this.router.navigate(['/contacts']);
    }
    scrollToBottomInChat() {
        setTimeout(() => {
            if (this.content.scrollToBottom) {
                this.content.scrollToBottom(0);
            }
        }, 500);
    }
    addSelectResend(msg) {
        if (this.toResendContacts.length === 0) {
            this.toResendContacts.push({
                id: msg._id,
                body: msg.body,
                createAt: Date.now(),
                image: msg.image,
                isread: '0',
                receiverid: msg.receiverId,
                secureIv: this.secureIV,
                secureKey: this.secureKEY,
                senderId: this.myId,
                type: msg.type,
                audioFile: msg.audioFile
            });
            console.log('ARREGLO PARA R-ENVIAR', this.toResendContacts);
        }
        else {
            console.log('entro por el else');
            var res = this.searchInArray(this.toResendContacts, msg);
            console.log('RRRRTTTTT', res);
            if (res === 0) {
                this.toResendContacts.push({
                    id: msg._id,
                    body: msg.body,
                    createAt: Date.now(),
                    image: msg.image,
                    isread: '0',
                    receiverid: msg.receiverId,
                    secureIv: this.secureIV,
                    secureKey: this.secureKEY,
                    senderId: this.myId,
                    type: msg.type,
                    audioFile: msg.audioFile
                });
                console.log('ARREGLO PARA R-ENVIAR POR EL ELSE', this.toResendContacts);
            }
            else {
                this.presentToast('Ya ha seleccionado este mensaje');
                // console.log('ya se ha seleccionado el mensaje', this.toResendContacts);
            }
            console.log('===========CONTINUA========');
        }
    }
    searchInArray(arr, msg) {
        console.log('???????????????', msg);
        console.log('???????????????', arr);
        var found = arr.find(array => array.body === msg.body);
        console.log('ENCONTRADO', found);
        if (found === undefined) {
            return 0; //not found
            arr = '';
        }
        else {
            return 1; //founded
            arr = '';
        }
    }
    addTrunk(msg) {
        // console.log('Mensaje que ingresa desde el selct', msg);
        this.toResend.push({
            body: msg.body,
            createAt: Date.now(),
            image: msg.image,
            isread: '0',
            receiverId: msg.receiverId,
            secureIv: this.secureIV,
            secureKey: this.secureKEY,
            senderId: this.myId,
            type: msg.type,
            audioFile: msg.audioFile
        });
        // console.log('ARREGLO PARA ENVIAR', this.toResend);
        /* this.pushService.sendPushNotificacionNew(this.notificate).subscribe(resnoti => {
           console.log(resnoti);
         }) */
    }
    presentSelect() {
        this.checks = 'on';
        this.arrowControl = 'on';
    }
    resendMessage(resendMessage) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            // console.log('ARREGLO PARA ENVIAR', this.toResend);
            if (this.toResendContacts.length > 0) {
                // console.log("L1 aaaa", this.secureIV, "l2aaa", this.secureKEY);
                const modal = yield this.modalCtrl.create({
                    component: _modal_contacts_modal_contacts_page__WEBPACK_IMPORTED_MODULE_14__["ModalContactsPage"],
                    componentProps: {
                        'objMessage': this.toResendContacts,
                        'l1': this.secureIV,
                        'l2': this.secureKEY,
                        'mySid': this.mySid,
                        'ids': this.myId,
                        'sidu': this.sidContact
                    }
                });
                modal.onDidDismiss().then(() => {
                    this.canelResend();
                });
                yield modal.present();
                this.checks = 'off'; //finale line
            }
            else {
                this.presentToast('Debe seleccionar almenos un mensaje');
            }
        });
    }
    canelResend() {
        this.toResend = [];
        this.toResendContacts = [];
        // console.log('ARREGLO CANCELAR', this.toResend);
        this.checks = 'off';
        this.trunkChecks = 'off';
        this.arrowControl = 'off';
    }
    getContacts(resendMessage) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _modal_contacts_modal_contacts_page__WEBPACK_IMPORTED_MODULE_14__["ModalContactsPage"],
                componentProps: {
                    'objMessage': resendMessage
                }
            });
            yield modal.present();
        });
    }
    presentToast(message) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const toast = yield this.toastCtrl.create({
                message,
                duration: 3000,
                position: 'middle'
            });
            toast.present();
        });
    }
    logout() {
        this.router.navigate(['/home']);
    }
    captureImage() {
        this.stateCamera = 1;
        this.userService.saveStateCamera(this.stateCamera);
        let sourceType = this.cameranew.PictureSourceType.CAMERA;
        var options = {
            quality: 50,
            sourceType: sourceType,
            saveToPhotoAlbum: false,
            correctOrientation: true
        };
        this.cameranew.getPicture(options).then(imagePath => {
            var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);
            var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);
            this.copytoNew(correctPath, currentName);
        });
    } //end capture Imnage
    copytoNew(path, namePic) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let fP;
            let rs;
            fP = path + namePic;
            this.dataResFiles = yield this.upImage(fP);
            if (this.dataResFiles === '') {
                setTimeout(() => {
                    // console.log('paso al if')
                    rs = this.dataResFiles.name;
                    this.sendMessageImage(this.dataResFiles.name);
                }, 1000);
            }
            else {
                // console.log('paso al ELSE')
                this.sendMessageImage(this.dataResFiles.name);
                rs = 'file:///storage/emulated/0/Pictures/';
                this.file.removeFile(fP, namePic);
            }
        });
    }
    upImage(file) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let imageSennder = file;
            let resultImageSender;
            if (file != null) {
                //send message was photo     
                resultImageSender = yield this.chatService.uploadimage(imageSennder);
            }
            else {
                this.showToast('se ha encontrado algun error');
            }
            return resultImageSender;
        });
    }
    sendMessageImage(image) {
        let imageRecive = image;
        this.messageBody = {
            message: imageRecive,
            receiverid: this.idContact,
            senderid: this.myId,
            type: '2',
            image: imageRecive,
            secureKey: this.secureKEY,
            secureIv: this.secureIV,
            createAt: Date.now()
        };
        this.chatService.send(this.messageBody).subscribe(data => { });
        this.part = {
            senderId: this.messageBody.senderid,
            receiverId: this.messageBody.receiverid
        };
        //send notification
        this.pushService.sendPushNotificacionNew(this.notiIdContact).subscribe(responseNoti => { });
        this.contactsService.getContactsId(this.mySid, this.sidContact).subscribe(res => {
            this.idContacts = res;
            this.idDef1 = this.idContacts.idDef;
            let idde = this.idContacts.idDef2;
            this.contactsService.updatebadgeTalk(idde).subscribe(start => {
                console.log('RESPONSE START ', start);
            });
            this.contactsService.updateBadge(this.idDef1).subscribe(test => {
                console.log('--------------------', test);
            });
        });
        this.chatService.getCoversationid(this.part).subscribe(resConvId => {
            this.toSocket = {
                convId: resConvId.idConver,
                msg: imageRecive,
                type: '2',
                senderId: this.myId,
                receiverId: this.idContact,
                audioFile: ''
            };
            this.socket.emit('send-message', { msg: this.toSocket });
        });
        this.pushService.sendPushNotificacionNew(this.notificate).subscribe(resnoti => {
        });
        this.message = '';
    }
    showToast(msg) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let toast = yield this.toastCtrl.create({
                message: msg,
                position: 'middle',
                duration: 3000
            });
            toast.present();
        });
    }
    openGallery(imagensend) {
        this.modalCtrl.create({
            component: _image_modal_image_modal_page__WEBPACK_IMPORTED_MODULE_17__["ImageModalPage"],
            componentProps: {
                img: imagensend
            }
        }).then(modal => modal.present());
    }
    imageGallery() {
        this.swcamera = true;
        this.userService.saveStateCamera(1);
        // console.log('[INFO] Paso a la galeria');
        let sourceType = this.cameranew.PictureSourceType.PHOTOLIBRARY;
        var options = {
            quality: 50,
            sourceType: sourceType,
            saveToPhotoAlbum: false,
            correctOrientation: true
        };
        this.cameranew.getPicture(options).then(imagePath => {
            var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);
            var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);
            this.copyFileToLocalDir2(correctPath, currentName, this.createFileName());
            this.copytoNew2(correctPath, currentName);
        });
    }
    copytoNew2(path, namePic) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            //   console.log('paso al metodo copiar  nuevo');
            let fP;
            let rs;
            // console.log('PATH', path, 'PICCCCC', namePic);
            fP = path + namePic;
            this.dataResFiles = yield this.upImage(fP);
            // console.log('image upload******', this.dataResFiles.name);
            if (this.dataResFiles === '') {
                setTimeout(() => {
                    //  console.log('paso al if')
                    rs = this.dataResFiles.name;
                    this.sendMessageImage(this.dataResFiles.name);
                }, 1000);
            }
            else {
                // console.log('paso al ELSE')
                this.sendMessageImage(this.dataResFiles.name);
                rs = 'file:///storage/emulated/0/Pictures/';
                this.file.removeFile(fP, namePic);
            }
        });
    }
    copyFileToLocalDir2(namePath, currentName, newFileName) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.file.copyFile(namePath, currentName, this.file.dataDirectory, newFileName).then(success => {
                this.updateStoredImages(newFileName);
                this.fpath = namePath + currentName;
                this.dataResFiles = this.upImage(this.fpath);
                this.result22 = this.dataResFiles.name;
                if (this.result22 === '') {
                    setTimeout(() => {
                        this.result22 = this.dataResFiles.name;
                        this.sendMessageImage(this.result22);
                    }, 1000);
                }
                else {
                    this.sendMessageImage(this.result22);
                    this.file.removeFile(namePath, currentName);
                }
            }, error => {
                //this.presentToast('Error while storing file.');
                //  console.log('Error while storing file.');
            });
        });
    }
    updateStoredImages(name) {
        this.storage.get(STORAGE_KEY).then(images => {
            let arr = JSON.parse(images);
            if (!arr) {
                let newImages = [name];
                this.storage.set(STORAGE_KEY, JSON.stringify(newImages));
            }
            else {
                arr.push(name);
                this.storage.set(STORAGE_KEY, JSON.stringify(arr));
            }
            let filePath = this.file.dataDirectory + name;
            let resPath = this.pathForImage(filePath);
            let newEntry = {
                name: name,
                path: resPath,
                filePath: filePath
            };
            this.images = [newEntry, ...this.images];
            //this.ref.detectChanges(); // trigger change detection cycle
        });
    }
    createFileName() {
        var d = new Date(), n = d.getTime(), newFileName = n + ".jpg";
        return newFileName;
    }
    pathForImage(img) {
        if (img === null) {
            return '';
        }
        else {
            let converted = this.webview.convertFileSrc(img);
            return converted;
        }
    }
    //delete messages
    deleteMeessages() {
        this.allMessages = {
            sender: this.myId,
            receiver: this.idContact
        };
        this.chatService.GetAllMessages(this.allMessages)
            .subscribe(data => {
            //console.log('=======$$$======', data)
            this.idChat = data.messages.conversationId;
            //  console.log('ID DEL CHAT', this.idChat);
            //  console.log('SENDER ID', this.myId);
            let getMyMessages = {
                idConv: this.idChat,
                idUser: this.myId
            };
            this.chatService.getMyMessages(getMyMessages).subscribe(myMsgResponse => {
                let mymessages = myMsgResponse.response[0].message;
                mymessages.map(message => {
                    if (message.deleteAlpha === '') {
                        //  console.log('[INFO] PARAMETRO ALPHA OCUPADO')
                        let updateIsRead = {
                            idChat: this.idChat,
                            idmessage: message._id,
                            idSender: this.myId,
                            param: 1
                        };
                        this.chatService.deleteMyMessages(updateIsRead).subscribe(response => {
                        });
                    }
                    else {
                        let updateIsRead = {
                            idChat: this.idChat,
                            idmessage: message._id,
                            idSender: this.myId,
                            param: 2
                        };
                        //  console.log('ID DE CADA MENSAJE', updateIsRead.idmessage);
                        this.chatService.deleteMyMessages(updateIsRead).subscribe(response => {
                            //  console.log('[INFO]', response);
                        });
                    } // END ELSE
                });
            }); //end get all messages
        });
        this.showToast('Se están eliminando los mensajes');
        this.navCtrl.navigateRoot('/contacts', { animated: true });
    }
    //end Delete messages
    sendTrunk() {
        this.canelResend();
        this.trunkChecks = 'on';
        this.arrowControl = 'on';
    }
    sendtoTrunk() {
        if (this.toResend.length === 0) {
            this.showToast('Debe seleccionar almenos un mensje');
        }
        else if (this.nameTrunk === '') {
            this.showToast('Debe asignar un nombre para guardar.');
        }
        else {
            let namet = this.usernameContact + ' - ' + this.nameTrunk;
            this.messageTrunk = {
                owner: this.myId,
                senderId: this.myId,
                receiverId: this.idContact,
                create: Date(),
                receiverName: namet,
                messages: this.toResend
            };
            this.trunkService.createTrunkNew(this.messageTrunk).subscribe(responseCreTru => {
                if (responseCreTru.ok === true) {
                    this.nameTrunk = '';
                    this.toResend = [];
                    this.canelResend();
                    this.showToast('Enviado al Baúl');
                }
                else {
                    this.showToast('No se ha podido enviar al baúl revise su conexion');
                }
            });
        }
    }
    presentContacts(messages, sender) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _modal_contacts_modal_contacts_page__WEBPACK_IMPORTED_MODULE_14__["ModalContactsPage"],
                componentProps: {
                    'objeMessage': messages
                }
            });
            modal.onDidDismiss().then(() => {
                console.log('SE HA CERRADO EL MODAL');
            });
            return modal.present();
        });
    }
    updateChecks() {
        this.chatService.getCoversationid(this.part).subscribe(resConId => {
            let arr = {
                idConv: resConId.idConver,
                receiverId: this.myId
            };
            this.chatService.updateChecksRead(arr).subscribe(responseUpdate => {
                //console.log('&&&&&&&&&&&&&&&&&&&&', responseUpdate);
            });
        });
    }
    updateBadgeRead() {
        this.contactsService.getContactsId(this.mySid, this.sidContact).subscribe(res => {
            this.contactsService.updateBadgeRead(res.idDef2).subscribe(rees => {
                console.log('=?=======?==', rees);
            });
        });
    }
    audioCall() {
        const optionCall = {
            audio: true,
            video: false,
            group: this.dataService.group
        };
        this._call(optionCall);
    }
    videoCall() {
        this.router.navigate(['/call', this.sidContact]);
        const optionCall = {
            audio: true,
            video: true,
            group: this.dataService.group
        };
        this._call(optionCall);
    }
    _call(option) {
        this.events.publishSomeData({
            type: 'call',
            data: option
        });
    }
    presentFooterMenu() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const actionSheet = yield this.actionSheetController.create({
                cssClass: 'my-custom-class',
                buttons: [{
                        icon: 'videocam',
                        handler: () => {
                            this.videoCall();
                        }
                    }, {
                        icon: 'call',
                        handler: () => {
                            console.log('Share clicked');
                        }
                    }]
            });
            yield actionSheet.present();
            const { role } = yield actionSheet.onDidDismiss();
            console.log('onDidDismiss resolved with role', role);
        });
    }
};
ChatNewPage.ctorParameters = () => [
    { type: _ionic_storage__WEBPACK_IMPORTED_MODULE_2__["Storage"] },
    { type: src_app_services_users_service__WEBPACK_IMPORTED_MODULE_3__["UsersService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
    { type: src_app_services_contacts_service__WEBPACK_IMPORTED_MODULE_5__["ContactsService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: src_app_services_chat_service__WEBPACK_IMPORTED_MODULE_6__["ChatService"] },
    { type: _ionic_native_aes_256_ngx__WEBPACK_IMPORTED_MODULE_9__["AES256"] },
    { type: src_app_services_push_service__WEBPACK_IMPORTED_MODULE_11__["PushService"] },
    { type: ngx_socket_io__WEBPACK_IMPORTED_MODULE_12__["Socket"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["ActionSheetController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["ModalController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["ToastController"] },
    { type: _ionic_native_camera_ngx__WEBPACK_IMPORTED_MODULE_15__["Camera"] },
    { type: _ionic_native_File_ngx__WEBPACK_IMPORTED_MODULE_16__["File"] },
    { type: _ionic_native_ionic_webview_ngx__WEBPACK_IMPORTED_MODULE_18__["WebView"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["NavController"] },
    { type: src_app_services_trunk_service__WEBPACK_IMPORTED_MODULE_19__["TrunkService"] },
    { type: src_app_services_data_service_service__WEBPACK_IMPORTED_MODULE_20__["DataServiceService"] },
    { type: src_app_services_events_service__WEBPACK_IMPORTED_MODULE_21__["EventsService"] },
    { type: _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_22__["AndroidPermissions"] },
    { type: src_app_services_closeapp_service__WEBPACK_IMPORTED_MODULE_23__["CloseappService"] },
    { type: _ionic_native_media_ngx__WEBPACK_IMPORTED_MODULE_25__["Media"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["Platform"] },
    { type: _ionic_native_media_capture_ngx__WEBPACK_IMPORTED_MODULE_26__["MediaCapture"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('content', { static: false }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["IonContent"])
], ChatNewPage.prototype, "content", void 0);
ChatNewPage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-chat-new',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./chat-new.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/chat-new/chat-new.page.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./chat-new.page.scss */ "./src/app/pages/chat-new/chat-new.page.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_storage__WEBPACK_IMPORTED_MODULE_2__["Storage"],
        src_app_services_users_service__WEBPACK_IMPORTED_MODULE_3__["UsersService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
        src_app_services_contacts_service__WEBPACK_IMPORTED_MODULE_5__["ContactsService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        src_app_services_chat_service__WEBPACK_IMPORTED_MODULE_6__["ChatService"],
        _ionic_native_aes_256_ngx__WEBPACK_IMPORTED_MODULE_9__["AES256"],
        src_app_services_push_service__WEBPACK_IMPORTED_MODULE_11__["PushService"],
        ngx_socket_io__WEBPACK_IMPORTED_MODULE_12__["Socket"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["ActionSheetController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["ModalController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["ToastController"],
        _ionic_native_camera_ngx__WEBPACK_IMPORTED_MODULE_15__["Camera"],
        _ionic_native_File_ngx__WEBPACK_IMPORTED_MODULE_16__["File"],
        _ionic_native_ionic_webview_ngx__WEBPACK_IMPORTED_MODULE_18__["WebView"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["NavController"],
        src_app_services_trunk_service__WEBPACK_IMPORTED_MODULE_19__["TrunkService"],
        src_app_services_data_service_service__WEBPACK_IMPORTED_MODULE_20__["DataServiceService"],
        src_app_services_events_service__WEBPACK_IMPORTED_MODULE_21__["EventsService"],
        _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_22__["AndroidPermissions"],
        src_app_services_closeapp_service__WEBPACK_IMPORTED_MODULE_23__["CloseappService"],
        _ionic_native_media_ngx__WEBPACK_IMPORTED_MODULE_25__["Media"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_13__["Platform"],
        _ionic_native_media_capture_ngx__WEBPACK_IMPORTED_MODULE_26__["MediaCapture"]])
], ChatNewPage);



/***/ }),

/***/ "./src/app/pages/modalrecord/modalrecord.module.ts":
/*!*********************************************************!*\
  !*** ./src/app/pages/modalrecord/modalrecord.module.ts ***!
  \*********************************************************/
/*! exports provided: ModalrecordPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalrecordPageModule", function() { return ModalrecordPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _modalrecord_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modalrecord.page */ "./src/app/pages/modalrecord/modalrecord.page.ts");






/*
const routes: Routes = [
  {
    path: '',
    component: ModalrecordPage
  }
];*/
let ModalrecordPageModule = class ModalrecordPageModule {
};
ModalrecordPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["IonicModule"],
        ],
        declarations: [_modalrecord_page__WEBPACK_IMPORTED_MODULE_5__["ModalrecordPage"]]
    })
], ModalrecordPageModule);



/***/ }),

/***/ "./src/app/pages/modalrecord/modalrecord.page.scss":
/*!*********************************************************!*\
  !*** ./src/app/pages/modalrecord/modalrecord.page.scss ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".botonsAudioRecord {\n  font-size: 36px;\n  color: red;\n  border-radius: 5PX;\n}\n\n.botonsAudioStop {\n  font-size: 36px;\n  color: #0012E8;\n  border-radius: 5PX;\n}\n\nion-card {\n  background: #000000;\n  color: #3B3B3B;\n  margin-top: 65%;\n}\n\nion-card ion-card-title {\n  color: cornsilk;\n}\n\n.closeButton {\n  font-size: 36px;\n}\n\n.btnPlayer {\n  width: 100%;\n  font-size: 12px;\n  border-radius: 5px;\n}\n\nion-content {\n  --background: transparent;\n}\n\n.content {\n  background-color: rgba(39, 39, 39, 0.761);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9kYWxyZWNvcmQvQzpcXFVzZXJzXFxOZW1lc3Npc1xcRGVza3RvcFxcZnN1IC0gQ29weTIyXFxmc3UgLSBDb3B5L3NyY1xcYXBwXFxwYWdlc1xcbW9kYWxyZWNvcmRcXG1vZGFscmVjb3JkLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvbW9kYWxyZWNvcmQvbW9kYWxyZWNvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZUFBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtBQ0FKOztBREdFO0VBQ0UsZUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ0FKOztBRElBO0VBQ0UsbUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQ0RGOztBREVFO0VBQ0UsZUFBQTtBQ0FKOztBRElBO0VBQ0ksZUFBQTtBQ0RKOztBRElBO0VBQ0ksV0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQ0RKOztBRElBO0VBQ0UseUJBQUE7QUNERjs7QURJQTtFQUNFLHlDQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9tb2RhbHJlY29yZC9tb2RhbHJlY29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmJvdG9uc0F1ZGlvUmVjb3Jke1xyXG4gICAgZm9udC1zaXplOiAzNnB4O1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVQWDtcclxuICB9XHJcblxyXG4gIC5ib3RvbnNBdWRpb1N0b3B7XHJcbiAgICBmb250LXNpemU6IDM2cHg7XHJcbiAgICBjb2xvcjogIzAwMTJFODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVQWDtcclxuICB9XHJcbiAgXHJcblxyXG5pb24tY2FyZHtcclxuICBiYWNrZ3JvdW5kOiAjMDAwMDAwO1xyXG4gIGNvbG9yOiMzQjNCM0IgO1xyXG4gIG1hcmdpbi10b3A6IDY1JTtcclxuICBpb24tY2FyZC10aXRsZXtcclxuICAgIGNvbG9yOiBjb3Juc2lsaztcclxuICB9XHJcbn1cclxuICBcclxuLmNsb3NlQnV0dG9ue1xyXG4gICAgZm9udC1zaXplOiAzNnB4O1xyXG59XHJcblxyXG4uYnRuUGxheWVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbmlvbi1jb250ZW50e1xyXG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5jb250ZW50e1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzksIDM5LCAzOSwgMC43NjEpO1xyXG4gLy8gYmFja2dyb3VuZDogY2hhcnRyZXVzZTtcclxufSIsIi5ib3RvbnNBdWRpb1JlY29yZCB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgY29sb3I6IHJlZDtcbiAgYm9yZGVyLXJhZGl1czogNVBYO1xufVxuXG4uYm90b25zQXVkaW9TdG9wIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBjb2xvcjogIzAwMTJFODtcbiAgYm9yZGVyLXJhZGl1czogNVBYO1xufVxuXG5pb24tY2FyZCB7XG4gIGJhY2tncm91bmQ6ICMwMDAwMDA7XG4gIGNvbG9yOiAjM0IzQjNCO1xuICBtYXJnaW4tdG9wOiA2NSU7XG59XG5pb24tY2FyZCBpb24tY2FyZC10aXRsZSB7XG4gIGNvbG9yOiBjb3Juc2lsaztcbn1cblxuLmNsb3NlQnV0dG9uIHtcbiAgZm9udC1zaXplOiAzNnB4O1xufVxuXG4uYnRuUGxheWVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG5pb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi5jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzOSwgMzksIDM5LCAwLjc2MSk7XG59Il19 */");

/***/ }),

/***/ "./src/app/pages/modalrecord/modalrecord.page.ts":
/*!*******************************************************!*\
  !*** ./src/app/pages/modalrecord/modalrecord.page.ts ***!
  \*******************************************************/
/*! exports provided: ModalrecordPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalrecordPage", function() { return ModalrecordPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _ionic_native_media_ngx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic-native/media/ngx */ "./node_modules/@ionic-native/media/ngx/index.js");
/* harmony import */ var src_app_services_users_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/users.service */ "./src/app/services/users.service.ts");
/* harmony import */ var src_app_services_contacts_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/contacts.service */ "./src/app/services/contacts.service.ts");
/* harmony import */ var src_app_services_push_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/push.service */ "./src/app/services/push.service.ts");
/* harmony import */ var src_app_services_closeapp_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/closeapp.service */ "./src/app/services/closeapp.service.ts");
/* harmony import */ var _ionic_native_File_ngx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ionic-native/File/ngx */ "./node_modules/@ionic-native/File/ngx/index.js");
/* harmony import */ var src_app_services_chat_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/chat.service */ "./src/app/services/chat.service.ts");
/* harmony import */ var ngx_socket_io__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-socket-io */ "./node_modules/ngx-socket-io/fesm2015/ngx-socket-io.js");
/* harmony import */ var _ionic_native_aes_256_ngx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ionic-native/aes-256/ngx */ "./node_modules/@ionic-native/aes-256/ngx/index.js");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");



//Audio












let ModalrecordPage = class ModalrecordPage {
    constructor(modalCtrl, toastCtrl, userService, contactsService, pushService, media, file, chatService, socket, aes256, closeApp, platform, navCtrl) {
        this.modalCtrl = modalCtrl;
        this.toastCtrl = toastCtrl;
        this.userService = userService;
        this.contactsService = contactsService;
        this.pushService = pushService;
        this.media = media;
        this.file = file;
        this.chatService = chatService;
        this.socket = socket;
        this.aes256 = aes256;
        this.closeApp = closeApp;
        this.platform = platform;
        this.navCtrl = navCtrl;
        this.btcRecord = false;
        this.btnStopRecord = true;
        this.btnSendAudio = true;
        this.status = "Pulse para grabar";
        this.statusRecording = '';
        this.pathAudio = {};
        // Vars
        this.stateCamera = 0;
        //var message
        this.toSocket = {
            convId: '',
            msg: '',
            type: '',
            senderId: '',
            receiverId: '',
            audioFile: ''
        };
        this.part = {
            senderId: '',
            receiverId: ''
        };
        this.skey = src_environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].sekretKey;
        this.platform.pause.subscribe(() => tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.stopAndDelete();
            this.exitWithOutArguments();
            this.closeApp.comproveStateApp();
        }));
    }
    ngOnInit() {
        this.generateSecureKeyAndIV();
    }
    exitWithOutArguments() {
        this.modalCtrl.dismiss();
        console.log('[82 INFO] STATUS RECORDING ', this.statusRecording);
        if (this.statusRecording === 'recording') {
            this.stopAndDelete();
        }
    }
    stopAndDelete() {
        this.audioFile.stopRecord();
        console.log('Pasa a eliminar this.file', this.file);
        this.file.removeFile('file:///storage/emulated/0', 'nalapm.mp3');
    }
    recordAudio() {
        this.btcRecord = true;
        // this.fileA.stop();
        this.userService.saveStateCamera(this.stateCamera);
        this.btnStopRecord = false;
        //this.isrecord = true;  
        this.audioFile = this.media.create(this.file.externalRootDirectory + 'nalapm.mp3');
        this.audioFile.startRecord();
        this.statusRecording = 'recording';
        this.status = "Grabando...";
    }
    stopRecording() {
        this.btnStopRecord = false;
        this.btnStopRecord = true;
        this.btnSendAudio = false;
        this.audioFile.stopRecord();
        this.status = "Detenido";
    }
    sendAudio(fileAudio) {
        this.pathAudio = fileAudio.MediaObject;
        let path = {};
        let nameAudio;
        path = 'file:///storage/emulated/0/nalapm.mp3';
        nameAudio = this.uploadAudio(path);
    }
    uploadAudio(file) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.stateCamera = 1;
            this.userService.saveStateCamera(this.stateCamera);
            let resultAudioSender;
            let nameFileAudio = '';
            if (file != null) {
                //send message was Adudio         
                resultAudioSender = yield this.chatService.uploadAudio(file);
                nameFileAudio = resultAudioSender.name;
            }
            else {
                this.showToast('se ha encontrado algun error');
            }
            let messageBodyA = {
                message: nameFileAudio,
                receiverid: this.idContact,
                senderid: this.myId,
                type: '3',
                image: '',
                audioFile: nameFileAudio,
                secureKey: this.secureKEY,
                secureIv: this.secureIV,
                createAt: Date.now()
            };
            this.chatService.send(messageBodyA).subscribe(data => {
                console.log('===== RESPUESTA  AUDIO DE SUBIDA', data);
            });
            this.part = {
                senderId: this.myId,
                receiverId: this.idContact
            };
            // console.log('=== PART',this.part);
            this.chatService.getCoversationid(this.part).subscribe(resConvId => {
                this.toSocket = {
                    convId: resConvId.idConver,
                    msg: nameFileAudio,
                    type: '3',
                    senderId: this.myId,
                    receiverId: this.idContact,
                    audioFile: nameFileAudio
                };
                this.socket.emit('send-message', { msg: this.toSocket });
            });
            this.pushService.sendPushNotificacionNew(this.notificate).subscribe(resnoti => {
                console.log('*****************', resnoti);
            });
            this.contactsService.getContactsId(this.mySid, this.sidContact).subscribe(res => {
                this.idContacts = res;
                this.idDef1 = this.idContacts.idDef;
                let idde = this.idContacts.idDef2;
                this.contactsService.updatebadgeTalk(idde).subscribe(start => {
                    console.log('RESPONSE START ', start);
                });
                console.log('----------idDef1----------', this.idDef1);
                this.contactsService.updateBadge(this.idDef1).subscribe(test => {
                    console.log('--------------------', this.idDef1);
                });
            });
            this.file.removeFile('file:///storage/emulated/0', 'nalapm.mp3');
            // this.socket.emit('send-message-audio', { text: messageBodyA });
            this.exitWithOutArguments();
            //return resultAudioSender;
        });
    }
    showToast(msg) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let toast = yield this.toastCtrl.create({
                message: msg,
                position: 'middle',
                duration: 3000
            });
            toast.present();
        });
    }
    generateSecureKeyAndIV() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.secureKEY = yield this.aes256.generateSecureKey(this.skey); // Returns a 32 bytes string
            this.secureIV = yield this.aes256.generateSecureIV(this.skey); // Returns a 16 bytes string
        });
    }
};
ModalrecordPage.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"] },
    { type: src_app_services_users_service__WEBPACK_IMPORTED_MODULE_4__["UsersService"] },
    { type: src_app_services_contacts_service__WEBPACK_IMPORTED_MODULE_5__["ContactsService"] },
    { type: src_app_services_push_service__WEBPACK_IMPORTED_MODULE_6__["PushService"] },
    { type: _ionic_native_media_ngx__WEBPACK_IMPORTED_MODULE_3__["Media"] },
    { type: _ionic_native_File_ngx__WEBPACK_IMPORTED_MODULE_8__["File"] },
    { type: src_app_services_chat_service__WEBPACK_IMPORTED_MODULE_9__["ChatService"] },
    { type: ngx_socket_io__WEBPACK_IMPORTED_MODULE_10__["Socket"] },
    { type: _ionic_native_aes_256_ngx__WEBPACK_IMPORTED_MODULE_11__["AES256"] },
    { type: src_app_services_closeapp_service__WEBPACK_IMPORTED_MODULE_7__["CloseappService"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Platform"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["NavController"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], ModalrecordPage.prototype, "idContact", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], ModalrecordPage.prototype, "myId", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], ModalrecordPage.prototype, "mySid", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], ModalrecordPage.prototype, "sidContact", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], ModalrecordPage.prototype, "notificate", void 0);
ModalrecordPage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-modalrecord',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./modalrecord.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/modalrecord/modalrecord.page.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./modalrecord.page.scss */ "./src/app/pages/modalrecord/modalrecord.page.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"],
        src_app_services_users_service__WEBPACK_IMPORTED_MODULE_4__["UsersService"],
        src_app_services_contacts_service__WEBPACK_IMPORTED_MODULE_5__["ContactsService"],
        src_app_services_push_service__WEBPACK_IMPORTED_MODULE_6__["PushService"],
        _ionic_native_media_ngx__WEBPACK_IMPORTED_MODULE_3__["Media"],
        _ionic_native_File_ngx__WEBPACK_IMPORTED_MODULE_8__["File"],
        src_app_services_chat_service__WEBPACK_IMPORTED_MODULE_9__["ChatService"],
        ngx_socket_io__WEBPACK_IMPORTED_MODULE_10__["Socket"],
        _ionic_native_aes_256_ngx__WEBPACK_IMPORTED_MODULE_11__["AES256"],
        src_app_services_closeapp_service__WEBPACK_IMPORTED_MODULE_7__["CloseappService"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Platform"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["NavController"]])
], ModalrecordPage);



/***/ }),

/***/ "./src/app/services/events.service.ts":
/*!********************************************!*\
  !*** ./src/app/services/events.service.ts ***!
  \********************************************/
/*! exports provided: EventsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventsService", function() { return EventsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let EventsService = class EventsService {
    constructor() {
        this.fooSubject = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
    }
    publishSomeData(data) {
        this.fooSubject.next(data);
    }
    getObservable() {
        return this.fooSubject;
    }
};
EventsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], EventsService);



/***/ })

}]);
//# sourceMappingURL=pages-chat-new-chat-new-module-es2015.js.map