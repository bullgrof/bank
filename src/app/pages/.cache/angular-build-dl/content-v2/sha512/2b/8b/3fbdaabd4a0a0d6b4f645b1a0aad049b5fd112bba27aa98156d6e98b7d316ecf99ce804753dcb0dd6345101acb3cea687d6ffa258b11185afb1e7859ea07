{"version":3,"sources":["node_modules/@ionic/core/dist/esm/cubic-bezier-2812fda3.js","node_modules/@ionic/core/dist/esm/framework-delegate-c2e2e1f4.js","node_modules/@ionic/core/dist/esm/haptic-c8f1473e.js","node_modules/@ionic/core/dist/esm/index-3476b023.js","node_modules/@ionic/core/dist/esm/index-6826f2f6.js","node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js","node_modules/@ionic/core/dist/esm/watch-options-2af96011.js","src/app/services/chat-group.service.ts","src/app/services/chat.service.ts","src/app/services/closeapp.service.ts","src/app/services/tokens.service.ts","src/app/services/trunk.service.ts","src/app/services/ui-service.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,KAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,uBAAA;AAAA,KAAA;AAAA;;;;;;;;QAMA,K,GACA,eAAA,CAAA,EAAA,CAAA,EAAA;AAAA;;AACA,WAAA,CAAA,GAAA,CAAA;AACA,WAAA,CAAA,GAAA,CAAA;AACA,K;AAEA;;;;;;;;;;;;;;AAYA,QAAA,uBAAA,GAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,WAAA,EAAA;AACA,UAAA,OAAA,GAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA;AACA,aAAA,4BAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAFA,CAE4E;AAC5E,KAHA;AAIA;;;;;AAGA,QAAA,4BAAA,GAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA;AACA,UAAA,KAAA,GAAA,IAAA,EAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AACA,aAAA,CAAA,IAAA,KAAA,GAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA;AACA,KALA;AAMA;;;;;AAGA,QAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA;AACA,MAAA,EAAA,IAAA,QAAA;AACA,MAAA,EAAA,IAAA,QAAA;AACA,MAAA,EAAA,IAAA,QAAA;AACA,MAAA,EAAA,IAAA,QAAA;AACA,UAAA,KAAA,GAAA,kBAAA,CAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA;AAAA,OAAA,CAAA;AACA,KAPA;;AAQA,QAAA,sBAAA,GAAA,SAAA,sBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,YAAA,GAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA;;AACA,UAAA,YAAA,GAAA,CAAA,EAAA;AACA,eAAA,EAAA;AACA,OAFA,MAGA;AACA,eAAA,CACA,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,KAAA,IAAA,CAAA,CADA,EAEA,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,KAAA,IAAA,CAAA,CAFA,CAAA;AAIA;AACA,KAXA;;AAYA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,CAAA,KAAA,CAAA,EAAA;AACA,eAAA,sBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA;;AACA,MAAA,CAAA,IAAA,CAAA;AACA,MAAA,CAAA,IAAA,CAAA;AACA,MAAA,CAAA,IAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,IAAA,EAAA;;AACA,UAAA,CAAA,KAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AACA,OAFA,MAGA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;;AACA,UAAA,YAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,IAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;;AACA,UAAA,YAAA,KAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAFA,MAGA,IAAA,YAAA,GAAA,CAAA,EAAA;AACA,eaAAA,CACA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CADA,EAEA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA,IAAA,IAAA,CAAA,EAAA,IAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAFA,EAGA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA,IAAA,IAAA,CAAA,EAAA,IAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAHA,CAAA;AAKA,KA9BA;;;;;;;;;;;;;;;;;AC5DA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;;AAAA,QAAA,eAAA;AAAA,yEAAA,iBAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,cAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,QADA;AAAA;AAAA;AAAA;;AAAA,iDAEA,QAAA,CAAA,eAAA,CAAA,SAAA,EAAA,SAAA,EAAA,cAAA,EAAA,UAAA,CAFA;;AAAA;AAAA,sBAIA,OAAA,SAAA,KAAA,QAAA,IAAA,EAAA,SAAA,YAAA,WAAA,CAJA;AAAA;AAAA;AAAA;;AAAA,sBAKA,IAAA,KAAA,CAAA,+BAAA,CALA;;AAAA;AAOA,gBAAA,EAPA,GAOA,OAAA,SAAA,KAAA,QAAA,GACA,SAAA,CAAA,aAAA,IAAA,SAAA,CAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CADA,GAEA,SATA;;AAUA,oBAAA,UAAA,EAAA;AACA,kBAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,2BAAA,EAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AAAA,mBAAA;AACA;;AACA,oBAAA,cAAA,EAAA;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA;AACA;;AACA,gBAAA,SAAA,CAAA,WAAA,CAAA,EAAA;;AAhBA,qBAiBA,EAAA,CAAA,gBAjBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkBA,EAAA,CAAA,gBAAA,EAlBA;;AAAA;AAAA,iDAoBA,EApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,eAAA;AAAA;AAAA;AAAA,OAAA;;AAsBA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,QAAA,EAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,cAAA,SAAA,GAAA,OAAA,CAAA,aAAA;AACA,iBAAA,QAAA,CAAA,iBAAA,CAAA,SAAA,EAAA,OAAA,CAAA;AACA;;AACA,QAAA,OAAA,CAAA,MAAA;AACA;;AACA,aAAA,OAAA,CAAA,OAAA,EAAA;AACA,KATA;;;;;;;;;;;;;;;;;ACtBA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,oBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,sBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,kBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;;;AAIA;;;;;;AAIA,QAAA,eAAA,GAAA,SAAA,eAAA,GAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,YAAA;;AACA,UAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA;AACA;AACA,KALA;AAMA;;;;;AAGA,QAAA,oBAAA,GAAA,SAAA,oBAAA,GAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,YAAA;;AACA,UAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,qBAAA;AACA;AACA,KALA;AAMA;;;;;AAGA,QAAA,sBAAA,GAAA,SAAA,sBAAA,GAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,YAAA;;AACA,UAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,uBAAA;AACA;AACA,KALA;AAMA;;;;;;AAIA,QAAA,kBAAA,GAAA,SAAA,kBAAA,GAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,YAAA;;AACA,UAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,mBAAA;AACA;AACA,KALA;;;;;;;;;;;;;;;;;ACpCA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,iBAAA;AAAA,KAAA;AAAA;;;;;;AAIA,QAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,eAAA,EAAA;AACA,UAAA;AACA,YAAA,OAAA,eAAA,KAAA,QAAA,IAAA,eAAA,KAAA,EAAA,EAAA;AACA,iBAAA,eAAA;AACA;AACA;;;;;;;AAKA,YAAA,gBAAA,GAAA,QAAA,CAAA,sBAAA,EAAA;AACA,YAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,QAAA,gBAAA,CAAA,WAAA,CAAA,UAAA;AACA,QAAA,UAAA,CAAA,SAAA,GAAA,eAAA;AACA;;;;;AAIA,QAAA,WAAA,CAAA,OAAA,CAAA,UAAA,UAAA,EAAA;AACA,cAAA,mBAAA,GAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA;;AACA,eAAA,IAAA,YAAA,GAAA,mBAAA,CAAA,MAAA,GAAA,CAAA,EAAmE,YAAA,IAAA,CAAnE,EAAsF,YAAA,EAAtF,EAAsF;AACtF,gBAAA,OAAA,GAAA,mBAAA,CAAA,YAAA,CAAA;;AACA,gBAAA,OAAA,CAAA,UAAA,EAAA;AACA,cAAA,OAAA,CAAA,UAAA,CAAA,WAAA,CAAA,OAAA;AACA,aAFA,MAGA;AACA,cAAA,gBAAA,CAAA,WAAA,CAAA,OAAA;AACA;AACA;;;;;;;AAKA,gBAAA,aAAA,GAAA,kBAAA,CAAA,OAAA,CAAA;AACA;;AACA,iBAAA,IAAA,UAAA,GAAA,CAAA,EAAwC,UAAA,GAAA,aAAA,CAAA,MAAxC,EAA2E,UAAA,EAA3E,EAA2E;AAC3E,cAAA,eAAA,CAAA,aAAA,CAAA,UAAA,CAAA,CAAA;AACA;AACA;AACS,SArBT;AAsBA;;;;AAIA;;AACA,YAAA,UAAA,GAAA,kBAAA,CAAA,gBAAA,CAAA;AACA;;AACA,aAAA,IAAA,UAAA,GAAA,CAAA,EAAgC,UAAA,GAAA,UAAA,CAAA,MAAhC,EAAgE,UAAA,EAAhE,EAAgE;AAChE,UAAA,eAAA,CAAA,UAAA,CAAA,UAAA,CAAA,CAAA;AACA,SAhDA,CAiDA;;;AACA,YAAA,WAAA,GAAA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,QAAA,WAAA,CAAA,WAAA,CAAA,gBAAA,EAnDA,CAoDA;;AACA,YAAA,WAAA,GAAA,WAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,eAAA,WAAA,KAAA,IAAA,GAAA,WAAA,CAAA,SAAA,GAAA,WAAA,CAAA,SAAA;AACA,OAvDA,CAwDA,OAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,GAAA;AACA,eAAA,EAAA;AACA;AACA,KA7DA;AA8DA;;;;;;;AAKA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,OAAA,EAAA;AACA;AACA,UAAA,OAAA,CAAA,QAAA,IAAA,OAAA,CAAA,QAAA,KAAA,CAAA,EAAA;AACA;AACA;;AACA,WAAA,IAAA,CAAA,GAAA,OAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAA+C,CAAA,IAAA,CAA/C,EAAuD,CAAA,EAAvD,EAAuD;AACvD,YAAA,SAAA,GAAA,OAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,YAAA,aAAA,GAAA,SAAA,CAAA,IAAA,CAFuD,CAGvD;;AACA,YAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,aAAA,CAAA,WAAA,EAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,eAAA,CAAA,aAAA;AACA;AACA,SAPuD,CAQvD;AACA;;;AACA,YAAA,cAAA,GAAA,SAAA,CAAA,KAAA;AACA;;AACA,YAAA,cAAA,IAAA,IAAA,IAAA,cAAA,CAAA,WAAA,GAAA,QAAA,CAAA,aAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,eAAA,CAAA,aAAA;AACA;AACA;AACA;;;;;AAGA,UAAA,aAAA,GAAA,kBAAA,CAAA,OAAA,CAAA;AACA;;AACA,WAAA,IAAA,EAAA,GAAA,CAAA,EAAmB,EAAA,GAAA,aAAA,CAAA,MAAnB,EAA6C,EAAA,EAA7C,EAA6C;AAC7C,QAAA,eAAA,CAAA,aAAA,CAAA,EAAA,CAAA,CAAA;AACA;AACA,KA7BA;AA8BA;;;;;;AAIA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,EAAA,EAAA;AACA,aAAA,EAAA,CAAA,QAAA,IAAA,IAAA,GAAA,EAAA,CAAA,QAAA,GAAA,EAAA,CAAA,UAAA;AACA,KAFA;;AAGA,QAAA,iBAAA,GAAA,CAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AACA,QAAA,WAAA,GAAA,CAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,CAAA;;;;;;;;;;;;;;;;AC7GA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,iBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,aAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,8CAAA,GAAA,mBAAA;AAAA;AAAA,0DAAA,CAAA;AAAA;;;AAAA,QAAA,mDAAA,GAAA,mBAAA;AAAA;AAAA,+DAAA,CAAA;;AAGA,QAAA,sBAAA,GAAA,SAAA,sBAAA;AAAA,aAAqC,mBAAA,CAAA,CAAA;AAAA;AAAA,kCAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;AAAA;AAAA,sEAAA,CAAA,CAArC;AAAA,KAAA;;AACA,QAAA,qBAAA,GAAA,SAAA,qBAAA;AAAA,aAAoC,mBAAA,CAAA,CAAA;AAAA;AAAA,iCAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;AAAA;AAAA,qEAAA,CAAA,CAApC;AAAA,KAAA;;AACA,QAAA,UAAA,GAAA,SAAA,UAAA,CAAA,IAAA,EAAA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACQ,QAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAS,YAAA;AACjB,UAAA,gBAAA,CAAA,IAAA,CAAA;AACA,UAAA,aAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,SAAA,EAAA;AACA,cAAA,MAAA,CAAA,SAAA,CAAA,OAAA;AACA;;AACA,YAAA,eAAA,CAAA,IAAA,CAAA;AACA,YAAA,OAAA,CAAA,MAAA,CAAA;AACa,WANb,EAMa,UAAA,KAAA,EAAA;AACb,YAAA,eAAA,CAAA,IAAA,CAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA;AACa,WATb;AAUS,SAZD;AAaH,OAdL,CAAA;AAeA,KAhBA;;AAiBA,QAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,IAAA,EAAA;AACA,UAAA,UAAA,GAAA,IAAA,CAAA,UAAA;AACA,UAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA,MAAA,SAAA,CAAA,UAAA,EAAA,SAAA,EAAA,IAAA,CAAA,SAAA,CAAA;;AACA,UAAA,IAAA,CAAA,UAAA,EAAA;AACA,QAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,aAAA;AACA,OAFA,MAGA;AACA,QAAA,UAAA,CAAA,SAAA,CAAA,MAAA,CAAA,aAAA;AACA;;AACA,MAAA,aAAA,CAAA,UAAA,EAAA,KAAA,CAAA;;AACA,UAAA,SAAA,EAAA;AACA,QAAA,aAAA,CAAA,SAAA,EAAA,KAAA,CAAA;AACA;AACA,KAdA;;AAeA,QAAA,aAAA;AAAA,0EAAA,kBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,mBAAA,CAAA,IAAA,CADA;;AAAA;AACA,gBAAA,gBADA;AAEA,gBAAA,GAFA,GAEA,gBAAA,GACA,SAAA,CAAA,gBAAA,EAAA,IAAA,CADA,GAEA,WAAA,CAAA,IAAA,CAJA,EAI4B;;AAJ5B,kDAKA,GALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,aAAA;AAAA;AAAA;AAAA,OAAA;;AAOA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,IAAA,EAAA;AACA,UAAA,UAAA,GAAA,IAAA,CAAA,UAAA;AACA,UAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA,MAAA,UAAA,CAAA,SAAA,CAAA,MAAA,CAAA,oBAAA;;AACA,UAAA,SAAA,KAAA,SAAA,EAAA;AACA,QAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,oBAAA;AACA;AACA,KAPA;;AAQA,QAAA,mBAAA;AAAA,0EAAA,kBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,CAAA,IAAA,CAAA,SAAA,IAAA,CAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,KAAA,CADA;AAAA;AAAA;AAAA;;AAAA,kDAEA,SAFA;;AAAA;AAAA,qBAIA,IAAA,CAAA,gBAJA;AAAA;AAAA;AAAA;;AAAA,kDAKA,IAAA,CAAA,gBALA;;AAAA;AAAA,sBAOA,IAAA,CAAA,IAAA,KAAA,KAPA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQA,sBAAA,EARA;;AAAA;AAAA,8CAQA,sBARA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBASA,qBAAA,EATA;;AAAA;AAAA,8CASA,qBATA;;AAAA;AAOA,gBAAA,YAPA;AAAA,kDAUA,YAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,mBAAA;AAAA;AAAA;AAAA,OAAA;;AAYA,QAAA,SAAA;AAAA,0EAAA,kBAAA,gBAAA,EAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,YAAA,CAAA,IAAA,EAAA,IAAA,CADA;;AAAA;AAAA;AAAA;AAAA,uBAI0B,mBAAA,CAAA,CAAA;AAAA;AAAA,mCAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;AAAA;AAAA,uEAAA,CAAA,CAJ1B;;AAAA;AAIA,gBAAA,GAJA;AAAA;AAAA,uBAKA,GAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,IAAA,CAAA,MAAA,EAAA,IAAA,CALA;;AAAA;AAKA,gBAAA,KALA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQA,gBAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,MAAA,EAAA,IAAA,CAAA;;AARA;AAUA,gBAAA,cAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AAVA;AAAA,uBAWA,cAAA,CAAA,KAAA,EAAA,IAAA,CAXA;;AAAA;AAWA,gBAAA,WAXA;;AAYA,oBAAA,IAAA,CAAA,gBAAA,EAAA;AACA,kBAAA,IAAA,CAAA,gBAAA,CAAA,SAAA;AACA;;AACA,oBAAA,WAAA,EAAA;AACA,kBAAA,aAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA;;AAjBA,kDAkBA;AACA,kBAAA,YAAA,EAAA,WADA;AAEA,kBAAA,SAAA,EAAA;AAFA,iBAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,SAAA;AAAA;AAAA;AAAA,OAAA;;AAuBA,QAAA,WAAA;AAAA,0EAAA,kBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,UADA,GACA,IAAA,CAAA,UADA;AAEA,gBAAA,SAFA,GAEA,IAAA,CAAA,SAFA;AAAA;AAAA,uBAGA,YAAA,CAAA,IAAA,EAAA,KAAA,CAHA;;AAAA;AAIA,gBAAA,cAAA,CAAA,UAAA,EAAA,SAAA,CAAA;AACA,gBAAA,aAAA,CAAA,UAAA,EAAA,SAAA,CAAA;AALA,kDAMA;AACA,kBAAA,YAAA,EAAA;AADA,iBANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,WAAA;AAAA;AAAA;AAAA,OAAA;;AAUA,QAAA,YAAA;AAAA,0EAAA,kBAAA,IAAA,EAAA,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,IADA,GACA,IAAA,CAAA,QAAA,KAAA,SAAA,GAAA,IAAA,CAAA,QAAA,GAAA,WADA;AAEA,gBAAA,QAFA,GAEA,IAAA,GAAA,CACA,SAAA,CAAA,IAAA,CAAA,UAAA,CADA,EAEA,SAAA,CAAA,IAAA,CAAA,SAAA,CAFA,CAAA,GAGA,CACA,YAAA,CAAA,IAAA,CAAA,UAAA,CADA,EAEA,YAAA,CAAA,IAAA,CAAA,SAAA,CAFA,CALA;AAAA;AAAA,uBASA,OAAA,CAAA,GAAA,CAAA,QAAA,CATA;;AAAA;AAAA;AAAA,uBAUA,eAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,UAAA,CAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,YAAA;AAAA;AAAA;AAAA,OAAA;;AAYA,QAAA,eAAA;AAAA,0EAAA,kBAAA,WAAA,EAAA,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,WADA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEA,WAAA,CAAA,UAAA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,eAAA;AAAA;AAAA;AAAA,OAAA;;AAKA,QAAA,cAAA,GAAA,SAAA,cAAA,CAAA,KAAA,EAAA,IAAA,EAAA;AACA,UAAA,gBAAA,GAAA,IAAA,CAAA,gBAAA,CADA,CAEA;;AACA,UAAA,OAAA,GAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,UAAA,WAAA,EAAA;AACA,cAAA,OAAA,WAAA,KAAA,QAAA,EAAA;AACA,YAAA,OAAA,CAAA,WAAA,KAAA,CAAA,CAAA;AACA,WAFA,MAGA,IAAA,KAAA,CAAA,YAAA,KAAA,SAAA,EAAA;AACA,YAAA,OAAA,CAAA,KAAA,CAAA,YAAA,CAAA;AACA;AACS,SAPT;AAQK,OATL,CAAA,CAHA,CAaA;;AACA,UAAA,gBAAA,EAAA;AACA;AACA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,IAAA;AACA,QAAA,gBAAA,CAAA,KAAA,CAAA;AACA,OALA,MAMA;AACA;AACA;AACA;AACA,QAAA,KAAA,CAAA,IAAA;AACA,OAzBA,CA0BA;;;AACA,aAAA,OAAA;AACA,KA5BA;;AA6BA,QAAA,cAAA,GAAA,SAAA,cAAA,CAAA,UAAA,EAAA,SAAA,EAAA;AACA,MAAA,SAAA,CAAA,SAAA,EAAyB,mDAAA,CAAA,GAAA,CAAzB,CAAA;AACA,MAAA,SAAA,CAAA,UAAA,EAA0B,mDAAA,CAAA,GAAA,CAA1B,CAAA;AACA,KAHA;;AAIA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,UAAA,EAAA,SAAA,EAAA;AACA,MAAA,SAAA,CAAA,UAAA,EAA0B,mDAAA,CAAA,GAAA,CAA1B,CAAA;AACA,MAAA,SAAA,CAAA,SAAA,EAAyB,mDAAA,CAAA,GAAA,CAAzB,CAAA;AACA,KAHA;;AAIA,QAAA,SAAA,GAAA,SAAA,SAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AACA,UAAA,EAAA,EAAA;AACA,YAAA,EAAA,GAAA,IAAA,WAAA,CAAA,SAAA,EAAA;AACA,UAAA,OAAA,EAAA,KADA;AAEA,UAAA,UAAA,EAAA;AAFA,SAAA,CAAA;AAIA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA;AACA;AACA,KARA;;AASA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,EAAA,EAAA;AACA,UAAA,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA;AACA,eAAA,EAAA,CAAA,gBAAA,EAAA;AACA;;AACA,aAAA,OAAA,CAAA,OAAA,EAAA;AACA,KALA;;AAMA,QAAA,SAAA;AAAA,0EAAA,kBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,EADA;;AAAA,qBAEA,OAFA;AAAA;AAAA;AAAA;;AAAA,sBAGA,OAAA,CAAA,gBAAA,IAAA,IAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIA,OAAA,CAAA,gBAAA,EAJA;;AAAA;AAIA,gBAAA,SAJA;;AAAA,sBAKA,SAAA,IAAA,IALA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBASA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,EAAA,GAAA,CAAA,SAAA,CAAA,CATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,SAAA;AAAA;AAAA;AAAA,OAAA;;AAYA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA;AACA,QAAA,EAAA,CAAA,YAAA,CAAA,aAAA,EAAA,MAAA;AACA,QAAA,EAAA,CAAA,SAAA,CAAA,GAAA,CAAA,iBAAA;AACA,OAHA,MAIA;AACA,QAAA,EAAA,CAAA,MAAA,GAAA,KAAA;AACA,QAAA,EAAA,CAAA,eAAA,CAAA,aAAA;AACA,QAAA,EAAA,CAAA,SAAA,CAAA,MAAA,CAAA,iBAAA;AACA;AACA,KAVA;;AAWA,QAAA,SAAA,GAAA,SAAA,SAAA,CAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA;AACA,UAAA,UAAA,KAAA,SAAA,EAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,MAAA,GAAA,SAAA,KAAA,MAAA,GACA,IADA,GAEA,KAFA;AAGA;;AACA,UAAA,SAAA,KAAA,SAAA,EAAA;AACA,QAAA,SAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA;AACA;AACA,KATA;;AAUA,QAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,CAAA,SAAA,CAAA,QAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA,OAAA;AACA;;AACA,UAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA,yDAAA,CAAA;;AACA,UAAA,OAAA,EAAA;AACA,eAAA,OAAA;AACA,OAPA,CAQA;;;AACA,aAAA,OAAA;AACA,KAVA;;;;;;;;;;;;;;;;;ACvMA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,kBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;;AAAA,QAAA,WAAA,GAAA,SAAA,WAAA,CAAA,QAAA,EAAA,EAAA,EAAA;AACA,aAAA,EAAA,CAAA,OAAA,CAAA,QAAA,MAAA,IAAA;AACA,KAFA;AAGA;;;;;AAGA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,KAAA,EAAA;AACA,aAAA,OAAA,KAAA,KAAA,QAAA,IAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA,qBAAA;AADA,6BAEsB,KAFtB,GAE4B,IAF5B,IAGK,SAHL;AAIA,KALA;;AAMA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,KAAA,SAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,OAAA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,eAAA,KAAA,CACA,MADA,CACA,UAAA,CAAA;AAAA,iBAAA,CAAA,IAAA,IAAA;AAAA,SADA,EAEA,GAFA,CAEA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,IAAA,EAAA;AAAA,SAFA,EAGA,MAHA,CAGA,UAAA,CAAA;AAAA,iBAAA,CAAA,KAAA,EAAA;AAAA,SAHA,CAAA;AAIA;;AACA,aAAA,EAAA;AACA,KATA;;AAUA,QAAA,WAAA,GAAA,SAAA,WAAA,CAAA,OAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,eAAA,GAAA,CAAA,CAAA,CAAA,GAAA,IAAA;AAAA,OAAA;AACA,aAAA,GAAA;AACA,KAJA;;AAKA,QAAA,MAAA,GAAA,sBAAA;;AACA,QAAA,OAAA;AAAA,2EAAA,kBAAA,GAAA,EAAA,EAAA,EAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,GAAA,IAAA,IAAA,IAAA,GAAA,CAAA,CAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CADA;AAAA;AAAA;AAAA;;AAEA,gBAAA,MAFA,GAEA,QAAA,CAAA,aAAA,CAAA,YAAA,CAFA;;AAAA,qBAGA,MAHA;AAAA;AAAA;AAAA;;AAIA,oBAAA,EAAA,IAAA,IAAA,EAAA;AACA,kBAAA,EAAA,CAAA,cAAA;AACA;;AANA,kDAOA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA,SAAA,CAPA;;AAAA;AAAA,kDAUA,KAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,OAAA;AAAA;AAAA;AAAA,OAAA;;;;;;;;;;;;;;;;;AC5BA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,iBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;;AAAA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,WAAA,EAAA,OAAA,EAAA,QAAA,EAAA;AACA,UAAA,QAAA,GAAA,IAAA,gBAAA,CAAA,UAAA,YAAA,EAAA;AACA,QAAA,QAAA,CAAA,iBAAA,CAAA,YAAA,EAAA,OAAA,CAAA,CAAA;AACK,OAFL,CAAA;AAGA,MAAA,QAAA,CAAA,OAAA,CAAA,WAAA,EAAA;AACA,QAAA,SAAA,EAAA,IADA;AAEA,QAAA,OAAA,EAAA;AAFA,OAAA;AAIA,aAAA,QAAA;AACA,KATA;;AAUA,QAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,YAAA,EAAA,OAAA,EAAA;AACA,UAAA,SAAA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAuB,CAAA,GAAA,GAAA,CAAA,UAAA,CAAA,MAAvB,EAAkD,CAAA,EAAlD,EAAkD;AAClD,UAAA,SAAA,GAAA,iBAAA,CAAA,GAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,IAAA,SAAA;AACA;AACK,OALL;AAMA,aAAA,SAAA;AACA,KATA;;AAUA,QAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,EAAA,EAAA,OAAA,EAAA;AACA,UAAA,EAAA,CAAA,QAAA,KAAA,CAAA,EAAA;AACA,eAAA,SAAA;AACA;;AACA,UAAA,OAAA,GAAA,EAAA,CAAA,OAAA,KAAA,OAAA,CAAA,WAAA,EAAA,GACA,CAAA,EAAA,CADA,GAEA,KAAA,CAAA,IAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,CAFA;AAGA,aAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,OAAA,KAAA,IAAA;AAAA,OAAA,CAAA;AACA,KARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,QAAM,GAAG,GAAG,yDAAA,CAAA,aAAA,CAAA,CAAY,GAAxB;;AAKA,QAAa,gBAAb;AAEE,gCAAoB,IAApB,EAAqC;AAAA;;AAAjB,aAAA,IAAA,GAAA,IAAA;AAAsB;;AAF5C;AAAA;AAAA,4CAIsB,WAJtB,EAIiC;AAC7B,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAuC,GAAvC,mCAAyE;AAAC,YAAA,WAAW,EAAX;AAAD,WAAzE,CAAP;AACD;AANH;AAAA;AAAA,oCAQc,aARd,EAQ2B;AACvB,UAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,aAAhC;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAuC,GAAvC,0BAAiE;AAAE,YAAA,aAAa,EAAb;AAAF,WAAjE,CAAP;AACD;AAXH;AAAA;AAAA,0CAaoB,UAbpB,EAa8B;AAC1B,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAuC,GAAvC,gCAAsE;AAC3E,YAAA,UAAU,EAAV;AAD2E,WAAtE,CAAP;AAGD;AAjBH;AAAA;AAAA,4CAmBsB,oBAnBtB,EAmByC;AACrC,UAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ,EAAmD,oBAAnD;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAuC,GAAvC,2BAAiE;AACtE,YAAA,mBAAmB,EAAnB;AADsE,WAAjE,CAAP;AAGD;AAxBH;AAAA;AAAA,qCA0Be,OA1Bf,EA0BsB;AAClB,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAoC,GAApC,oCAAiE,OAAjE,EAAP;AACD;AA5BH;AAAA;AAAA,uCA8BiB,MA9BjB,EA8BuB;AACnB,iBAAO,KAAK,IAAL,CAAU,GAAV,WAA+B,GAA/B,sCAA+D,MAA/D,EAAP;AACD;AAhCH;AAAA;AAAA,uCAmCkB,OAnClB,EAmCyB;AACrB,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAmB,GAAnB,kCAAsD;AAAE,YAAA,OAAO,EAAP;AAAF,WAAtD,CAAP;AACD;AArCH;AAAA;AAAA,wCAuCkB,MAvClB,EAuCwB;AACrB;AACC,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAmB,GAAnB,yBAA6C;AAAE,YAAA,MAAM,EAAN;AAAF,WAA7C,CAAP;AACD;AA1CH;AAAA;AAAA,8CA4CwB,QA5CxB,EA4CkC,MA5ClC,EA4CwC;AACpC,cAAI,KAAK,GAAG;AACV,YAAA,QAAQ,EAAG,QADD;AAEV,YAAA,QAAQ,EAAG;AAFD,WAAZ;AAIA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkC,GAAlC,kCAAoE;AAAE,YAAA,KAAK,EAAL;AAAF,WAApE,CAAP;AACD;AAlDH;AAAA;AAAA,oCAoDc,WApDd,EAoDyB;AACrB,iBAAO,KAAK,IAAL,CAAU,GAAV,WAA+B,GAA/B,qCAA8D,WAA9D,EAAP;AACD;AAtDH;AAAA;AAAA,wCAwDkB,KAxDlB,EAwDuB;AACnB,UAAA,OAAO,CAAC,GAAR,CAAY,4BAAZ,EAA0C,KAA1C;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAA6B,GAA7B,oBAAiD;AAAE,YAAA,KAAK,EAAL;AAAF,WAAjD,CAAP;AACD;AA3DH;AAAA;AAAA,qCA6De,OA7Df,EA6DsB;AAClB,iBAAO,KAAK,IAAL,CAAU,GAAV,WAA4B,GAA5B,sCAA4D,OAA5D,EAAP;AACD;AA/DH;AAAA;AAAA,wCAiEkB,OAjElB,EAiEyB;AACtB;AACC,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAmB,GAAnB,uBAA2C;AAAE,YAAA,OAAO,EAAP;AAAF,WAA3C,CAAP;AACD;AApEH;;AAAA;AAAA,OAAA;;;;cAE6B,iDAAA,CAAA,YAAA;;;;AAFhB,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH5B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG4B,E,uEAEA,iDAAA,CAAA,YAAA,C,EAFA,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAM,GAAG,GAAG,yDAAA,CAAA,aAAA,CAAA,CAAY,GAAxB;;AAKA,QAAa,WAAb;AAOC;AAEC,2BAAoB,IAApB,EACU,OADV,EAEU,YAFV,EAEoC;AAAA;;AAFhB,aAAA,IAAA,GAAA,IAAA;AACV,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,YAAA,GAAA,YAAA,CAA0B,CATpC;;AACA,aAAA,MAAA,GAAS,EAAT;AACA,aAAA,MAAA,GAAS,EAAT;AACA,aAAA,SAAA,GAAY,EAAZ;AACA,aAAA,YAAA,GAAe,EAAf;AAKyC;;AAX3C;AAAA;AAAA,yCAaiB,GAbjB,EAaoB;AAClB,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAwC,GAAxC,uBAA+D;AACpE,YAAA,GAAG,EAAH;AADoE,WAA/D,CAAP;AAGD;AAjBD;AAAA;AAAA,yCAoBmB,EApBnB,EAoBqB;AAClB,iBAAO,KAAK,IAAL,CAAU,IAAV,WAA0B,GAA1B,0BAAoD;AAAE,YAAA,EAAE,EAAF;AAAF,WAApD,CAAP;AACD;AAtBF;AAAA;AAAA,uCAwBe,KAxBf,EAwBuB,IAxBvB,EAwB4B;AAC1B;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,IAA1B;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiC,GAAjC,mCAA8D,KAAK,CAAC,MAApE,uBAAyF,KAAK,CAAC,QAA/F,mBAAiH,IAAjH,EAAP;AACD;AA5BD;AAAA;AAAA,yCA+BmB,QA/BnB,EA+B2B;AACvB;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,GAAlB,0BAA4C;AAAE,YAAA,QAAQ,EAAR;AAAF,WAA5C,CAAP;AACD;AAlCH;AAAA;AAAA,sCAoCgB,UApChB,EAoC0B;AACtB;AACA;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiC,GAAjC,wCAAkE,UAAU,CAAC,MAA7E,qBAA8F,UAAU,CAAC,MAAzG,EAAP;AACD;AAxCH;AAAA;AAAA,yCA2CmB,YA3CnB,EA2C+B;AAC3B,UAAA,OAAO,CAAC,GAAR,CAAY,iDAAZ,EAA+D,YAA/D;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiC,GAAjC,0CAAoE,YAAY,CAAC,QAAjF,yBAAwG,YAAY,CAAC,UAArH,EAAP;AACD;AA9CH;AAAA;AAAA,0CAgDoB,MAhDpB,EAgD0B;AACtB;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiC,GAAjC,kCAA4D,MAA5D,EAAP;AACD;AAnDH;AAAA;AAAA,qCAqDe,QArDf,EAqDuB;AACnB;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,GAAlB,oBAAsC;AAAE,YAAA,QAAQ,EAAR;AAAF,WAAtC,CAAP;AACD;AAxDH;AAAA;AAAA,6BA0DO,WA1DP,EA0DkB;AACd;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,kCAAZ,EAA+C,WAA/C;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAuC,GAAvC,YAAmD;AACxD,YAAA,WAAW,EAAX;AADwD,WAAnD,CAAP;AAGD;AAhEH;AAAA;AAAA,oCAkEc,WAlEd,EAkEyB;AACrB;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,GAAlB,YAA8B;AACnC,YAAA,WAAW,EAAX;AADmC,WAA9B,CAAP;AAGD,SAvEH,CAyEE;;AAzEF;AAAA;AAAA,uCA0EiB,QA1EjB,EA0EyB;AACrB;AACA,eAAK,MAAL,GAAc,QAAQ,CAAC,MAAvB;AACA,eAAK,MAAL,GAAc,QAAQ,CAAC,QAAvB;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAoC,GAApC,yCAAsE,KAAK,MAA3E,uBAA8F,KAAK,MAAnG,EAAP;AACD,SA/EH,CAiFE;;AAjFF;AAAA;AAAA,oCAkFoB,GAlFpB,EAkF+B;;;;;;;;;AAC3B;AACM,oBAAA,O,GAA6B;AACjC,sBAAA,OAAO,EAAE;AADwB,qB;AAG7B,oBAAA,Y,GAAmC,KAAK,YAAL,CAAkB,MAAlB,E;;AAEzC,2BAAM,YAAY,CAAC,MAAb,CAAoB,GAApB,YAA4B,GAA5B,mBAA+C,OAA/C,EACH,IADG,CACE,UAAA,IAAI,EAAG;AACX;AACA,sBAAA,KAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,QAAhB,CAApB;AAED,qBALG,WAKK,UAAA,GAAG,EAAG;AACb,sBAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,GAA3B;AACD,qBAPG,CAAN;;;uDAQO,KAAK,Y;;;;;;;;;AACb,SAlGH,CAoGE;;AApGF;AAAA;AAAA,oCAqGoB,KArGpB,EAqGiC;;;;;;;;;AACvB,oBAAA,O,GAA6B;AACjC,sBAAA,OAAO,EAAE;AADwB,qB;AAG7B,oBAAA,a,GAAoC,KAAK,YAAL,CAAkB,MAAlB,E;;AAC1C,2BAAM,aAAa,CAAC,MAAd,CAAqB,KAArB,YAA+B,GAA/B,yBAAwD,OAAxD,EACH,IADG,CACE,UAAA,IAAI,EAAG;AACX,sBAAA,MAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,QAAtB;AAEA,sBAAA,MAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,QAAhB,CAApB;AAED,qBANG,WAMK,UAAA,GAAG,EAAG;AACb,sBAAA,OAAO,CAAC,GAAR,CAAY,aAAZ;AACD,qBARG,CAAN;;;uDASO,KAAK,Y;;;;;;;;;AACb;AApHH;AAAA;AAAA,sCAyHa,CAEV;AA3HH;;AAAA;AAAA,OAAA;;;;cAS4B,iDAAA,CAAA,YAAA;;cACP,2CAAA,CAAA,SAAA;;cACK,4DAAA,CAAA,cAAA;;;;AAXb,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHvB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGuB,E,uEASI,iDAAA,CAAA,YAAA,C,EACP,2CAAA,CAAA,SAAA,C,EACK,4DAAA,CAAA,cAAA,C,EAXF,CAAA,EAAX,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXb,QAAa,eAAb;AAGE,+BACU,QADV,EAEU,MAFV,EAGU,OAHV,EAIU,OAJV,EAKU,WALV,EAKoC;AAAA;;AAJ1B,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACL;;AATP;AAAA;AAAA,2CAWkB;AAAA;;AACd,UAAA,OAAO,CAAC,GAAR,CAAY,qCAAZ;AACA,eAAK,QAAL,CAAc,KAAd,CAAoB,SAApB,CAA8B;AAAA,mBAAY,kCAAA,CAAA,WAAA,CAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,uCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxC,sBAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EADwC,CAExC;;AAEA,2BAAK,OAAL,CAAa,GAAb,CAAiB,aAAjB,EAAgC,IAAhC,CAAqC,UAAC,MAAD,EAAW;AAC9C,wBAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAAyB,MAAzB,EAAgC,cAAhC;;AACA,4BAAI,MAAM,KAAK,CAAf,EAAkB;AAEhB,0BAAA,MAAI,CAAC,OAAL,CAAa,eAAb,CAA6B,OAA7B;;AACA,0BAAA,MAAI,CAAC,OAAL,CAAa,MAAb,CAAoB,aAApB;AAED;;AACD,wBAAA,MAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,aAAjB,EAAgC,CAAhC,EAAmC,IAAnC,CAAwC,UAAC,EAAD,EAAM;AAC5C,0BAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ;AACD,yBAFD;AAID,uBAZD;;AAJwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAA,EAAZ;AAAA,WAA9B;AAkBD;AA/BH;;AAAA;AAAA,OAAA;;;;cAIuB,2CAAA,CAAA,UAAA;;cACH,4CAAA,CAAA,QAAA;;cACC,2CAAA,CAAA,eAAA;;cACA,2CAAA,CAAA,SAAA;;cACK,2CAAA,CAAA,cAAA;;;;AARb,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG2B,E,uEAIL,2CAAA,CAAA,UAAA,C,EACH,4CAAA,CAAA,QAAA,C,EACC,2CAAA,CAAA,eAAA,C,EACA,2CAAA,CAAA,SAAA,C,EACK,2CAAA,CAAA,cAAA,C,EARE,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAM,GAAG,GAAG,yDAAA,CAAA,aAAA,CAAA,CAAY,GAAxB;;AAKA,QAAa,YAAb;AASE,4BAAqB,IAArB,EACqB,MADrB,EAEqB,YAFrB,EAE+C;AAAA;;AAF1B,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,YAAA,GAAA,YAAA;AATrB,aAAA,WAAA,GAAc,CAAd;AAEA,aAAA,YAAA,GAAe,EAAf;AACA,aAAA,SAAA,GAAY,EAAZ;AACA,aAAA,EAAA,GAAK,EAAL;AACA,aAAA,MAAA,GAAS,uCAAT;AAIqD;;AAXvD;AAAA;AAAA,sCAcW;AACT,iBAAO,KAAK,IAAL,CAAU,GAAV,wDAAP;AACD;AAhBD;AAAA;AAAA,oCAmBc,UAnBd,EAmBwB;AACpB,UAAA,OAAO,CAAC,GAAR,CAAY,yBAAZ,EAAuC,UAAvC;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAA8B,GAA9B,sBAAqD,UAArD,CAAP;AACD,SAvBH,CAyBE;;AAzBF;AAAA;AAAA,oCA0BoB,GA1BpB,EA0B+B;;;;;;;;;AAC3B,oBAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAiC,GAAjC;AACM,oBAAA,O,GAA6B;AACjC,sBAAA,OAAO,EAAE;AADwB,qB;AAG7B,oBAAA,Y,GAAoC,KAAK,YAAL,CAAkB,MAAlB,E;;AAE3C,2BAAM,YAAY,CAAC,MAAb,CAAqB,GAArB,YAA4B,GAA5B,oBAAgD,OAAhD,EACF,IADE,CACG,UAAA,IAAI,EAAG;AACX,sBAAA,MAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,QAAtB;AACA,sBAAA,MAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,QAAhB,CAApB;AAED,qBALE,WAKM,UAAA,GAAG,EAAG;AACb,sBAAA,OAAO,CAAC,GAAR,CAAY,aAAZ;AACD,qBAPE,CAAN;;;uDASQ,KAAK,Y;;;;;;;;;AACb;AA3CH;AAAA;AAAA,gCA8CU,GA9CV,EA8Ca;AACT,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAwB,GAAxB,iBAA0C,GAA1C,CAAP;AACD;AAhDH;AAAA;AAAA,wCAkDc;AACX,iBAAO,KAAK,IAAL,CAAU,GAAV,WAA2B,GAA3B,uBAAP;AACD;AApDF;AAAA;AAAA,uCAsDiB,MAtDjB,EAsDuB;AACpB,iBAAQ,KAAK,IAAL,CAAU,GAAV,WAAiC,GAAjC,4BAAwD,MAAxD,EAAR;AACA;AAxDH;AAAA;AAAA,yCA0DmB,MA1DnB,EA0DyB;AACrB,cAAM,IAAI,GAAG,MAAb,CADqB,CAEtB;;AACA,iBAAQ,KAAK,IAAL,CAAU,GAAV,WAAgC,GAAhC,6BAAuD,MAAvD,EAAR;AACA;AA9DH;;AAAA;AAAA,OAAA;;;;cAS6B,iDAAA,CAAA,YAAA;;cACE,4CAAA,CAAA,QAAA;;cACM,4DAAA,CAAA,cAAA;;;;AAXxB,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHxB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGwB,E,uEASI,iDAAA,CAAA,YAAA,C,EACE,4CAAA,CAAA,QAAA,C,EACM,4DAAA,CAAA,cAAA,C,EAXZ,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAM,GAAG,GAAG,yDAAA,CAAA,aAAA,CAAA,CAAY,GAAxB;;AAKA,QAAa,YAAb;AAsBE,4BAAoB,IAApB,EACoB,OADpB,EAEoB,WAFpB,EAEkD;AAAA;;AAF9B,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,WAAA,GAAA,WAAA;AApBpB,aAAA,WAAA,GAAc;AACZ,UAAA,SAAS,EAAE,EADC;AAEZ,UAAA,QAAQ,EAAE,EAFE;AAGZ,UAAA,UAAU,EAAE,EAHA;AAIZ,UAAA,IAAI,EAAE,EAJM;AAKZ,UAAA,KAAK,EAAE,EALK;AAMZ,UAAA,SAAS,EAAE,EANC;AAOZ,UAAA,IAAI,EAAE,EAPM;AAQZ,UAAA,SAAS,EAAC,EARE;AASZ,UAAA,QAAQ,EAAE,EATE;AAUZ,UAAA,MAAM,EAAE,EAVI;AAWZ,UAAA,QAAQ,EAAE;AAXE,SAAd;AAcA,aAAA,GAAA,GAAM;AACJ,UAAA,OAAO,EAAE;AADL,SAAN;AAMuD;;AAxBzD;AAAA;AAAA,uCA2BiB,KA3BjB,EA2BsB;AAClB,UAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ,EAA8B,KAA9B;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAsC,GAAtC,uBAA6D,KAA7D,CAAP;AACD;AA9BH;AAAA;AAAA,kCAkCY,WAlCZ,EAkCyB,QAlCzB,EAkCiC;AAAA;;AAC7B,eAAK,OAAL,GAAe,WAAf;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAA6B,GAA7B,oBAAgD,WAAhD,EAA6D,SAA7D,CAAuE,UAAA,GAAG,EAAG;AAClF,YAAA,OAAO,CAAC,GAAR,CAAY,2BAAZ,EAAwC,GAAxC;AACA,YAAA,MAAI,CAAC,EAAL,GAAW,GAAG,CAAC,KAAf;AACA,YAAA,MAAI,CAAC,OAAL,GAAe,MAAI,CAAC,EAAL,CAAQ,GAAvB;;AACA,YAAA,MAAI,CAAC,gBAAL,CAAsB,QAAtB,EAAgC,MAAI,CAAC,OAArC;;AACA,YAAA,MAAI,CAAC,OAAL;AACD,WANM,CAAP;AASD;AA7CH;AAAA;AAAA,yCA+CyB,WA/CzB,EA+CsC,OA/CtC,EA+C6C;;;;;;;;AACzC,oBAAA,WAAW,CAAC,GAAZ,CAAgB,UAAA,OAAO,EAAG;AACxB,sBAAA,MAAI,CAAC,WAAL,GAAmB;AACjB,wBAAA,SAAS,EAAE,OADM;AAEjB,wBAAA,QAAQ,EAAE,OAAO,CAAC,QAFD;AAGjB,wBAAA,UAAU,EAAE,OAAO,CAAC,UAHH;AAIjB,wBAAA,IAAI,EAAE,OAAO,CAAC,IAJG;AAKjB,wBAAA,KAAK,EAAE,OAAO,CAAC,KALE;AAMjB,wBAAA,SAAS,EAAE,OAAO,CAAC,SANF;AAOjB,wBAAA,IAAI,EAAE,OAAO,CAAC,IAPG;AAQjB,wBAAA,SAAS,EAAE,OAAO,CAAC,SARF;AASjB,wBAAA,QAAQ,EAAE,OAAO,CAAC,QATD;AAUjB,wBAAA,MAAM,EAAE,OAAO,CAAC,MAVC;AAWjB,wBAAA,QAAQ,EAAE,OAAO,CAAC;AAXD,uBAAnB,CADwB,CAc1B;AACC;;AAEA,sBAAA,MAAI,CAAC,IAAL,CAAU,IAAV,WAAkB,GAAlB,6BAA8C,MAAI,CAAC,WAAnD,EAAgE,SAAhE,CAA0E,UAAA,GAAG,EAAG;AAC/E,wBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,uBAFD;AAIA,qBArBD;;;;;;;;;AAsBD;AAtEH;AAAA;AAAA,4CAwEsB,EAxEtB,EAwEwB;AACpB,eAAK,IAAL,CAAU,IAAV,WAAkB,GAAlB,6BAA8C,EAA9C,EAAkD,SAAlD,CAA4D,UAAA,GAAG,EAAG;AAChE,YAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,WAFD;AAGD;AA5EH;AAAA;AAAA,wCA8EkB,MA9ElB,EA8EwB;AACpB,iBAAO,KAAK,IAAL,CAAU,GAAV,WAA+B,GAA/B,8BAAsD,MAAtD,EAAP;AACD;AAhFH;AAAA;AAAA,sCAkFgB,OAlFhB,EAkFuB;AACnB,iBAAO,KAAK,IAAL,CAAU,GAAV,WAA+B,GAA/B,qCAA6D,OAA7D,EAAP;AACD;AApFH;AAAA;AAAA,oCAsFc,OAtFd,EAsFqB;AACjB,eAAK,GAAL,GAAS;AACP,YAAA,OAAO,EAAE;AADF,WAAT;AAGA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,GAAlB,qBAAuC,KAAK,GAA5C,CAAP;AACD;AA3FH;;AAAA;AAAA,OAAA;;;;cAsB4B,iDAAA,CAAA,YAAA;;cACG,2CAAA,CAAA,SAAA;;cACI,2CAAA,CAAA,mBAAA;;;;AAxBtB,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHxB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGwB,E,uEAsBG,iDAAA,CAAA,YAAA,C,EACG,2CAAA,CAAA,SAAA,C,EACI,2CAAA,CAAA,mBAAA,C,EAxBV,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,QAAa,gBAAb;AAEE,gCAAoB,eAApB,EAAoD;AAAA;;AAAhC,aAAA,eAAA,GAAA,eAAA;AAAqC;;AAF3D;AAAA;AAAA,kCAImB,OAJnB,EAIkC;;;;;;;;AAChB,2BAAM,KAAK,eAAL,CAAqB,MAArB,CAA4B;AAC9C,sBAAA,OAAO,EAAP,OAD8C;AAE9C,sBAAA,OAAO,EAAE,CAAC,IAAD;AAFqC,qBAA5B,CAAN;;;AAAR,oBAAA,K;;AAKN,2BAAM,KAAK,CAAC,OAAN,EAAN;;;;;;;;;AACD;AAXH;;AAAA;AAAA,OAAA;;;;cAEuC,2CAAA,CAAA,iBAAA;;;;AAF1B,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH5B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG4B,E,uEAEU,2CAAA,CAAA,iBAAA,C,EAFV,CAAA,EAAhB,gBAAgB,CAAhB","sourcesContent":["/**\r\n * Based on:\r\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\r\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\r\n * TODO: Reduce rounding error\r\n */\r\nclass Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n/**\r\n * Given a cubic-bezier curve, get the x value (time) given\r\n * the y value (progression).\r\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\r\n * P0: (0, 0)\r\n * P1: (0.32, 0.72)\r\n * P2: (0, 1)\r\n * P3: (1, 1)\r\n *\r\n * If you give a cubic bezier curve that never reaches the\r\n * provided progression, this function will return NaN.\r\n */\r\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\r\n    const tValues = solveCubicBezier(p0.y, p1.y, p2.y, p3.y, progression);\r\n    return solveCubicParametricEquation(p0.x, p1.x, p2.x, p3.x, tValues[0]); // TODO: Add better strategy for dealing with multiple solutions\r\n};\r\n/**\r\n * Solve a cubic equation in one dimension (time)\r\n */\r\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\r\n    const partA = (3 * p1) * Math.pow(t - 1, 2);\r\n    const partB = (-3 * p2 * t) + (3 * p2) + (p3 * t);\r\n    const partC = p0 * Math.pow(t - 1, 3);\r\n    return t * (partA + (t * partB)) - partC;\r\n};\r\n/**\r\n * Find the `t` value for a cubic bezier using Cardano's formula\r\n */\r\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\r\n    p0 -= refPoint;\r\n    p1 -= refPoint;\r\n    p2 -= refPoint;\r\n    p3 -= refPoint;\r\n    const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\r\n    return roots.filter(root => root >= 0 && root <= 1);\r\n};\r\nconst solveQuadraticEquation = (a, b, c) => {\r\n    const discriminant = b * b - 4 * a * c;\r\n    if (discriminant < 0) {\r\n        return [];\r\n    }\r\n    else {\r\n        return [\r\n            (-b + Math.sqrt(discriminant)) / (2 * a),\r\n            (-b - Math.sqrt(discriminant)) / (2 * a)\r\n        ];\r\n    }\r\n};\r\nconst solveCubicEquation = (a, b, c, d) => {\r\n    if (a === 0) {\r\n        return solveQuadraticEquation(b, c, d);\r\n    }\r\n    b /= a;\r\n    c /= a;\r\n    d /= a;\r\n    const p = (3 * c - b * b) / 3;\r\n    const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\r\n    if (p === 0) {\r\n        return [Math.pow(-q, 1 / 3)];\r\n    }\r\n    else if (q === 0) {\r\n        return [Math.sqrt(-p), -Math.sqrt(-p)];\r\n    }\r\n    const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\r\n    if (discriminant === 0) {\r\n        return [Math.pow(q / 2, 1 / 2) - b / 3];\r\n    }\r\n    else if (discriminant > 0) {\r\n        return [Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow((q / 2) + Math.sqrt(discriminant), 1 / 3) - b / 3];\r\n    }\r\n    const r = Math.sqrt(Math.pow(-(p / 3), 3));\r\n    const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\r\n    const s = 2 * Math.pow(r, 1 / 3);\r\n    return [\r\n        s * Math.cos(phi / 3) - b / 3,\r\n        s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3,\r\n        s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3\r\n    ];\r\n};\n\nexport { Point as P, getTimeGivenProgression as g };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.selection();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionStart();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionChanged();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionEnd();\r\n    }\r\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nconst sanitizeDOMString = (untrustedString) => {\r\n    try {\r\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\r\n            return untrustedString;\r\n        }\r\n        /**\r\n         * Create a document fragment\r\n         * separate from the main DOM,\r\n         * create a div to do our work in\r\n         */\r\n        const documentFragment = document.createDocumentFragment();\r\n        const workingDiv = document.createElement('div');\r\n        documentFragment.appendChild(workingDiv);\r\n        workingDiv.innerHTML = untrustedString;\r\n        /**\r\n         * Remove any elements\r\n         * that are blocked\r\n         */\r\n        blockedTags.forEach(blockedTag => {\r\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\r\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n                const element = getElementsToRemove[elementIndex];\r\n                if (element.parentNode) {\r\n                    element.parentNode.removeChild(element);\r\n                }\r\n                else {\r\n                    documentFragment.removeChild(element);\r\n                }\r\n                /**\r\n                 * We still need to sanitize\r\n                 * the children of this element\r\n                 * as they are left behind\r\n                 */\r\n                const childElements = getElementChildren(element);\r\n                /* tslint:disable-next-line */\r\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n                    sanitizeElement(childElements[childIndex]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Go through remaining elements and remove\r\n         * non-allowed attribs\r\n         */\r\n        // IE does not support .children on document fragments, only .childNodes\r\n        const dfChildren = getElementChildren(documentFragment);\r\n        /* tslint:disable-next-line */\r\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n            sanitizeElement(dfChildren[childIndex]);\r\n        }\r\n        // Append document fragment to div\r\n        const fragmentDiv = document.createElement('div');\r\n        fragmentDiv.appendChild(documentFragment);\r\n        // First child is always the div we did our work in\r\n        const getInnerDiv = fragmentDiv.querySelector('div');\r\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nconst sanitizeElement = (element) => {\r\n    // IE uses childNodes, so ignore nodes that are not elements\r\n    if (element.nodeType && element.nodeType !== 1) {\r\n        return;\r\n    }\r\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n        const attribute = element.attributes.item(i);\r\n        const attributeName = attribute.name;\r\n        // remove non-allowed attribs\r\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n            element.removeAttribute(attributeName);\r\n            continue;\r\n        }\r\n        // clean up any allowed attribs\r\n        // that attempt to do any JS funny-business\r\n        const attributeValue = attribute.value;\r\n        /* tslint:disable-next-line */\r\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n            element.removeAttribute(attributeName);\r\n        }\r\n    }\r\n    /**\r\n     * Sanitize any nested children\r\n     */\r\n    const childElements = getElementChildren(element);\r\n    /* tslint:disable-next-line */\r\n    for (let i = 0; i < childElements.length; i++) {\r\n        sanitizeElement(childElements[i]);\r\n    }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nconst getElementChildren = (el) => {\r\n    return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","import { w as writeTask } from './core-ca0488fc.js';\nimport { b as LIFECYCLE_WILL_LEAVE, L as LIFECYCLE_WILL_ENTER, a as LIFECYCLE_DID_ENTER, c as LIFECYCLE_DID_LEAVE } from './constants-3c3e1099.js';\n\nconst iosTransitionAnimation = () => import('./ios.transition-071bd421.js');\r\nconst mdTransitionAnimation = () => import('./md.transition-15a81b08.js');\r\nconst transition = (opts) => {\r\n    return new Promise((resolve, reject) => {\r\n        writeTask(() => {\r\n            beforeTransition(opts);\r\n            runTransition(opts).then(result => {\r\n                if (result.animation) {\r\n                    result.animation.destroy();\r\n                }\r\n                afterTransition(opts);\r\n                resolve(result);\r\n            }, error => {\r\n                afterTransition(opts);\r\n                reject(error);\r\n            });\r\n        });\r\n    });\r\n};\r\nconst beforeTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    setZIndex(enteringEl, leavingEl, opts.direction);\r\n    if (opts.showGoBack) {\r\n        enteringEl.classList.add('can-go-back');\r\n    }\r\n    else {\r\n        enteringEl.classList.remove('can-go-back');\r\n    }\r\n    setPageHidden(enteringEl, false);\r\n    if (leavingEl) {\r\n        setPageHidden(leavingEl, false);\r\n    }\r\n};\r\nconst runTransition = async (opts) => {\r\n    const animationBuilder = await getAnimationBuilder(opts);\r\n    const ani = (animationBuilder)\r\n        ? animation(animationBuilder, opts)\r\n        : noAnimation(opts); // fast path for no animation\r\n    return ani;\r\n};\r\nconst afterTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    enteringEl.classList.remove('ion-page-invisible');\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.classList.remove('ion-page-invisible');\r\n    }\r\n};\r\nconst getAnimationBuilder = async (opts) => {\r\n    if (!opts.leavingEl || !opts.animated || opts.duration === 0) {\r\n        return undefined;\r\n    }\r\n    if (opts.animationBuilder) {\r\n        return opts.animationBuilder;\r\n    }\r\n    const getAnimation = (opts.mode === 'ios')\r\n        ? (await iosTransitionAnimation()).iosTransitionAnimation\r\n        : (await mdTransitionAnimation()).mdTransitionAnimation;\r\n    return getAnimation;\r\n};\r\nconst animation = async (animationBuilder, opts) => {\r\n    await waitForReady(opts, true);\r\n    let trans;\r\n    try {\r\n        const mod = await import('./index-69c37885.js');\r\n        trans = await mod.create(animationBuilder, opts.baseEl, opts);\r\n    }\r\n    catch (err) {\r\n        trans = animationBuilder(opts.baseEl, opts);\r\n    }\r\n    fireWillEvents(opts.enteringEl, opts.leavingEl);\r\n    const didComplete = await playTransition(trans, opts);\r\n    if (opts.progressCallback) {\r\n        opts.progressCallback(undefined);\r\n    }\r\n    if (didComplete) {\r\n        fireDidEvents(opts.enteringEl, opts.leavingEl);\r\n    }\r\n    return {\r\n        hasCompleted: didComplete,\r\n        animation: trans\r\n    };\r\n};\r\nconst noAnimation = async (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    await waitForReady(opts, false);\r\n    fireWillEvents(enteringEl, leavingEl);\r\n    fireDidEvents(enteringEl, leavingEl);\r\n    return {\r\n        hasCompleted: true\r\n    };\r\n};\r\nconst waitForReady = async (opts, defaultDeep) => {\r\n    const deep = opts.deepWait !== undefined ? opts.deepWait : defaultDeep;\r\n    const promises = deep ? [\r\n        deepReady(opts.enteringEl),\r\n        deepReady(opts.leavingEl),\r\n    ] : [\r\n        shallowReady(opts.enteringEl),\r\n        shallowReady(opts.leavingEl),\r\n    ];\r\n    await Promise.all(promises);\r\n    await notifyViewReady(opts.viewIsReady, opts.enteringEl);\r\n};\r\nconst notifyViewReady = async (viewIsReady, enteringEl) => {\r\n    if (viewIsReady) {\r\n        await viewIsReady(enteringEl);\r\n    }\r\n};\r\nconst playTransition = (trans, opts) => {\r\n    const progressCallback = opts.progressCallback;\r\n    // TODO: Remove AnimationBuilder\r\n    const promise = new Promise(resolve => {\r\n        trans.onFinish((currentStep) => {\r\n            if (typeof currentStep === 'number') {\r\n                resolve(currentStep === 1);\r\n            }\r\n            else if (trans.hasCompleted !== undefined) {\r\n                resolve(trans.hasCompleted);\r\n            }\r\n        });\r\n    });\r\n    // cool, let's do this, start the transition\r\n    if (progressCallback) {\r\n        // this is a swipe to go back, just get the transition progress ready\r\n        // kick off the swipe animation start\r\n        trans.progressStart(true);\r\n        progressCallback(trans);\r\n    }\r\n    else {\r\n        // only the top level transition should actually start \"play\"\r\n        // kick it off and let it play through\r\n        // ******** DOM WRITE ****************\r\n        trans.play();\r\n    }\r\n    // create a callback for when the animation is done\r\n    return promise;\r\n};\r\nconst fireWillEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(leavingEl, LIFECYCLE_WILL_LEAVE);\r\n    lifecycle(enteringEl, LIFECYCLE_WILL_ENTER);\r\n};\r\nconst fireDidEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(enteringEl, LIFECYCLE_DID_ENTER);\r\n    lifecycle(leavingEl, LIFECYCLE_DID_LEAVE);\r\n};\r\nconst lifecycle = (el, eventName) => {\r\n    if (el) {\r\n        const ev = new CustomEvent(eventName, {\r\n            bubbles: false,\r\n            cancelable: false,\r\n        });\r\n        el.dispatchEvent(ev);\r\n    }\r\n};\r\nconst shallowReady = (el) => {\r\n    if (el && el.componentOnReady) {\r\n        return el.componentOnReady();\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst deepReady = async (el) => {\r\n    const element = el;\r\n    if (element) {\r\n        if (element.componentOnReady != null) {\r\n            const stencilEl = await element.componentOnReady();\r\n            if (stencilEl != null) {\r\n                return;\r\n            }\r\n        }\r\n        await Promise.all(Array.from(element.children).map(deepReady));\r\n    }\r\n};\r\nconst setPageHidden = (el, hidden) => {\r\n    if (hidden) {\r\n        el.setAttribute('aria-hidden', 'true');\r\n        el.classList.add('ion-page-hidden');\r\n    }\r\n    else {\r\n        el.hidden = false;\r\n        el.removeAttribute('aria-hidden');\r\n        el.classList.remove('ion-page-hidden');\r\n    }\r\n};\r\nconst setZIndex = (enteringEl, leavingEl, direction) => {\r\n    if (enteringEl !== undefined) {\r\n        enteringEl.style.zIndex = (direction === 'back')\r\n            ? '99'\r\n            : '101';\r\n    }\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.style.zIndex = '100';\r\n    }\r\n};\r\nconst getIonPageElement = (element) => {\r\n    if (element.classList.contains('ion-page')) {\r\n        return element;\r\n    }\r\n    const ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');\r\n    if (ionPage) {\r\n        return ionPage;\r\n    }\r\n    // idk, return the original element so at least something animates and we don't have a null pointer\r\n    return element;\r\n};\n\nexport { deepReady as d, getIonPageElement as g, lifecycle as l, setPageHidden as s, transition as t };\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction);\r\n        }\r\n    }\r\n    return false;\r\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const watchForOptions = (containerEl, tagName, onChange) => {\r\n    const mutation = new MutationObserver(mutationList => {\r\n        onChange(getSelectedOption(mutationList, tagName));\r\n    });\r\n    mutation.observe(containerEl, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n    return mutation;\r\n};\r\nconst getSelectedOption = (mutationList, tagName) => {\r\n    let newOption;\r\n    mutationList.forEach(mut => {\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < mut.addedNodes.length; i++) {\r\n            newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\r\n        }\r\n    });\r\n    return newOption;\r\n};\r\nconst findCheckedOption = (el, tagName) => {\r\n    if (el.nodeType !== 1) {\r\n        return undefined;\r\n    }\r\n    const options = (el.tagName === tagName.toUpperCase())\r\n        ? [el]\r\n        : Array.from(el.querySelectorAll(tagName));\r\n    return options.find((o) => o.checked === true);\r\n};\n\nexport { findCheckedOption as f, watchForOptions as w };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PostGroup, \r\n         getGroup, \r\n         idParticipans, \r\n         badgeGroups, \r\n         responseGroupInfo, deleteMemberOfGroup } from '../interfaces/groups'\r\nimport {GetMessages } from '../interfaces/messageGroupInterface';\r\n\r\n\r\n\r\nconst URL = environment.url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatGroupService {\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  deleteGroupFromUser(deletegroup){\r\n    return this.http.post<deleteMemberOfGroup>(`${URL}/group/delete/user/fromgroup`,{deletegroup})\r\n  }\r\n\r\n  deleteGroup(toDeleteGroup){\r\n    console.log('=)=)=)=)=)=)=)=)', toDeleteGroup);\r\n    return this.http.post<deleteMemberOfGroup>(`${URL}/group/delete/group`, { toDeleteGroup })\r\n  }\r\n\r\n  deleteGroupOfUser(arrUserDel){\r\n    return this.http.post<deleteMemberOfGroup>(`${URL}/group/delete/member/user`,{\r\n      arrUserDel\r\n    })\r\n  }\r\n\r\n  deleteMemberOfGroup(deleteMemberOfGroup){\r\n    console.log('====SE ENVIA AL SERVICIO ====>>>>>> ',deleteMemberOfGroup);\r\n    return this.http.post<deleteMemberOfGroup>(`${URL}/group/delete/member`,{\r\n      deleteMemberOfGroup\r\n    })\r\n  }\r\n\r\n  getGroupInfo(idGroup){\r\n    return this.http.get<responseGroupInfo>(`${URL}/group/members?groupId=${idGroup}`);\r\n  }\r\n\r\n  getBadgeGroups(idUser){\r\n    return this.http.get<badgeGroups>(`${ URL }/group/getBadgets?idUser=${idUser}`);\r\n  }\r\n\r\n\r\n  postUpdateRead( arrRead ){\r\n    return this.http.post(`${ URL }/group/updateBadgeReadGroup`, { arrRead })\r\n  }\r\n\r\n  postUpdateBadge(arrOut){\r\n   // console.log(\"**SEND TO SERVICE**\",arrOut);\r\n    return this.http.post(`${ URL }/group/updateUsers`, { arrOut });\r\n  }\r\n\r\n  getIdNotificationsPar(arrIdpar, iduser ){\r\n    let group = {\r\n      arrIdpar : arrIdpar,\r\n      senderId : iduser\r\n    }\r\n    return this.http.post<idParticipans>(`${ URL }/group/idNotificationsUsers`,{ group });\r\n  }\r\n\r\n  getMessages(objMessages){\r\n    return this.http.get<GetMessages>(`${ URL }/group/messages?idGroup=${objMessages}`);\r\n  }\r\n\r\n  postCreateGroup(group){\r\n    console.log('ARREGLO CREACION DE GRUPOS', group);\r\n    return this.http.post<PostGroup>(`${URL}/group/create`, { group });\r\n  }\r\n\r\n  getInfoGroup(idGroup){\r\n    return this.http.get<getGroup>(`${ URL }/group/infoGroup?idGroup=${idGroup}`);\r\n  }\r\n\r\n  postSendMessage(message){\r\n   // console.log('[ININ] Mensaje entrante', message)\r\n    return this.http.post(`${ URL }/group/chatGroup`, { message });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { Storage } from '@ionic/storage';\r\nimport { ResoponseMessages, \r\n         ResponseUnread, \r\n         IdConversation, \r\n         GetMessagesNew, \r\n         resend , \r\n         responseUpdateChecks,\r\n         responseSendMessage } from '../interfaces/messagesInterfaces';\r\nimport { MessageImage } from '../interfaces/messagesInterfaces';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { Modal } from 'ionic-angular';\r\n\r\nconst URL = environment.url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  // vars\r\n  sender = '';\r\n  receiv = '';\r\n  dataFiles = {};\r\n  dataFilesOut = {};\r\n //page = 0;\r\n\r\n  constructor(private http: HttpClient,\r\n    private storage: Storage,\r\n    private fileTransfer: FileTransfer) { }\r\n\r\nupdateChecksRead(arr){\r\n  return this.http.post<responseUpdateChecks>(`${URL}/chat/getMunRead`, {\r\n    arr\r\n  })\r\n}\r\n\r\n\r\n resendMessageNew( ar ){\r\n   return this.http.post<resend>(`${URL}/chat/resendMessage`, { ar });\r\n }   \r\n\r\ngetMessagesNew(users?, page?){\r\n  //this.page++;\r\n  console.log('PAGINTAION', page);\r\n  return this.http.get<GetMessagesNew>(`${URL}/chat/conver?senderid=${ users.sender }&receiver=${ users.receiver }&page=${page}`);\r\n}\r\n\r\n\r\n  deleteMyMessages(updateIn) {\r\n    //send to service updateIn\r\n    return this.http.post(`${URL}/chat/emptyMessages`, { updateIn });\r\n  }\r\n\r\n  getMyMessages(myMessages) {\r\n    //console.log('[INFO] id de la conversacion: ', myMessages.idConv);\r\n    //console.log('[INFO] id del usuario : ', myMessages.idUser);\r\n    return this.http.get<ResponseUnread>(`${URL}/chat/getMyMessages?idConv=${myMessages.idConv}&iduser=${myMessages.idUser}`);\r\n  }\r\n\r\n\r\n  getCoversationid(participants) {\r\n    console.log('++++++PARTICIPANTES GETCONVERSATIONID SERVICE: ', participants);\r\n    return this.http.get<IdConversation>(`${URL}/chat/conversatioid?senderId=${participants.senderId}&receiverId=${participants.receiverId}`)\r\n  }\r\n\r\n  getUnreadmessages(idConv) {\r\n    //console.log(idConv);\r\n    return this.http.get<ResponseUnread>(`${URL}/chat/getRead?idConv=${idConv}`);\r\n  }\r\n\r\n  updateIsread(updateIn) {\r\n    //send to service updateIn\r\n    return this.http.post(`${URL}/chat/upcheck`, { updateIn });\r\n  }\r\n\r\n  send(messageBody) {\r\n    //sendmessage messageBody\r\n    console.log('M M M M M M M M  M M M M M M M M',messageBody);\r\n    return this.http.post<responseSendMessage>(`${URL}/chat`, {\r\n      messageBody\r\n    }); \r\n  }\r\n\r\n  sendMessage(messageBody) {\r\n    //sendmessage messageBody\r\n    return this.http.post(`${URL}/chat`, {\r\n      messageBody\r\n    }); \r\n  }\r\n\r\n  //New Method GetAllMessages()\r\n  GetAllMessages(objUsers) {\r\n    //console.log(objUsers);\r\n    this.sender = objUsers.sender;\r\n    this.receiv = objUsers.receiver;\r\n    return this.http.get<ResoponseMessages>(`${URL}/chat/conversation?senderid=${this.sender}&receiver=${this.receiv}`);\r\n  }\r\n\r\n  // Upload Image\r\n  async uploadimage(img: string) {\r\n    //console.log(\"+++++++++++image as a service\", img);\r\n    const options: FileUploadOptions = {\r\n      fileKey: 'image'\r\n    };\r\n    const fileTransfer: FileTransferObject = this.fileTransfer.create();\r\n\r\n    await fileTransfer.upload(img, `${URL}/chat/upload`, options)\r\n      .then(data => {\r\n        //this.dataFiles = data.response;\r\n        this.dataFilesOut = JSON.parse(data.response);\r\n\r\n      }).catch(err => {\r\n        console.log('err in load', err);\r\n      })\r\n    return this.dataFilesOut;\r\n  }\r\n\r\n  //Upload Audio\r\n  async uploadAudio(audio: string) {\r\n    const options: FileUploadOptions = {\r\n      fileKey: 'audio'\r\n    };\r\n    const fileTransfer2: FileTransferObject = this.fileTransfer.create();\r\n    await fileTransfer2.upload(audio, `${URL}/chat/upload/audio`, options)\r\n      .then(data => {\r\n        this.dataFiles = data.response;\r\n\r\n        this.dataFilesOut = JSON.parse(data.response);\r\n\r\n      }).catch(err => {\r\n        console.log('err in load');\r\n      })\r\n    return this.dataFilesOut;\r\n  }\r\n\r\n\r\n\r\n\r\n  isopenmodal(){\r\n    \r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavController, Platform } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { UsersService } from './users.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CloseappService {\n  \n\n  constructor(\n    private platform : Platform,\n    private router: Router,\n    private navCtrl: NavController,\n    private storage: Storage,\n    private userService : UsersService\n  ) { }\n\n  comproveStateApp(){\n    console.log('== == == PARAMMM == == == == == == ', );\n    this.platform.pause.subscribe(async () => {\n      console.log('PAUSA DETECTADA');\n      //this.router.navigate(['/home']);\n\n      this.storage.get('stateCamera').then((result) => { \n        console.log('..:: : : :',result,': : : : ....');\n        if (result === 0) {\n          \n          this.navCtrl.navigateForward('/home');\n          this.storage.remove('stateCamera')\n      \n        }\n        this.storage.set('stateCamera', 0).then((rs)=> {\n          console.log('Response UPDATE CAMERA');\n        })\n        \n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { responseToken, responsePlan, vouchers, responseV } from '../interfaces/interfaces';\r\nimport { Router } from '@angular/router';\r\nimport { dateNow, ren, result11 } from '../interfaces/renewalInterface';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\n\r\nconst URL = environment.url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  tokensearch = 0;\r\n  timeToExpire: any ;\r\n  dataFilesOut = {};\r\n  dataFiles = {};\r\n  im = '';\r\n  apikey = '4724|hhXG7NUv41OWrDMUPMU8w5fP~179^oXg'\r\n\r\n  constructor( private http: HttpClient,\r\n               private router: Router,\r\n               private fileTransfer: FileTransfer ) { }\r\n\r\n\r\ngetBTCPrice(){\r\n  return this.http.get(`https://blockchain.info/tobtc?currency=EUR&value=625`);\r\n}\r\n\r\n\r\n  saveVoucher(arrVoucher){\r\n    console.log('arreglo del comprobante', arrVoucher);\r\n\r\n    return this.http.post<responseV>(`${ URL }/voucher/create`, arrVoucher);\r\n  }             \r\n               \r\n  // Upload Image\r\n  async uploadimage(img: string){\r\n    console.log(\"image as a service\",img);\r\n    const options: FileUploadOptions = {\r\n      fileKey: 'image'\r\n    };\r\n    const fileTransfer : FileTransferObject = this.fileTransfer.create();\r\n\r\n   await fileTransfer.upload( img,`${URL}/token/upload`, options )\r\n      .then(data =>{\r\n        this.dataFiles = data.response;\r\n        this.dataFilesOut = JSON.parse(data.response);  \r\n      \r\n      }).catch(err => {\r\n        console.log('err in load');\r\n      })\r\n    //return this.dataFilesOut;\r\n    return this.dataFilesOut;\r\n  }  \r\n\r\n\r\n  renewal(ren){\r\n    return this.http.post<ren>(`${ URL }/token/ren`, ren);\r\n  }\r\n\r\n getDateServer(){\r\n   return this.http.get<dateNow>(`${ URL }/token/dateServer`);\r\n }\r\n\r\n  getVerifyToken(tokens){    \r\n   return  this.http.get<responseToken>(`${ URL }/token?tokenid=${ tokens }`);\r\n  }\r\n\r\n  getRemainingDays(idplan){\r\n    const data = idplan;\r\n   // console.log('************************',data);   \r\n   return  this.http.get<responsePlan>(`${ URL }/plan/id?idplan=${idplan}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Storage } from '@ionic/storage';\r\nimport { ResoponseMessages } from '../interfaces/messagesInterfaces';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RespTrunk, ResponsePost, responseCreateTrun } from '../interfaces/trunkInterface';\r\nimport { fromEventPattern } from 'rxjs';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\n\r\nconst URL = environment.url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrunkService {\r\n  toTrunk;\r\n  tr;\r\n  idTrunk;\r\n  arrayMesage = {\r\n    idMessage: '',\r\n    senderId: '',\r\n    receiverId: '',\r\n    body: '',\r\n    image: '',\r\n    audioFile: '', \r\n    type: '',\r\n    secureKey:'', \r\n    secureIv: '',\r\n    isread: '',\r\n    createAt: ''\r\n  }\r\n\r\n  tru = {\r\n    idTrunk: ''\r\n  }\r\n  load: any;\r\n  constructor(private http: HttpClient, \r\n              private storage: Storage,\r\n              private loadingCtrl: LoadingController) { }\r\n\r\n\r\n  createTrunkNew(trunk){\r\n    console.log('====????======', trunk);\r\n    return this.http.post<responseCreateTrun>(`${URL}/trunk/createNew`, trunk);\r\n  }  \r\n\r\n\r\n\r\n  sendTrunk(messageBody, messages) {\r\n    this.toTrunk = messageBody;\r\n    return this.http.post<RespTrunk>(`${URL}/trunk/create`,messageBody).subscribe(res =>{\r\n      console.log('Respuesta de trunk server',res);\r\n      this.tr =  res.trunk;\r\n      this.idTrunk = this.tr._id; \r\n      this.sendMessageTrunk(messages, this.idTrunk);\r\n      this.idTrunk;\r\n    });\r\n    \r\n    \r\n  }\r\n\r\n async  sendMessageTrunk(messageBody, idTrunk) {\r\n    messageBody.map(element => {\r\n      this.arrayMesage = {\r\n        idMessage: idTrunk,\r\n        senderId: element.senderId,\r\n        receiverId: element.receiverId,\r\n        body: element.body,\r\n        image: element.image,\r\n        audioFile: element.audioFile, \r\n        type: element.type,\r\n        secureKey: element.secureKey, \r\n        secureIv: element.secureIv,\r\n        isread: element.isread,\r\n        createAt: element.createAt\r\n     }\r\n    // console.log('GGGGGGGGGGGGGGG', this.arrayMesage);\r\n     //this.ServiceMessageTrunk(this.arrayMesage);     \r\n     \r\n     this.http.post(`${URL}/trunk/create/messages`,this.arrayMesage).subscribe(res =>{\r\n      console.log(res);      \r\n     })\r\n   \r\n    })\r\n  }\r\n\r\n  ServiceMessageTrunk(ar){\r\n    this.http.post(`${URL}/trunk/create/messages`,ar).subscribe(res =>{\r\n      console.log(res);\r\n    })\r\n  }\r\n\r\n  getTrunksbyUser(idUser){\r\n    return this.http.get<ResponsePost>(`${URL}/trunk/id?idUser=${idUser}`);\r\n  }\r\n\r\n  getTrunksById(idTrunk){\r\n    return this.http.get<ResponsePost>(`${URL}/trunk/idTrunk/?idTrunk=${idTrunk}`);\r\n  }\r\n\r\n  deleteTrunk(idTrunk){\r\n    this.tru={\r\n      idTrunk: idTrunk\r\n    }\r\n    return this.http.post(`${URL}/trunks/delete`, this.tru);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UiServiceService {\r\n\r\n  constructor(private alertController: AlertController) { }\r\n\r\n  async infoAlert( message: string) {\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}