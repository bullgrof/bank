{"version":3,"sources":["./src/app/pages/new-password-trunk/new-password-trunk.page.html","./src/app/pages/new-password-trunk/new-password-trunk.module.ts","./src/app/pages/new-password-trunk/new-password-trunk.page.scss","./src/app/pages/new-password-trunk/new-password-trunk.page.ts"],"names":[],"mappings":"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","file":"pages-new-password-trunk-new-password-trunk-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/safe\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Nueva contraseña Baúl</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card >\\r\\n    <img src=\\\"../../../assets/safe2.png\\\" class=\\\"ssl\\\">      \\r\\n    <p class=\\\"success\\\"></p>\\r\\n  \\r\\n    <ion-card-content>\\r\\n      <form (ngSubmit)=\\\"changePassword(fchangep)\\\" #fchangep=\\\"ngForm\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>    \\r\\n            <ion-list>    \\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"password\\\"\\r\\n                           type=\\\"text\\\" \\r\\n                           required\\r\\n                           [(ngModel)]=\\\"password.pass\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           placeholder=\\\"Contraseña\\\" \\r\\n                           (input)=\\\"inputValidator($event)\\\"></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"repassword\\\"\\r\\n                           type=\\\"text\\\"                            \\r\\n                           [(ngModel)]=\\\"password.repass\\\"\\r\\n                           (onChage)=\\\"verifyPasswords(password.repass)\\\"\\r\\n                           placeholder=\\\"Confirmar contraseña\\\" \\r\\n                           min=\\\"5\\\"\\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           required></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-button type=\\\"submit\\\" \\r\\n                        color=\\\"warning\\\" \\r\\n                        shape=\\\"round\\\" \\r\\n                        expand=\\\"block\\\"\\r\\n                        [disabled]=\\\"fchangep.invalid\\\">\\r\\n              Cambiar contraseña\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n      </form>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewPasswordTrunkPage } from './new-password-trunk.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewPasswordTrunkPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NewPasswordTrunkPage]\r\n})\r\nexport class NewPasswordTrunkPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL25ldy1wYXNzd29yZC10cnVuay9uZXctcGFzc3dvcmQtdHJ1bmsucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-new-password-trunk',\r\n  templateUrl: './new-password-trunk.page.html',\r\n  styleUrls: ['./new-password-trunk.page.scss'],\r\n})\r\nexport class NewPasswordTrunkPage implements OnInit {\r\n  \r\n  password={\r\n    pass :'',\r\n    repass: '',\r\n    user: ''\r\n  }\r\n  rs;\r\n\r\n  constructor( private storage: Storage,\r\n    private userService: UsersService,\r\n    private toastCtrl : ToastController,\r\n    private alertController: AlertController,\r\n    private router: Router,) { }\r\n\r\n  ngOnInit() {\r\n    this.storage.get('username').then((result) => {\r\n      this.userService.getSekretId(result).subscribe(response => {\r\n        console.log('=================',response.user[0].spt)\r\n        if (!response.user[0].spt) {\r\n          this.password.user = response.user[0]._id\r\n          console.log('Puede Actualizar la contraseña');\r\n        } else {\r\n          this.presentAlert();\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  changePassword() {\r\n    console.log('password 1', this.password.pass, 'password 2', this.password.repass);\r\n    if (this.password.pass.length < 5) {\r\n      this.presentToast('La contraseña debe tener mínimo 5 caracteres');\r\n    } else {\r\n      if (this.password.pass !== this.password.repass) {\r\n        this.presentToast('las contraseñas ingresadas no coinciden');\r\n      } else {\r\n        this.userService.updateSecondPassword(this.password).subscribe(rs => {\r\n          this.rs = rs;\r\n          if (this.rs.ok === true) {\r\n            this.router.navigate(['/profile']);\r\n            this.presentToast('Se ha asignado la contraseña de baúl con éxito');\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 3500,\r\n      position: 'middle'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async presentAlert() {  \r\n      const alert = await this.alertController.create({\r\n        cssClass: 'mdal',\r\n        header: 'Atención',\r\n        message: `Actualmente ya tiene una contraseña asignada, vaya a cambiar contraseña`,\r\n        subHeader: `¡ Importante !`,             \r\n        buttons: [       \r\n          {\r\n            text: 'Aceptar',\r\n            role: 'cancel',\r\n            cssClass: 'secondary',\r\n            handler: (alertData) => {\r\n              console.log('Confirm Cancel');\r\n              this.router.navigate(['/safe']);\r\n            }\r\n          }\r\n        ]\r\n      });\r\n  \r\n      await alert.present();\r\n  }\r\n\r\n  inputValidator(event: any) {\r\n    console.log('paso al metod de validacion');\r\n   console.log(event.target.value);\r\n   const pattern = /^[a-zA-Z0-9]*$/;   \r\n   //let inputChar = String.fromCharCode(event.charCode)\r\n   if (!pattern.test(event.target.value)) {\r\n     event.target.value = event.target.value.replace(/[^a-zA-Z0-9]/g, \"\");\r\n     // invalid character, prevent input\r\n\r\n   }\r\n }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}