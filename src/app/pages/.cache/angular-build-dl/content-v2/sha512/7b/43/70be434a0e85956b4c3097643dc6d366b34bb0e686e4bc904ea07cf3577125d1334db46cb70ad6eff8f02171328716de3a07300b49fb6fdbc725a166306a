{"version":3,"sources":["src/app/pages/groups/groups.page.html","src/app/pages/groups/groups.module.ts","src/app/pages/groups/groups.page.scss","src/app/pages/groups/groups.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/contacts\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{'GROUPS.title' | translate}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-buttons>\\r\\n    <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"primary\\\">\\r\\n        <ion-button [routerLink]=\\\"['/contacts']\\\">\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"person\\\" color=\\\"warning\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n      </ion-buttons>\\r\\n      <ion-toolbar>\\r\\n        <ion-searchbar (ionChange)=\\\"filterSearch($event)\\\" animated [debounce]=\\\"1000\\\"\\r\\n          placeholder=\\\"{{'CONTACTS.searchBar' | translate}}\\\"></ion-searchbar>\\r\\n      </ion-toolbar>\\r\\n    </ion-toolbar>\\r\\n  </ion-buttons>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"warning\\\">\\r\\n      <ion-icon name=\\\"add\\\" (click)=\\\"createGroup()\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n\\r\\n  <ion-list>\\r\\n\\r\\n    <ion-item *ngFor=\\\"let group of groupList\\\" [routerLink]=\\\"['/chat-group', group.msgId ]\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"../../../assets/avatars/group.png\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>{{ group.namegroup }} </ion-label>\\r\\n      <ion-icon name=\\\"chatbox-ellipses\\\" color=\\\"warning\\\" *ngIf=\\\"group.badge === '1'\\\" slot=\\\"end\\\"></ion-icon>\\r\\n      <p *ngIf=\\\"group.badge === '1'\\\">{{'GROUPS.unreadmessages' | translate}}</p>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GroupsPage } from './groups.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GroupsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule\r\n  ],\r\n  declarations: [GroupsPage]\r\n})\r\nexport class GroupsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dyb3Vwcy9ncm91cHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Platform } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage'\r\n\r\nimport { UsersService } from '../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-groups',\r\n  templateUrl: './groups.page.html',\r\n  styleUrls: ['./groups.page.scss'],\r\n})\r\nexport class GroupsPage implements OnInit {\r\n\r\n  userstorage;\r\n  groupList;\r\n\r\n  constructor(private platform: Platform,\r\n              private router: Router,\r\n              private storage: Storage,\r\n              private userService: UsersService) {\r\n                platform.ready().then(() => {\r\n                  this.platform.pause.subscribe(() => {\r\n                   // this.logout();\r\n                  });\r\n                  this.platform.resume.subscribe(() => {\r\n                    console.log('[INFO] App resumed');                    \r\n                    this.storage.get('stateCamera').then((result) => {\r\n                      console.log('[INFO] STATE CAMERA : ', result);\r\n                      if (result === 1) {\r\n                        console.log('[INFO]: Se esta usando la camara NO CERRAR');\r\n                        this.userService.saveStateCamera(0);\r\n                      } else {\r\n                        console.log('[INFO]: Mandar al Login');\r\n                        this.logout();\r\n                      }\r\n                    });\r\n\r\n                  });\r\n                })\r\n               }\r\n\r\n  ngOnInit() {\r\n    this.getgroups();\r\n    this.doRefresh('ionRefresh');\r\n    console.log('SE EJECUTA EL NGONINIT DE LOS GRUPOS');\r\n  }\r\n\r\n\r\n  getgroups(){\r\n    this.storage.get('username').then((result) => {\r\n      this.userstorage = result;\r\n      //console.log('USUARIOOOOOO',result)\r\n      this.userService.getGroupList(result).subscribe(response => {\r\n        console.log('[XXXXXXXXXXXXXXXXXXXXXX]', response)\r\n        this.groupList = response.us;\r\n        console.log('LISTA de GRUPOS', this.groupList);\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    console.log(\"Logging out user\");\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  createGroup(){\r\n    this.router.navigate(['/create-group']);  \r\n  }\r\n\r\n  doRefresh( event ){\r\n    console.log('[EVENT *******]', event);\r\n    setTimeout(() => {\r\n      this.getgroups();\r\n      this.storage.get('username').then((result) => {\r\n        this.userstorage = result;\r\n        console.log('USUARIOOOOOO',result)\r\n        this.userService.getGroupList(result).subscribe(response => {\r\n        \r\n          this.groupList = response.us;\r\n          console.log('LISTA de GRUPOS', this.groupList);\r\n        })\r\n  \r\n      })\r\n      event.target.complete();\r\n    }, 1000);\r\n    \r\n\r\n  }\r\n\r\n\r\n  ionViewWillEnter(){\r\n    this.doRefresh('ionRefresh');\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-groups-groups-module-es5.js"}