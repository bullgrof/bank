{"version":3,"sources":["src/app/pages/admingroups/admingroups.page.html","src/app/pages/admingroups/admingroups.module.ts","src/app/pages/admingroups/admingroups.page.scss","src/app/pages/admingroups/admingroups.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>admingroups</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-subtitle>Participantes</ion-card-subtitle>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let member of members; let i = index\\\">\\n          <ion-label> {{ member.name }} </ion-label>\\n          <ion-icon name=\\\"star\\\" slot=\\\"start\\\" *ngIf=\\\"member.isadmin === '1'\\\" class=\\\"star\\\"></ion-icon>\\n          <ion-icon name=\\\"person-remove\\\" \\n                    slot=\\\"end\\\" \\n                    *ngIf=\\\"member.isadmin !== '1'\\\" \\n                    class=\\\"remove\\\"\\n                    (click)=\\\"removeFromGroup(member.id, member.idMember)\\\"></ion-icon>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-subtitle>Administraci√≥n</ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button expand=\\\"block\\\" color=\\\"danger\\\" (click)=\\\"presentAlertConfirm(groupId)\\\">Eliminar Grupo</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdmingroupsPage } from './admingroups.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdmingroupsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdmingroupsPage]\n})\nexport class AdmingroupsPageModule {}\n","export default \".star {\\n  color: gold;\\n}\\n\\n.remove {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWRtaW5ncm91cHMvQzpcXFVzZXJzXFxOZW1lc3Npc1xcRGVza3RvcFxccHJvamVjdHNcXGp1bmlvXFxmc3Uvc3JjXFxhcHBcXHBhZ2VzXFxhZG1pbmdyb3Vwc1xcYWRtaW5ncm91cHMucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9hZG1pbmdyb3Vwcy9hZG1pbmdyb3Vwcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FERUE7RUFDSSxVQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hZG1pbmdyb3Vwcy9hZG1pbmdyb3Vwcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RhcntcclxuICAgIGNvbG9yOiBnb2xkO1xyXG59XHJcblxyXG4ucmVtb3Zle1xyXG4gICAgY29sb3I6IHJlZDtcclxufSIsIi5zdGFyIHtcbiAgY29sb3I6IGdvbGQ7XG59XG5cbi5yZW1vdmUge1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ChildActivationStart, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\nimport { ChatGroupService } from '../../services/chat-group.service';\nimport { UsersService } from '../../services/users.service';\n\n\n@Component({\n  selector: 'app-admingroups',\n  templateUrl: './admingroups.page.html',\n  styleUrls: ['./admingroups.page.scss'],\n})\nexport class AdmingroupsPage implements OnInit {\n  groupId = '';\n  rsGroup;\n  rsUser;\n  userName;\n  members = [];\n  membersWithoutUsername;\n  arrDelMember = {\n    groupId : \"\",\n    userId : \"\",\n    idUser : \"\"\n}\n\ntoDeleteGroup = {\n  idgroup : '',\n  members : []\n}\n\narrDelGroupUserC= {\n\tidUser: \"\", \n\tmsgId: \"\"\n}\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private groupService:  ChatGroupService,\n    private userService: UsersService,\n    public alertController: AlertController,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.groupId = this.activatedRoute.snapshot.paramMap.get('idgroup');\n    this.getParticipants();\n    \n  }\n\n  getParticipants(){\n    this.groupService.getGroupInfo(this.groupId).subscribe(responseGroupInfo => {\n      \n      this.rsGroup = responseGroupInfo.data[0];\n      this.membersWithoutUsername = this.rsGroup.participants;\n      this.membersWithoutUsername.map(elem => {\n        this.userService.getusernameById(elem.receiverId).subscribe(responseNameUser => {\n          this.rsUser =  responseNameUser.user[0];\n          this.userName = this.rsUser.username;\n          console.log('USERNAME => ', this.userName);\n          this.members.push({\n            isadmin : elem.isadmin,\n            idMember : elem.receiverId,\n            name : this.userName,\n            id: elem._id\n          })\n        });\n      })\n      console.log('Pariticpantes del grupo', this.members );\n    })\n  }\n\n  removeFromGroup(idMember, idu){\n    this.arrDelMember = {\n          groupId : this.groupId,\n          userId : idMember,\n          idUser : idu\n    }\n    this.groupService.deleteMemberOfGroup(this.arrDelMember).subscribe(responseDelMem => {\n      console.log(responseDelMem);\n      if (responseDelMem.ok === true )  {\n        this.arrDelGroupUserC = {\n          idUser: idu, \n\t        msgId: this.groupId\n        }\n        console.log('ARREGLO DEL USUARIO QUE SE VA A ELIMINAR', this.arrDelGroupUserC);\n       this.groupService.deleteGroupOfUser(this.arrDelGroupUserC).subscribe(responseDelUsGroup => {\n         console.log(responseDelUsGroup);\n       })\n      }\n    })\n  }\n\n  deleteGroup(groupId) {\n    console.log(groupId);\n    console.log('+ + + Miembros del grupo + + +', this.members );\n    this.toDeleteGroup = {\n      idgroup : groupId,\n      members : this.members\n    }\n    this.groupService.deleteGroup(this.toDeleteGroup).subscribe(responseDeleteG => {\n      console.log('======> Response DELETE GROUP => ', responseDeleteG);\n      if (responseDeleteG.ok === true ) {\n        this.router.navigate(['/groups']);\n      }\n    })\n  }\n\n \n  async presentAlertConfirm(idGroup) {\n    const alert = await this.alertController.create({\n      header: 'Atenci√≥n!',\n      message: 'Esta <strong>Seguro </strong>que desea eliminar el Grupo?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Si',\n          handler: () => {\n            console.log('Confirm Okay');\n            this.deleteGroup(idGroup);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-admingroups-admingroups-module-es5.js"}