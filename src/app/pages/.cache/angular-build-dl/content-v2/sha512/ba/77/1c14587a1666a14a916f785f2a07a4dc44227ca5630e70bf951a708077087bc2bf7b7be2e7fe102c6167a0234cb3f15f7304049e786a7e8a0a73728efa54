{"version":3,"sources":["src/app/pages/new-password-trunk/new-password-trunk.page.html","src/app/pages/new-password-trunk/new-password-trunk.module.ts","src/app/pages/new-password-trunk/new-password-trunk.page.scss","src/app/pages/new-password-trunk/new-password-trunk.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+qEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,qDAAA,CAAA,sBAAA;AAFb,KADqB,CAAvB;;AAgBA,QAAa,0BAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,0BAA0B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CATtC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CAAC,qDAAA,CAAA,sBAAA,CAAD;AAPN,KAAT,CASsC,CAAA,EAA1B,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACzBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6NAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,oBAAb;AASE,oCAAqB,OAArB,EACU,WADV,EAEU,SAFV,EAGU,eAHV,EAIU,MAJV,EAIwB;AAAA;;AAJH,aAAA,OAAA,GAAA,OAAA;AACX,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAXV,aAAA,QAAA,GAAS;AACP,UAAA,IAAI,EAAE,EADC;AAEP,UAAA,MAAM,EAAE,EAFD;AAGP,UAAA,IAAI,EAAE;AAHC,SAAT;AAW8B;;AAbhC;AAAA;AAAA,mCAeU;AAAA;;AACN,eAAK,OAAL,CAAa,GAAb,CAAiB,UAAjB,EAA6B,IAA7B,CAAkC,UAAC,MAAD,EAAW;AAC3C,YAAA,KAAI,CAAC,WAAL,CAAiB,WAAjB,CAA6B,MAA7B,EAAqC,SAArC,CAA+C,UAAA,QAAQ,EAAG;AACxD,cAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ,EAAgC,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,GAAjD;;AACA,kBAAI,CAAC,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,GAAtB,EAA2B;AACzB,gBAAA,KAAI,CAAC,QAAL,CAAc,IAAd,GAAqB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,GAAtC;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,gCAAZ;AACD,eAHD,MAGO;AACL,gBAAA,KAAI,CAAC,YAAL;AACD;AACF,aARD;AASD,WAVD;AAWD;AA3BH;AAAA;AAAA,yCA6BgB;AAAA;;AACZ,UAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,KAAK,QAAL,CAAc,IAAxC,EAA8C,YAA9C,EAA4D,KAAK,QAAL,CAAc,MAA1E;;AACA,cAAI,KAAK,QAAL,CAAc,IAAd,CAAmB,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,iBAAK,YAAL,CAAkB,8CAAlB;AACD,WAFD,MAEO;AACL,gBAAI,KAAK,QAAL,CAAc,IAAd,KAAuB,KAAK,QAAL,CAAc,MAAzC,EAAiD;AAC/C,mBAAK,YAAL,CAAkB,yCAAlB;AACD,aAFD,MAEO;AACL,mBAAK,WAAL,CAAiB,oBAAjB,CAAsC,KAAK,QAA3C,EAAqD,SAArD,CAA+D,UAAA,EAAE,EAAG;AAClE,gBAAA,MAAI,CAAC,EAAL,GAAU,EAAV;;AACA,oBAAI,MAAI,CAAC,EAAL,CAAQ,EAAR,KAAe,IAAnB,EAAyB;AACvB,kBAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,UAAD,CAArB;;AACA,kBAAA,MAAI,CAAC,YAAL,CAAkB,gDAAlB;AACD;AACF,eAND;AAOD;AACF;AACF;AA9CH;AAAA;AAAA,qCAgDqB,OAhDrB,EAgDoC;;;;;;;;AAClB,2BAAM,KAAK,SAAL,CAAe,MAAf,CAAsB;AACxC,sBAAA,OAAO,EAAP,OADwC;AAExC,sBAAA,QAAQ,EAAE,IAF8B;AAGxC,sBAAA,QAAQ,EAAE;AAH8B,qBAAtB,CAAN;;;AAAR,oBAAA,K;AAKN,oBAAA,KAAK,CAAC,OAAN;;;;;;;;;AACD;AAvDH;AAAA;AAAA,uCAyDoB;;;;;;;;;;AACA,2BAAM,KAAK,eAAL,CAAqB,MAArB,CAA4B;AAC9C,sBAAA,QAAQ,EAAE,MADoC;AAE9C,sBAAA,MAAM,EAAE,UAFsC;AAG9C,sBAAA,OAAO,iFAHuC;AAI9C,sBAAA,SAAS,qBAJqC;AAK9C,sBAAA,OAAO,EAAE,CACP;AACE,wBAAA,IAAI,EAAE,SADR;AAEE,wBAAA,IAAI,EAAE,QAFR;AAGE,wBAAA,QAAQ,EAAE,WAHZ;AAIE,wBAAA,OAAO,EAAE,iBAAC,SAAD,EAAc;AACrB,0BAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ;;AACA,0BAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AAPH,uBADO;AALqC,qBAA5B,CAAN;;;AAAR,oBAAA,K;;AAkBN,2BAAM,KAAK,CAAC,OAAN,EAAN;;;;;;;;;AACH;AA7EH;AAAA;AAAA,uCA+EiB,KA/EjB,EA+E2B;AACvB,UAAA,OAAO,CAAC,GAAR,CAAY,6BAAZ;AACD,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,KAAzB;AACA,cAAM,OAAO,GAAG,gBAAhB,CAHwB,CAIxB;;AACA,cAAI,CAAC,OAAO,CAAC,IAAR,CAAa,KAAK,CAAC,MAAN,CAAa,KAA1B,CAAL,EAAuC;AACrC,YAAA,KAAK,CAAC,MAAN,CAAa,KAAb,GAAqB,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,OAAnB,CAA2B,eAA3B,EAA4C,EAA5C,CAArB,CADqC,CAErC;AAED;AACF;AAzFF;;AAAA;AAAA,OAAA;;;;cASgC,2CAAA,CAAA,SAAA;;cACP,oDAAA,CAAA,cAAA;;cACD,2CAAA,CAAA,iBAAA;;cACK,2CAAA,CAAA,iBAAA;;cACT,4CAAA,CAAA,QAAA;;;;AAbP,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,wBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,6GAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKgC,E,uEASD,2CAAA,CAAA,SAAA,C,EACP,oDAAA,CAAA,cAAA,C,EACD,2CAAA,CAAA,iBAAA,C,EACK,2CAAA,CAAA,iBAAA,C,EACT,4CAAA,CAAA,QAAA,C,EAba,CAAA,EAApB,oBAAoB,CAApB","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/safe\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Nueva contraseña Baúl</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card >\\r\\n    <img src=\\\"../../../assets/safe2.png\\\" class=\\\"ssl\\\">      \\r\\n    <p class=\\\"success\\\"></p>\\r\\n  \\r\\n    <ion-card-content>\\r\\n      <form (ngSubmit)=\\\"changePassword(fchangep)\\\" #fchangep=\\\"ngForm\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>    \\r\\n            <ion-list>    \\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"password\\\"\\r\\n                           type=\\\"text\\\" \\r\\n                           required\\r\\n                           [(ngModel)]=\\\"password.pass\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           placeholder=\\\"Contraseña\\\" \\r\\n                           (input)=\\\"inputValidator($event)\\\"></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"repassword\\\"\\r\\n                           type=\\\"text\\\"                            \\r\\n                           [(ngModel)]=\\\"password.repass\\\"\\r\\n                           (onChage)=\\\"verifyPasswords(password.repass)\\\"\\r\\n                           placeholder=\\\"Confirmar contraseña\\\" \\r\\n                           min=\\\"5\\\"\\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           required></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-button type=\\\"submit\\\" \\r\\n                        color=\\\"warning\\\" \\r\\n                        shape=\\\"round\\\" \\r\\n                        expand=\\\"block\\\"\\r\\n                        [disabled]=\\\"fchangep.invalid\\\">\\r\\n              Cambiar contraseña\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n      </form>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewPasswordTrunkPage } from './new-password-trunk.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewPasswordTrunkPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NewPasswordTrunkPage]\r\n})\r\nexport class NewPasswordTrunkPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL25ldy1wYXNzd29yZC10cnVuay9uZXctcGFzc3dvcmQtdHJ1bmsucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-new-password-trunk',\r\n  templateUrl: './new-password-trunk.page.html',\r\n  styleUrls: ['./new-password-trunk.page.scss'],\r\n})\r\nexport class NewPasswordTrunkPage implements OnInit {\r\n  \r\n  password={\r\n    pass :'',\r\n    repass: '',\r\n    user: ''\r\n  }\r\n  rs;\r\n\r\n  constructor( private storage: Storage,\r\n    private userService: UsersService,\r\n    private toastCtrl : ToastController,\r\n    private alertController: AlertController,\r\n    private router: Router,) { }\r\n\r\n  ngOnInit() {\r\n    this.storage.get('username').then((result) => {\r\n      this.userService.getSekretId(result).subscribe(response => {\r\n        console.log('=================',response.user[0].spt)\r\n        if (!response.user[0].spt) {\r\n          this.password.user = response.user[0]._id\r\n          console.log('Puede Actualizar la contraseña');\r\n        } else {\r\n          this.presentAlert();\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  changePassword() {\r\n    console.log('password 1', this.password.pass, 'password 2', this.password.repass);\r\n    if (this.password.pass.length < 5) {\r\n      this.presentToast('La contraseña debe tener mínimo 5 caracteres');\r\n    } else {\r\n      if (this.password.pass !== this.password.repass) {\r\n        this.presentToast('las contraseñas ingresadas no coinciden');\r\n      } else {\r\n        this.userService.updateSecondPassword(this.password).subscribe(rs => {\r\n          this.rs = rs;\r\n          if (this.rs.ok === true) {\r\n            this.router.navigate(['/profile']);\r\n            this.presentToast('Se ha asignado la contraseña de baúl con éxito');\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 3500,\r\n      position: 'middle'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async presentAlert() {  \r\n      const alert = await this.alertController.create({\r\n        cssClass: 'mdal',\r\n        header: 'Atención',\r\n        message: `Actualmente ya tiene una contraseña asignada, vaya a cambiar contraseña`,\r\n        subHeader: `¡ Importante !`,             \r\n        buttons: [       \r\n          {\r\n            text: 'Aceptar',\r\n            role: 'cancel',\r\n            cssClass: 'secondary',\r\n            handler: (alertData) => {\r\n              console.log('Confirm Cancel');\r\n              this.router.navigate(['/safe']);\r\n            }\r\n          }\r\n        ]\r\n      });\r\n  \r\n      await alert.present();\r\n  }\r\n\r\n  inputValidator(event: any) {\r\n    console.log('paso al metod de validacion');\r\n   console.log(event.target.value);\r\n   const pattern = /^[a-zA-Z0-9]*$/;   \r\n   //let inputChar = String.fromCharCode(event.charCode)\r\n   if (!pattern.test(event.target.value)) {\r\n     event.target.value = event.target.value.replace(/[^a-zA-Z0-9]/g, \"\");\r\n     // invalid character, prevent input\r\n\r\n   }\r\n }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-new-password-trunk-new-password-trunk-module-es5.js"}