{"version":3,"sources":["src/app/pages/create-group/create-group.page.html","src/app/pages/create-group/create-group.module.ts","src/app/pages/create-group/create-group.page.scss","src/app/pages/create-group/create-group.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/contacts\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{'CREATEGROUPS.title' | translate}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-item>\\r\\n    \\r\\n    <ion-input placeholder=\\\"{{'CREATEGROUPS.namegroup' | translate}}\\\" [(ngModel)]=\\\"group.name\\\"  required></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let contact of contacts\\\" (click)=\\\"onClick( contact )\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"../../../assets/avatars/defaultavatar.png\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>{{ contact.alias }} ({{ contact.sidcontact }})</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" color=\\\"warning\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  \\r\\n  \\r\\n  \\r\\n  <!--ion-list>\\r\\n\\r\\n    <ion-item-sliding *ngFor=\\\"let contact of contacts\\\" >\\r\\n      <ion-item class=\\\"itemheight\\\" [routerLink]=\\\"['/chat', contact.sidcontact]\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"../../../assets/avatars/defaultavatar.png\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-label class=\\\"sc-ion-label-ios-h sc-ion-label-ios-s ios hydrated\\\">\\r\\n          <h3 class=\\\"nameUser\\\">{{ contact.alias }} </h3>\\r\\n          <p *ngIf=\\\"contact.badge === 1\\\">Mensajes sin leer</p>\\r\\n         \\r\\n        </ion-label>\\r\\n        \\r\\n        <ion-icon name=\\\"chatbox-ellipses\\\" color=\\\"warning\\\" *ngIf=\\\"contact.badge === 1\\\"></ion-icon>\\r\\n        <ion-icon slot=\\\"end\\\" name=\\\"chevron-back-outline\\\" class=\\\"backArrow\\\"></ion-icon>\\r\\n      \\r\\n      </ion-item>\\r\\n      \\r\\n      \\r\\n     \\r\\n    </ion-item-sliding>\\r\\n  </ion-list-->\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-button (click)=\\\"createGroup(usersParticipants)\\\" expand=\\\"block\\\"  color=\\\"warning\\\"> <ion-icon name=\\\"add-outline\\\"></ion-icon> {{'CREATEGROUPS.title' | translate}}</ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CreateGroupPage } from './create-group.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CreateGroupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule\r\n  ],\r\n  declarations: [CreateGroupPage]\r\n})\r\nexport class CreateGroupPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NyZWF0ZS1ncm91cC9jcmVhdGUtZ3JvdXAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { ContactsService } from 'src/app/services/contacts.service';\r\nimport { contactsCard } from '../../interfaces/contactsInterfaces';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ChatGroupService } from '../../services/chat-group.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-group',\r\n  templateUrl: './create-group.page.html',\r\n  styleUrls: ['./create-group.page.scss'],\r\n})\r\nexport class CreateGroupPage implements OnInit {\r\n  args = null;\r\n  usernameStorage = '';\r\n  sekretidrec='';\r\n  sid;\r\n  contacts: contactsCard[] = [];\r\n  participants = [];\r\n  usersParticipants = [];\r\n  idUser;\r\n  arrUser;\r\n  myUser;\r\n  group = {\r\n    name: ''\r\n  }\r\n\r\n  constructor(private storage: Storage,\r\n    private userService: UsersService,\r\n    private contactsService: ContactsService,\r\n    private toastCtrl: ToastController,\r\n    private groupService : ChatGroupService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getContacts();\r\n  }\r\n\r\n  getContacts() {\r\n    this.args = this.storage.get('username').then((result) => {\r\n      this.usernameStorage = result;\r\n\r\n      this.userService.getSekretId(this.usernameStorage).subscribe(response => {\r\n        this.sekretidrec = response.user[0].sekretid;\r\n        this.sid = response.user[0].sekretid;\r\n        this.myUser = response.user[0]._id;\r\n        this.contactsService.getContacts(this.sekretidrec).subscribe(responseContacts => {\r\n          console.log('Contactos', responseContacts);\r\n          this.contacts = responseContacts.contacts;\r\n         \r\n          console.log('ARREGLO DE CONTACTOS', this.contacts);\r\n          //this.createRomms(this.contacts);             \r\n        });\r\n\r\n      }); //End Token Service\r\n    }); //End user Service\r\n\r\n  }\r\n\r\n  onClick(check){\r\n    let arr = check\r\n   // console.log('[INFO] objeto que ingresa',arr.sidcontact );\r\n    this.userService.getUserNameBySekretId(arr.sidcontact).subscribe(resp =>{\r\n      console.log('[RESPONSE]: respuesta del sevicio de usuario', resp);\r\n      this.arrUser = resp.user[0];\r\n      this.idUser = this.arrUser._id;\r\n      \r\n      this.addParticipant(this.idUser);\r\n    })\r\n  }\r\n\r\n  addParticipant(idUser){\r\n    let alpha;\r\n    \r\n    let betha = {\r\n      receiverId: idUser,\r\n      isadmin : '0'\r\n    };\r\n\r\n    alpha = this.participants.indexOf(idUser);\r\n   // console.log('[INFO]: resultado del FIND', alpha);\r\n    if (alpha === -1 ) {\r\n      \r\n\r\n      this.participants.push(idUser);\r\n      this.usersParticipants.push(betha);\r\n   // console.log('[INFO]: arreglo de usuarios', this.participants);\r\n   // console.log('[INFO]: arreglo de usuariosparticipantes', this.usersParticipants);\r\n    }else{\r\n      let i = this.participants.indexOf( idUser );\r\n      let b = this.usersParticipants.indexOf(user => user.receiverId === idUser);\r\n      this.usersParticipants.splice( b, 1);\r\n      console.log('variable B: ', b);\r\n      this.participants.splice( i, 1 );\r\n     // console.log('[INFO]: arreglo de usuarios', this.participants);\r\n     // console.log('[INFO]: arreglo de usuariosparticipantes', this.usersParticipants);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  createGroup(users) {\r\n    console.log('groupName', this.group.name);\r\n    let ev = users.length;\r\n    if (ev < 1) {\r\n      this.showToast('El grupo debe tener mínimo 2 participantes');\r\n    } else {  \r\n      if (this.group.name === '') {\r\n        this.showToast('El grupo debe tener un nombre')\r\n      } else {\r\n        let bet = {\r\n          receiverId: this.myUser,\r\n          isadmin: '1'\r\n        }\r\n        this.usersParticipants.push(bet);\r\n        let grp = {\r\n           groupname : this.group.name,\r\n           participants :  this.usersParticipants \r\n        }\r\n        this.groupService.postCreateGroup(grp).subscribe(response => {\r\n          console.log('[INFO] Response post Group', response.ok )\r\n          if (response.ok === true) {\r\n            this.showToast('El grupo se ha creado con éxito');\r\n           // this.router.navigate(['/groups'] );      \r\n\r\n            this.router.navigate(['/groups']);\r\n              \r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async showToast(msg) {\r\n    let toast = await this.toastCtrl.create({\r\n      message: msg,\r\n      position: 'middle',\r\n      duration: 3000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n \r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-create-group-create-group-module-es5.js"}