{"version":3,"sources":["./src/app/pages/password-trunk/password-trunk.page.html","./src/app/pages/password-trunk/password-trunk.module.ts","./src/app/pages/password-trunk/password-trunk.page.scss","./src/app/pages/password-trunk/password-trunk.page.ts"],"names":[],"mappings":"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","file":"pages-password-trunk-password-trunk-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/contacts\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title> Cambiar contraseña</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-card >\\r\\n    <img src=\\\"../../../assets/safe2.png\\\" class=\\\"ssl\\\">      \\r\\n    <p class=\\\"success\\\"></p>  \\r\\n    <ion-card-content>\\r\\n      <form (ngSubmit)=\\\"changePassword(fchangep)\\\" #fchangep=\\\"ngForm\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>    \\r\\n            <ion-list>    \\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"password\\\"\\r\\n                           type=\\\"text\\\" \\r\\n                           required\\r\\n                           [(ngModel)]=\\\"oldPassword\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           placeholder=\\\"Contraseña actual\\\" ></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"password\\\"\\r\\n                           type=\\\"text\\\" \\r\\n                           required\\r\\n                           [(ngModel)]=\\\"password.pass\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           placeholder=\\\"Contraseña nueva\\\" ></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"repassword\\\"\\r\\n                           type=\\\"text\\\"                            \\r\\n                           [(ngModel)]=\\\"password.repass\\\"\\r\\n                           (onChage)=\\\"verifyPasswords(password.repass)\\\"\\r\\n                           placeholder=\\\"Repetir contraseña\\\" \\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           required></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-button type=\\\"submit\\\" \\r\\n                        color=\\\"warning\\\" \\r\\n                        shape=\\\"round\\\" \\r\\n                        expand=\\\"block\\\"\\r\\n                        [disabled]=\\\"fchangep.invalid\\\">\\r\\n              Cambiar contraseña\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n      </form>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  \\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PasswordTrunkPage } from './password-trunk.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PasswordTrunkPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PasswordTrunkPage]\r\n})\r\nexport class PasswordTrunkPageModule {}\r\n","export default \".ssl {\\n  width: 40%;\\n  height: 100%;\\n  margin-left: 32%;\\n  margin-top: 12px;\\n}\\n\\n.success {\\n  color: #000000;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGFzc3dvcmQtdHJ1bmsvQzpcXFVzZXJzXFxOZW1lc3Npc1xcRGVza3RvcFxcZHZcXEZTVSBkZXYvc3JjXFxhcHBcXHBhZ2VzXFxwYXNzd29yZC10cnVua1xccGFzc3dvcmQtdHJ1bmsucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9wYXNzd29yZC10cnVuay9wYXNzd29yZC10cnVuay5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGFzc3dvcmQtdHJ1bmsvcGFzc3dvcmQtdHJ1bmsucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNzbHtcclxuICAgIHdpZHRoOiA0MCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXJnaW4tbGVmdDogMzIlO1xyXG4gICAgbWFyZ2luLXRvcDogMTJweDtcclxufVxyXG5cclxuLnN1Y2Nlc3N7XHJcbiAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbn1cclxuIiwiLnNzbCB7XG4gIHdpZHRoOiA0MCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IDMyJTtcbiAgbWFyZ2luLXRvcDogMTJweDtcbn1cblxuLnN1Y2Nlc3Mge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-password-trunk',\r\n  templateUrl: './password-trunk.page.html',\r\n  styleUrls: ['./password-trunk.page.scss'],\r\n})\r\nexport class PasswordTrunkPage implements OnInit {\r\n\r\n  oldPassword = '';\r\n\r\n  password={\r\n    pass :'',\r\n    repass: '',\r\n    user: ''\r\n  }\r\n  usernameStorage;\r\n  sidUser;\r\n  sp;\r\n  rs;\r\n\r\n  constructor( private storage: Storage,\r\n    private userService: UsersService,\r\n    private toastCtrl : ToastController,\r\n    private alertController: AlertController,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.storage.get('username').then((result) => {\r\n      this.userService.getSekretId(result).subscribe(response => {\r\n        this.password.user = response.user[0]._id;\r\n        this.sidUser = response.user[0].sekretid;\r\n        this.sp = response.user[0].spt;\r\n        if (!this.sp) {\r\n          this.presentAlert();\r\n          this.router.navigate(['/safe']);\r\n        }\r\n     })\r\n    })\r\n  }\r\n\r\n  changePassword() {\r\n      console.log('================', this.oldPassword);\r\n      this.userService.comprobeSecond(this.sidUser,this.oldPassword).subscribe(res=>{\r\n        console.log('++++++++++++', res);\r\n      if (res.ispass === 1) {\r\n        if (this.password.pass.length < 5) {\r\n          this.presentToast('La contraseña debe tener mínimo 5 caracteres');\r\n          this.password.pass = '';\r\n          this.password.repass = '';\r\n        } else {\r\n          if (this.password.pass === this.password.repass) {\r\n            this.userService.updateSecondPassword(this.password).subscribe(rs => {              \r\n              this.rs = rs;\r\n             if (this.rs.ok === true) {\r\n                this.router.navigate(['/contacts']);\r\n                this.presentToast('Se ha cambiado la contraseña de baúl con éxito');\r\n              }\r\n            })\r\n          }else{\r\n            this.presentToast('las contraseñas ingresadas no coinciden');\r\n            this.password.pass = '';\r\n          this.password.repass = '';\r\n          }\r\n        }\r\n      }else{\r\n        this.presentToast('Contraseña anterior del baúl incorrecta');\r\n      }\r\n    })\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 3500,\r\n      position: 'middle'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n\r\n  async presentAlert() {  \r\n    const alert = await this.alertController.create({\r\n      cssClass: 'mdal',\r\n      header: 'Atención',\r\n      message: `No ha asignado aún una contraseña`,\r\n      subHeader: `¡ Importante !`,           \r\n      buttons: [       \r\n        {\r\n          text: 'Aceptar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: (alertData) => {\r\n            console.log('Confirm Cancel');\r\n            this.router.navigate(['/safe']);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n}\r\n\r\n\r\ninputValidator(event: any) {\r\n  console.log('paso al metod de validacion');\r\n console.log(event.target.value);\r\n const pattern = /^[a-zA-Z0-9]*$/;   \r\n //let inputChar = String.fromCharCode(event.charCode)\r\n if (!pattern.test(event.target.value)) {\r\n   event.target.value = event.target.value.replace(/[^a-zA-Z0-9]/g, \"\");\r\n   // invalid character, prevent input\r\n\r\n }\r\n}\r\n\r\n\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}