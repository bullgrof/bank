{"version":3,"sources":["./src/app/pages/create-group/create-group.page.html","./src/app/pages/create-group/create-group.module.ts","./src/app/pages/create-group/create-group.page.scss","./src/app/pages/create-group/create-group.page.ts"],"names":[],"mappings":"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","file":"pages-create-group-create-group-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/contacts\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{'CREATEGROUPS.title' | translate}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-item>\\r\\n    \\r\\n    <ion-input placeholder=\\\"{{'CREATEGROUPS.namegroup' | translate}}\\\" [(ngModel)]=\\\"group.name\\\"  required></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let contact of contacts\\\" (click)=\\\"onClick( contact )\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"../../../assets/avatars/defaultavatar.png\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>{{ contact.alias }} ({{ contact.sidcontact }})</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" color=\\\"warning\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  \\r\\n  \\r\\n  \\r\\n  <!--ion-list>\\r\\n\\r\\n    <ion-item-sliding *ngFor=\\\"let contact of contacts\\\" >\\r\\n      <ion-item class=\\\"itemheight\\\" [routerLink]=\\\"['/chat', contact.sidcontact]\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"../../../assets/avatars/defaultavatar.png\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-label class=\\\"sc-ion-label-ios-h sc-ion-label-ios-s ios hydrated\\\">\\r\\n          <h3 class=\\\"nameUser\\\">{{ contact.alias }} </h3>\\r\\n          <p *ngIf=\\\"contact.badge === 1\\\">Mensajes sin leer</p>\\r\\n         \\r\\n        </ion-label>\\r\\n        \\r\\n        <ion-icon name=\\\"chatbox-ellipses\\\" color=\\\"warning\\\" *ngIf=\\\"contact.badge === 1\\\"></ion-icon>\\r\\n        <ion-icon slot=\\\"end\\\" name=\\\"chevron-back-outline\\\" class=\\\"backArrow\\\"></ion-icon>\\r\\n      \\r\\n      </ion-item>\\r\\n      \\r\\n      \\r\\n     \\r\\n    </ion-item-sliding>\\r\\n  </ion-list-->\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-button (click)=\\\"createGroup(usersParticipants)\\\" expand=\\\"block\\\"  color=\\\"warning\\\"> <ion-icon name=\\\"add-outline\\\"></ion-icon> {{'CREATEGROUPS.title' | translate}}</ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CreateGroupPage } from './create-group.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CreateGroupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule\r\n  ],\r\n  declarations: [CreateGroupPage]\r\n})\r\nexport class CreateGroupPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NyZWF0ZS1ncm91cC9jcmVhdGUtZ3JvdXAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { ContactsService } from 'src/app/services/contacts.service';\r\nimport { contactsCard } from '../../interfaces/contactsInterfaces';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ChatGroupService } from '../../services/chat-group.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-group',\r\n  templateUrl: './create-group.page.html',\r\n  styleUrls: ['./create-group.page.scss'],\r\n})\r\nexport class CreateGroupPage implements OnInit {\r\n  args = null;\r\n  usernameStorage = '';\r\n  sekretidrec='';\r\n  sid;\r\n  contacts: contactsCard[] = [];\r\n  participants = [];\r\n  usersParticipants = [];\r\n  idUser;\r\n  arrUser;\r\n  myUser;\r\n  group = {\r\n    name: ''\r\n  }\r\n\r\n  constructor(private storage: Storage,\r\n    private userService: UsersService,\r\n    private contactsService: ContactsService,\r\n    private toastCtrl: ToastController,\r\n    private groupService : ChatGroupService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getContacts();\r\n  }\r\n\r\n  getContacts() {\r\n    this.args = this.storage.get('username').then((result) => {\r\n      this.usernameStorage = result;\r\n\r\n      this.userService.getSekretId(this.usernameStorage).subscribe(response => {\r\n        this.sekretidrec = response.user[0].sekretid;\r\n        this.sid = response.user[0].sekretid;\r\n        this.myUser = response.user[0]._id;\r\n        this.contactsService.getContacts(this.sekretidrec).subscribe(responseContacts => {\r\n          console.log('Contactos', responseContacts);\r\n          this.contacts = responseContacts.contacts;\r\n         \r\n          console.log('ARREGLO DE CONTACTOS', this.contacts);\r\n          //this.createRomms(this.contacts);             \r\n        });\r\n\r\n      }); //End Token Service\r\n    }); //End user Service\r\n\r\n  }\r\n\r\n  onClick(check){\r\n    let arr = check\r\n   // console.log('[INFO] objeto que ingresa',arr.sidcontact );\r\n    this.userService.getUserNameBySekretId(arr.sidcontact).subscribe(resp =>{\r\n      console.log('[RESPONSE]: respuesta del sevicio de usuario', resp);\r\n      this.arrUser = resp.user[0];\r\n      this.idUser = this.arrUser._id;\r\n      \r\n      this.addParticipant(this.idUser);\r\n    })\r\n  }\r\n\r\n  addParticipant(idUser){\r\n    let alpha;\r\n    \r\n    let betha = {\r\n      receiverId: idUser,\r\n      isadmin : '0'\r\n    };\r\n\r\n    alpha = this.participants.indexOf(idUser);\r\n   // console.log('[INFO]: resultado del FIND', alpha);\r\n    if (alpha === -1 ) {\r\n      \r\n\r\n      this.participants.push(idUser);\r\n      this.usersParticipants.push(betha);\r\n   // console.log('[INFO]: arreglo de usuarios', this.participants);\r\n   // console.log('[INFO]: arreglo de usuariosparticipantes', this.usersParticipants);\r\n    }else{\r\n      let i = this.participants.indexOf( idUser );\r\n      let b = this.usersParticipants.indexOf(user => user.receiverId === idUser);\r\n      this.usersParticipants.splice( b, 1);\r\n      console.log('variable B: ', b);\r\n      this.participants.splice( i, 1 );\r\n     // console.log('[INFO]: arreglo de usuarios', this.participants);\r\n     // console.log('[INFO]: arreglo de usuariosparticipantes', this.usersParticipants);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  createGroup(users) {\r\n    console.log('groupName', this.group.name);\r\n    let ev = users.length;\r\n    if (ev < 1) {\r\n      this.showToast('El grupo debe tener mínimo 2 participantes');\r\n    } else {  \r\n      if (this.group.name === '') {\r\n        this.showToast('El grupo debe tener un nombre')\r\n      } else {\r\n        let bet = {\r\n          receiverId: this.myUser,\r\n          isadmin: '1'\r\n        }\r\n        this.usersParticipants.push(bet);\r\n        let grp = {\r\n           groupname : this.group.name,\r\n           participants :  this.usersParticipants \r\n        }\r\n        this.groupService.postCreateGroup(grp).subscribe(response => {\r\n          console.log('[INFO] Response post Group', response.ok )\r\n          if (response.ok === true) {\r\n            this.showToast('El grupo se ha creado con éxito');\r\n           // this.router.navigate(['/groups'] );      \r\n\r\n            this.router.navigate(['/groups']);\r\n              \r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async showToast(msg) {\r\n    let toast = await this.toastCtrl.create({\r\n      message: msg,\r\n      position: 'middle',\r\n      duration: 3000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n \r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}