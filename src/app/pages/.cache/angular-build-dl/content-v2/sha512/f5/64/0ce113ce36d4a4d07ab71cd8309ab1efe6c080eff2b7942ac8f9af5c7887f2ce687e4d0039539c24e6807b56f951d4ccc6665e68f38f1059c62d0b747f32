{"version":3,"sources":["src/app/pages/password-trunk/password-trunk.page.html","src/app/pages/password-trunk/password-trunk.module.ts","src/app/pages/password-trunk/password-trunk.page.scss","src/app/pages/password-trunk/password-trunk.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"warning\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/contacts\\\" icon-only></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title> Cambiar contraseña</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-card >\\r\\n    <img src=\\\"../../../assets/safe2.png\\\" class=\\\"ssl\\\">      \\r\\n    <p class=\\\"success\\\"></p>  \\r\\n    <ion-card-content>\\r\\n      <form (ngSubmit)=\\\"changePassword(fchangep)\\\" #fchangep=\\\"ngForm\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>    \\r\\n            <ion-list>    \\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"password\\\"\\r\\n                           type=\\\"text\\\" \\r\\n                           required\\r\\n                           [(ngModel)]=\\\"oldPassword\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           placeholder=\\\"Contraseña actual\\\" ></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"password\\\"\\r\\n                           type=\\\"text\\\" \\r\\n                           required\\r\\n                           [(ngModel)]=\\\"password.pass\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           placeholder=\\\"Contraseña nueva\\\" ></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item>\\r\\n                <ion-label></ion-label>\\r\\n                <ion-input name=\\\"repassword\\\"\\r\\n                           type=\\\"text\\\"                            \\r\\n                           [(ngModel)]=\\\"password.repass\\\"\\r\\n                           (onChage)=\\\"verifyPasswords(password.repass)\\\"\\r\\n                           placeholder=\\\"Repetir contraseña\\\" \\r\\n                           (input)=\\\"inputValidator($event)\\\"\\r\\n                           min=\\\"5\\\"\\r\\n                           required></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-button type=\\\"submit\\\" \\r\\n                        color=\\\"warning\\\" \\r\\n                        shape=\\\"round\\\" \\r\\n                        expand=\\\"block\\\"\\r\\n                        [disabled]=\\\"fchangep.invalid\\\">\\r\\n              Cambiar contraseña\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n    \\r\\n      </form>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  \\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PasswordTrunkPage } from './password-trunk.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PasswordTrunkPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PasswordTrunkPage]\r\n})\r\nexport class PasswordTrunkPageModule {}\r\n","export default \".ssl {\\n  width: 40%;\\n  height: 100%;\\n  margin-left: 32%;\\n  margin-top: 12px; }\\n\\n.success {\\n  color: #000000;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGFzc3dvcmQtdHJ1bmsvQzpcXFVzZXJzXFxOZW1lc3Npc1xcRGVza3RvcFxcZGV2XFxBYnJpbFxcZnN1L3NyY1xcYXBwXFxwYWdlc1xccGFzc3dvcmQtdHJ1bmtcXHBhc3N3b3JkLXRydW5rLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGNBQWM7RUFDZCxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Bhc3N3b3JkLXRydW5rL3Bhc3N3b3JkLXRydW5rLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zc2x7XHJcbiAgICB3aWR0aDogNDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMyJTtcclxuICAgIG1hcmdpbi10b3A6IDEycHg7XHJcbn1cclxuXHJcbi5zdWNjZXNze1xyXG4gICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-password-trunk',\r\n  templateUrl: './password-trunk.page.html',\r\n  styleUrls: ['./password-trunk.page.scss'],\r\n})\r\nexport class PasswordTrunkPage implements OnInit {\r\n\r\n  oldPassword = '';\r\n\r\n  password={\r\n    pass :'',\r\n    repass: '',\r\n    user: ''\r\n  }\r\n  usernameStorage;\r\n  sidUser;\r\n  sp;\r\n  rs;\r\n\r\n  constructor( private storage: Storage,\r\n    private userService: UsersService,\r\n    private toastCtrl : ToastController,\r\n    private alertController: AlertController,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.storage.get('username').then((result) => {\r\n      this.userService.getSekretId(result).subscribe(response => {\r\n        this.password.user = response.user[0]._id;\r\n        this.sidUser = response.user[0].sekretid;\r\n        this.sp = response.user[0].spt;\r\n        if (!this.sp) {\r\n          this.presentAlert();\r\n          this.router.navigate(['/safe']);\r\n        }\r\n     })\r\n    })\r\n  }\r\n\r\n  changePassword() {\r\n      console.log('================', this.oldPassword);\r\n      this.userService.comprobeSecond(this.sidUser,this.oldPassword).subscribe(res=>{\r\n        console.log('++++++++++++', res);\r\n      if (res.ispass === 1) {\r\n        if (this.password.pass.length < 5) {\r\n          this.presentToast('La contraseña debe tener mínimo 5 caracteres');\r\n          this.password.pass = '';\r\n          this.password.repass = '';\r\n        } else {\r\n          if (this.password.pass === this.password.repass) {\r\n            this.userService.updateSecondPassword(this.password).subscribe(rs => {              \r\n              this.rs = rs;\r\n             if (this.rs.ok === true) {\r\n                this.router.navigate(['/contacts']);\r\n                this.presentToast('Se ha cambiado la contraseña de baúl con éxito');\r\n              }\r\n            })\r\n          }else{\r\n            this.presentToast('las contraseñas ingresadas no coinciden');\r\n            this.password.pass = '';\r\n          this.password.repass = '';\r\n          }\r\n        }\r\n      }else{\r\n        this.presentToast('Contraseña anterior del baúl incorrecta');\r\n      }\r\n    })\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 3500,\r\n      position: 'middle'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n\r\n  async presentAlert() {  \r\n    const alert = await this.alertController.create({\r\n      cssClass: 'mdal',\r\n      header: 'Atención',\r\n      message: `No ha asignado aún una contraseña`,\r\n      subHeader: `¡ Importante !`,           \r\n      buttons: [       \r\n        {\r\n          text: 'Aceptar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: (alertData) => {\r\n            console.log('Confirm Cancel');\r\n            this.router.navigate(['/safe']);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n}\r\n\r\n\r\ninputValidator(event: any) {\r\n  console.log('paso al metod de validacion');\r\n console.log(event.target.value);\r\n const pattern = /^[a-zA-Z0-9]*$/;   \r\n //let inputChar = String.fromCharCode(event.charCode)\r\n if (!pattern.test(event.target.value)) {\r\n   event.target.value = event.target.value.replace(/[^a-zA-Z0-9]/g, \"\");\r\n   // invalid character, prevent input\r\n\r\n }\r\n}\r\n\r\n\r\n}\r\n\r\n"],"sourceRoot":"webpack:///","file":"pages-password-trunk-password-trunk-module-es5.js"}